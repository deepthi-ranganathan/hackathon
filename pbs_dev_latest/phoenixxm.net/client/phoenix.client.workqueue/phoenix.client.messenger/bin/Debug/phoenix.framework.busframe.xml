<?xml version="1.0"?>
<doc>
    <assembly>
        <name>phoenix.framework.busframe</name>
    </assembly>
    <members>
        <member name="T:Phoenix.FrameWork.BusFrame.AuditKeyDef">
            <summary>
            Audit Key definition, used to associate the record with notes and audits.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.AuditKeyDef.Availability">
            <summary>
            Define the availability of look up information provided by this definition.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.AuditKeyDef.ScreenPtidColumn">
            <summary>
            Screen ptid column if different than PTID
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.AuditKeyDef.SpecialSql">
            <summary>
            Special SQL, if the SQL starts with select then the sql willl be user; other wise it assumed as additional where condition
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.AuditKeyDef.UseObjectAcctInfo">
            <summary>
            If the account information from the object needs to be used
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.AuditKeyDef.TableName">
            <summary>
            Table name on which this key belong to
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.AuditKeyDef.#ctor(System.String,System.Boolean,System.String,System.String,Phoenix.FrameWork.BusFrame.Availability)">
            <summary>
            Key Def
            </summary>
            <param name="tableName">Table name to look up for additional identify field</param>
            <param name="useObjAcctInfo"></param>
            <param name="specialSql"></param>
            <param name="screenPtidColumn"></param>
            <param name="availability"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.AuditKeyDef.GetKeyInfo(Phoenix.FrameWork.BusFrame.BusObjectBase,System.Boolean)">
            <summary>
            Get the key information from the definition
            </summary>
            <param name="busObject"></param>
            <param name="usePrimaryDb"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.AuditKeyDef.GetKeyInfo(Phoenix.FrameWork.BusFrame.BusObjectBase,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Get the keyinformation from the definition
            </summary>
            <param name="busObject"></param>
            <param name="usePrimaryDb"></param>
            <param name="useObjAcctInfo"></param>
            <param name="usePtidFromObj"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.AuditKeyDef.LoadInfoFromBusObject(Phoenix.Windows.Forms.PNotes,Phoenix.FrameWork.BusFrame.BusObjectBase)">
            <summary>
            Load information from the busines object
            </summary>
            <param name="noteInfo"></param>
            <param name="busObject"></param>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.PBaseType">
            <summary>
            Basetype for the Into Values
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.PBaseType._value">
            <summary>
            Value of the object to hold
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.PBaseType._prevValue">
            <summary>
            Previous value of the object
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.PBaseType._xmlValue">
            <summary>
            Valued Loaded from the Xml
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.PBaseType._bvProperties">
            <summary>
            BitVector Properties
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.PBaseType.bvsCalcOnly">
            <summary>
            Bit Value for Calc Only
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.PBaseType.bvsEnumOutput">
            <summary>
            Bit Value for Enum Output
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.PBaseType.bvsEnumerable">
            <summary>
            Bit Value for Enumerable
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.PBaseType.bvsForceNullWhenDisallowed">
            <summary>
            Bit Value for ForceNullWhenDisallowed
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.PBaseType.bvsNullable">
            <summary>
            Bit Value provider for Nullable
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.PBaseType.bvsReadOnly">
            <summary>
            Bit Value provider for Read Only
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.PBaseType.bvsReadOnlyWhenNew">
            <summary>
            Bit Value provider for Read Only When New
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.PBaseType.bvsShowNullError">
            <summary>
            Bit Value provider for ShowNullError
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.PBaseType.bvsIsEnumCacheable">
            <summary>
            Bit Value provider for Is Enumeration Cacheable
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.PBaseType.bvsNoSerializeInRequest">
            <summary>
            Bit Value provider for SerializeInRequest
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.PBaseType.bvsNoSerializeInResponse">
            <summary>
            Bit Value provider for SerializeInResponse
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.PBaseType.bvsNotVisible">
            <summary>
            Bit Value provider for Not Enabled
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.PBaseType.bvsNotNull">
            <summary>
            Not Null even if the field definition is Nullable
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.PBaseType.bvsShowTextWhenReadOnly">
            <summary>
            Bit Value for Enumerable
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.PBaseType.bvsPositiveNumber">
            <summary>
            Bit Value for Positive Number 
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.PBaseType.useDatabaseDefaults">
            <summary>
            Do not generate "null" in insert statements, instead pass nothing, allow DB to use defaults. Setting this superceeds option at business object.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PBaseType.#ctor">
            <summary>
            Simple Constructor
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PBaseType.#ctor(System.String)">
             <summary>
            
             </summary>
             <param name="xmlName"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PBaseType.#ctor(System.String,Phoenix.FrameWork.Core.FieldType)">
            <summary>
            Constructor to with the value objct
            </summary>
            <param name="xmlName">Xml Tag value of the object</param>
            <param name="fieldType"></param>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PBaseType.Length">
            <summary>
            Get/Sets the length of the value
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PBaseType.FieldType">
            <summary>
            Get/Sets field Type value of the field.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNull">
            <summary>
            Gets the null property.  Trus if the value is null, otherwsie false.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PBaseType.Precision">
            <summary>
            Gets/sets the precision property of the object.
            </summary>
            <remarks>
            Used only for numeric, decimal data types; ignored for others.
            </remarks>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PBaseType.XmlTag">
            <summary>
            Get/Set the Xml Tag property
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PBaseType.XmlValue">
            <summary>
            Returns string Value for Xml write.
            </summary>
            <remarks>
            Empty string is returned if the field value <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNull"/>
            </remarks>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PBaseType.StringValue">
            <summary>
            Gets the String Value of the field.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PBaseType.GetStringValue(System.Object)">
            <summary>
            Returns the String value of the object
            </summary>
            <param name="valueObject"></param>
            <returns></returns>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PBaseType.IntValue">
            <summary>
            Get the integer value.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PBaseType.BooleanValue">
            <summary>
            Get the Boolean value.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PBaseType.DecimalValue">
            <summary>
            Get the decimal value.
            -- if the value is null Decimal.Null will be returned
            -- if the value is not a decimal then excpetion will be raised
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PBaseType.DateTimeValue">
            <summary>
            Get the Date Time value.
            -- if the value is null DateTimeValue.Null will be returned
            -- if the value is not a DateTime then excpetion will be raised
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PBaseType.EscapeSqlStringValue(System.String,System.Boolean)">
            <summary>
            Escape the input string value and returns quoted string.
            NOTE: If stringValue value is null the string null will be returned. 
            </summary>
            <param name="stringValue"></param>
            <param name="encloseQuote"></param>
            <returns>Escaped and quoted string value; or string value null</returns>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PBaseType.ValueObject">
            <summary>
            Gets/Sets the value of the field
            -- set the FieldStatus to FieldStatus.AttribEdit
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PBaseType.Value">
            <summary>
            Returns the Value Object.  This is same as the ValueObject
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PBaseType.PreviousValueObject">
            <summary>
            Get/Set the previous value of an object
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PBaseType.XmlLoadValue">
            <summary>
            value Loaded from Xml
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PBaseType.FieldStatus">
            <summary>
            Get/Sets Field status.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PBaseType.IsDirty">
            <summary>
            Gets the property information about whether the field is edited or not.
            </summary>
            <remarks>
            Compares the previous value, and current value, and if they are different return true; otherwise false.
            </remarks>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PBaseType.ShowNullError">
            <summary>
            Gets/Sets the show Null error property
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PBaseType.SkipSQLInjectValidation">
            <summary>
            This flag can be used to turn off SQL Injection Validations. This flag should be used only when programatically ensured for SQL Injection.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PBaseType.UseDatabaseDefaults">
            <summary>
            Do not generate "null" in insert statements, instead pass nothing, allow DB to use defaults. Setting this superceeds option at business object.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PBaseType.IsReadOnly">
            <summary>
            Gets/Sets the Is Read Only property of the field
            Complements <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsEnabled"/>
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PBaseType.IsEnabled">
            <summary>
            Complements the IsReadOnly.
            In UI terminology, this is assumed as Enabled/Disabled
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PBaseType.RefreshUIStatus">
            <summary>
            Internal UI Status Refresh
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PBaseType.IsReadOnlyWhenNew">
            <summary>
            Get/Sets the ReadOnlyFlag when the ActionType is new
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PBaseType.IsYes">
            <summary>
            Returns TRUE for char(1) data types = "Y", false for anything else including null
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable">
            <summary>
            Gets/Sets the nullable property of the field. Returns true if the field can be null.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PBaseType.SqlString">
            <summary>
            Returns the SQL- string value of the field value.
            </summary>
            <remarks>
            If the field value is null, then null is returned. Date Time and String Values will enclosed with quotes.
            </remarks>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PBaseType.SetValue(System.Object)">
            <summary>
            Sets the object value. Set value doesn't validate the nullability
            </summary>
            <param name="valueToset">Value of the object to set</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PBaseType.CopyValue(Phoenix.FrameWork.BusFrame.PBaseType)">
            <summary>
            Sets the object value. Set value doesn't validate the nullability
            </summary>
            <param name="valueToset">Value of the object to set</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PBaseType.ResetEdit">
            <summary>
            Reset the field to previous value.
            If the Field is loaded from XML then Prev Value is set to Base Value
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PBaseType.SqlDate">
             <summary>
            
             </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PBaseType.GetSqlString(System.Object)">
             <summary>
            
             </summary>
             <param name="valueObject"></param>
             <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PBaseType.Serialize(System.Xml.XmlWriter,System.Boolean)">
            <summary>
            base serialize method to call parametertized method.
            </summary>
            <param name="xmlWriter"></param>
            <param name="serializeValueAsAttribute"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PBaseType.Serialize(System.Xml.XmlWriter,System.Boolean,System.Boolean)">
            <summary>
             /// Serializes the value as an attribute.  If includeParameterSpecificInfo is true it will also include specific
            values like fieldtype length etc
            </summary>
            <param name="xmlWriter"></param>
            <param name="serializeValueAsAttribute"></param>
            <param name="includeParameterSpecificInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PBaseType.SerializeValue(System.Xml.XmlWriter,System.Boolean)">
            <summary>
            base function of the serialized value to not break  the calls to base.
            </summary>
            <param name="xmlWriter"></param>
            <param name="serializeValueAsAttribute"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PBaseType.SerializeValue(System.Xml.XmlWriter,System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="xmlWriter"></param>
            <param name="serializeValueAsAttribute"></param>
            <param name="includeParameterSpecificInfo"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PBaseType.CheckNullWhenEmpty(System.Xml.XmlReader)">
            <summary>
            Validate the Null Information; defaults empty tags to null value.
            
            </summary>
            <param name="vReader"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PBaseType.ReadXml(System.Xml.XmlReader)">
             <summary>
            
             </summary>
             <param name="vReader"></param>
             <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PBaseType.LoadFromXml(System.Xml.XmlNode,System.Boolean)">
             <summary>
            
             </summary>
             <param name="node"></param>
             <param name="valueSerializedAsAttribute"></param>
             <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PBaseType.StringToTypedValue(Phoenix.FrameWork.Core.FieldType,System.String,System.Boolean)">
            <summary>
            Convert the string to fieldType specified
            </summary>
            <param name="fieldType"></param>
            <param name="xmlValue"></param>
            <param name="emptyIsNull"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PBaseType.GetArrayFromXml(System.Xml.XmlNode,System.Boolean)">
             <summary>
             Loads an Array of <see cref="T:Phoenix.FrameWork.BusFrame.Filter"/> from the xml node passed
             </summary>
             <param name="node">Xml node to load from.</param>
             <param name="serializeValueAsAttribute"></param>
             <returns>Array of <see cref="T:Phoenix.FrameWork.BusFrame.Filter"/></returns>
            
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PBaseType.ValidateDataForSQLInjection">
            <summary>
            Validates the user data for SQL Injection
            </summary>
            <returns>bool true if data is valid, false if it is suspect of injection</returns>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.PBigInt">
            <summary>
            Integer class. based on Int32.  
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PBigInt.#ctor">
            <summary>
            Simple Constructor
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PBigInt.#ctor(System.String)">
            <summary>
            Constructor with value to set
            </summary>
            <param name="xmlTag">Xml Tag</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PBigInt.#ctor(System.String,System.Int32)">
            <summary>
            Constructor with value to set
            </summary>
            <param name="xmlTag">Xml Tag</param>
            <param name="valueToSet">value to set</param>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PBigInt.Value">
            <summary>
            Get/Set Value
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PBigInt.IsNull">
            <summary>
            Gets the null property.  True if the value is null, otherwsie false.
            </summary>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.PDateTime">
            <summary>
            DateTime object to hold value
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PDateTime.#ctor">
            <summary>
            Simple Constructor
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PDateTime.#ctor(System.String)">
            <summary>
            Constructor with value to set
            </summary>
            <param name="xmlTag">Value to set</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PDateTime.#ctor(System.String,System.Object)">
            <summary>
            Constructor to with the value objct
            </summary>
            <param name="valueToSet">Value to be set</param>
            <param name="xmlTag">Xml Tag value of the object</param>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PDateTime.Value">
            <summary>
            Get/Set value of the object
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PDateTime.IsNull">
            <summary>
            Gets the null property.  True if the value is null, otherwsie false.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PDateTime.SetValue(System.Object)">
            <summary>
            
            </summary>
            <param name="valueToset"></param>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PDateTime.XmlValue">
            <summary>
            Xml value of the object
            </summary>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.PDecimal">
            <summary>
            Class to wotk with decimal value and Sql database
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PDecimal.Value">
            <summary>
            Get/Set the value of the object
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PDecimal.IsNull">
            <summary>
            Gets the null property.  True if the value is null, otherwsie false.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PDecimal.#ctor">
            <summary>
            Simple Constructor
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PDecimal.#ctor(System.String)">
            <summary>
            Constructor with value to set
            </summary>
            <param name="xmlTag">Value to set</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PDecimal.#ctor(System.String,System.Decimal)">
            <summary>
            Constructor to with the value objct
            </summary>
            <param name="valueToSet">Value to be set</param>
            <param name="xmlTag">Xml Tag value of the object</param>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.PInt">
            <summary>
            Integer class. based on Int32.  
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PInt.#ctor">
            <summary>
            Simple Constructor
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PInt.#ctor(System.String)">
            <summary>
            Constructor with value to set
            </summary>
            <param name="xmlTag">Xml Tag</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PInt.#ctor(System.String,System.Int32)">
            <summary>
            Constructor with value to set
            </summary>
            <param name="xmlTag">Xml Tag</param>
            <param name="valueToSet">value to set</param>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PInt.Value">
            <summary>
            Get/Set Value
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PInt.IsNull">
            <summary>
            Gets the null property.  True if the value is null, otherwsie false.
            </summary>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.PSmallInt">
            <summary>
            Integer class. based on Int32.  
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PSmallInt.#ctor">
            <summary>
            Simple Constructor
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PSmallInt.#ctor(System.String)">
            <summary>
            Constructor with value to set
            </summary>
            <param name="xmlTag">Xml Tag</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PSmallInt.#ctor(System.String,System.Int16)">
            <summary>
            Constructor with value to set
            </summary>
            <param name="xmlTag">Xml Tag</param>
            <param name="valueToSet">value to set</param>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PSmallInt.Value">
            <summary>
            Get/Set Value
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PSmallInt.IsNull">
            <summary>
            Gets the null property.  True if the value is null, otherwsie false.
            </summary>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.PString">
            <summary>
            String class to use in SQL fetces 
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PString.TrimPaddedBlankSpace">
            <summary>
            Get/Sets the flag to trim the padded blank space.  
            Default value for this is True.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PString.#ctor">
            <summary>
            Simple Constructor
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PString.#ctor(System.String)">
            <summary>
            Constructor with value to set
            </summary>
            <param name="xmlTag">Value to set</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PString.#ctor(System.String,System.Int16)">
            <summary>
            
            </summary>
            <param name="xmlTag"></param>
            <param name="length"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PString.#ctor(System.String,System.String)">
            <summary>
            Constructor to with the value objct
            </summary>
            <param name="valueToSet">Value to be set</param>
            <param name="xmlTag">Xml Tag value of the object</param>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PString.Value">
            <summary>
            get/Sets the value of the object
            </summary>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.BOCollection">
            <summary>
            Collection of Business Objects
            </summary>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.BusObjectBase">
            <summary>
            Definition of BusObjectBase. This will be the base object of every Map
            </summary>
        </member>
        <member name="E:Phoenix.FrameWork.BusFrame.BusObjectBase.EventInitObjectComplete">
            <summary>
            Event fired before Inserting a record into database
            </summary>
        </member>
        <member name="E:Phoenix.FrameWork.BusFrame.BusObjectBase.EventBeforeInsert">
            <summary>
            Event fired before Inserting a record into database
            </summary>
        </member>
        <member name="E:Phoenix.FrameWork.BusFrame.BusObjectBase.EventAfterInsert">
            <summary>
            Event fired after Inserting a row in the database
            </summary>
        </member>
        <member name="E:Phoenix.FrameWork.BusFrame.BusObjectBase.EventBeforeDelete">
            <summary>
            Event fired before deleting a record from database
            </summary>
        </member>
        <member name="E:Phoenix.FrameWork.BusFrame.BusObjectBase.EventAfterDelete">
            <summary>
            Event fired after deleting a row from the database
            </summary>
        </member>
        <member name="E:Phoenix.FrameWork.BusFrame.BusObjectBase.EventBeforeUpdate">
            <summary>
            Event fired before Updating the Database Record
            </summary>
        </member>
        <member name="E:Phoenix.FrameWork.BusFrame.BusObjectBase.EventAfterUpdate">
            <summary>
            Event fired after updating database table
            </summary>
        </member>
        <member name="E:Phoenix.FrameWork.BusFrame.BusObjectBase.EventBeforeSelect">
            <summary>
            Event fired before selecting from database table
            </summary>
        </member>
        <member name="E:Phoenix.FrameWork.BusFrame.BusObjectBase.EventAfterSelect">
            <summary>
            Event fired after selecting from databae table
            </summary>
        </member>
        <member name="E:Phoenix.FrameWork.BusFrame.BusObjectBase.EventDefaultValues">
            <summary>
            Event to get the Default values of the object
            </summary>
        </member>
        <member name="E:Phoenix.FrameWork.BusFrame.BusObjectBase.EventAfterGetPtid">
            <summary>
            Event fired after getting Ptid
            </summary>
        </member>
        <member name="E:Phoenix.FrameWork.BusFrame.BusObjectBase.EventBeforeAction">
            <summary>
            Event Before doing any Xm Action
            <remarks>If you change the field.Value, it will be reset later by the caller
            -- If you want to override the behavior of resetting the value, set the set the value of e.Param1 to true
            </remarks>
            </summary>
        </member>
        <member name="E:Phoenix.FrameWork.BusFrame.BusObjectBase.EventAfterAction">
            <summary>
            Event fired After performing an Xm Action
            </summary>
        </member>
        <member name="E:Phoenix.FrameWork.BusFrame.BusObjectBase.EventMakeListViewSql">
            <summary>
            Event fired to make a listView SQL
            <remarks>This is an equivalent to PAM_Populate </remarks>
            </summary>
        </member>
        <member name="E:Phoenix.FrameWork.BusFrame.BusObjectBase.EventSqlStart">
            <summary>
            Event fired before an SQL Operation
            <remarks>equivalent to PAM_SQLStart, evernt fired before Select, Update, Insert</remarks>
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.BusObjectBase._extPartyRestrictedActionType">
            <summary>
            Holds new security provision, Enh # 80662.
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.BusObjectBase._identityField">
            <summary>
            Holds the identity field for the object
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.BusObjectBase._isVisibleToExtParty">
            <summary>
            Security feature added via Enh # 80662
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.ReturnListSchema">
            <summary>
            Return Result Set as DataSet, instead of Record
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.CallAdapterDoAction">
            <summary>
            Determine  the action sequence for the XmProcessor to
            invoke the Doaction.  If the DoAction determines that the
            action has to be passed over to the Adapter, then the transaction should
            adapter will be invoked to perform the action
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.IsVisibleToExtParty">
            <summary>
            Enh # 80662
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.AdapterBO">
            <summary>
            Adapter business object
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.SerializeFieldsOnCustomAction">
            <summary>
            Serialize field in custom action response
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.ListNext">
            <summary>
            Get or set the number of records to be returned by the ListView.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.ListStartFrom">
            <summary>
            Start from the record. default 0
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.ResponseTypeId">
            <summary>
            Get/Set ResponseTypeid for the XmAction.
            <remarks>This is output type Ids are used according to the XmAction</remarks>
            This value will be serialized ad OutputTypeId
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.BusObjectBase._objectStatus">
            <summary>
            Object Status
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.BusObjectBase._paramNodes">
            <summary>
            Parameter Nodes to use
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.SerializeTypeInfo">
            <summary>
            Set this flag, if the type information needs to be serialized with the fields
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.#ctor">
            <summary>
            Intializes and creates the object
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.InitializeMap">
             <summary>
             Must be Overriden at the Derived Class
             </summary>
            <exception>This function must be overriden by the programmer defined class.</exception>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.Finalize">
            <summary>
            Destructor that cleans up memory
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.OtherInfo">
            <summary>
            Get the other information proptery
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.ObjectState">
            <summary>
            Contains the object state information
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.SelectAllFields">
            <summary>
            Set this flag to use Primary Db when available; default Value is false.
            NOTE: The availability of actino will be validated against the SupporteActions and SupporteActions24x7
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.SerializeFieldsOnError">
            <summary>
            Serialize All On error; Default is false; When set to false the value from the fields will not be
            serialized, when ther is error.  Otherwise all fields will be serialized on response.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.SerializeObjectStateOnError">
            <summary>
            Serialize Object State Fields On error; Default is false; When set to false the value from the object state will not be
            serialized, when there is error.  Otherwise all object state fields will be serialized on response.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.SerializeChildBusObjects">
            <summary>
            Serialize Child Business Object collection; Default is false; When set to false the child business object collection will not be
            serialized, when there is error.  Otherwise all child business object will be serialized on request/response.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.SkipNoRowsUpdatedMessage">
            <summary>
            Do not return an error if no rows affected
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.UseDatabaseDefaults">
            <summary>
            Do not generate "null" in insert statements, instead pass nothing, allow DB to use defaults
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.SkipEnumValidation">
            <summary>
            Get/Set SkilEnumValidation Flag; Default is false;
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.AlwaysUsePrimaryDb">
            <summary>
            Set this flag to use Primary Db when available; default Value is false.
            NOTE: The availability of actino will be validated against the SupporteActions and SupporteActions24x7
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.ListViewWriter">
            <summary>
            Get/Set List View Nodes
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.IdentityField">
            <summary>
            Get/Sets Identity field of the record.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.Messages">
            <summary>
            Gets the Error Collection
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.RowVersionField">
            <summary>
            Get/Sets Identity field of the record.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.LastSysMaintDtField">
            <summary>
            Get/Sets Identity field of the record.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.ObjectStatus">
            <summary>
            Get/Sets Record Status
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.BatchSqlSupport">
            <summary>
            Get/Set the BatchSQL support.  To support batch sql for multiple actions
            use |
            </summary>
            <example>
            To support Batch SQL for New and Update the statment will be similar to
            BatchSqlSupport = XmActionType.New | XmActionType.Update;
            </example>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.ExtPartyRestrictedActionType">
            <summary>
            Enh # 80662
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.UseBatchSql">
            <summary>
            Returns true if the object participates in the Batch SQL instead of handling DoAction.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.StandardFields">
            <summary>
            Returns the Standard Fields in the object
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.CustomActionName">
            <summary>
            Get/Sets Custome Action Name
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.EnumType">
            <summary>
            Get/Sets Enumeration type property forthe XmAction
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.DbObjects">
            <summary>
            Gets the list of stored procedures/ Tables defined for this object
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.DependencyMap">
            <summary>
            Get/Set the dependencyMap
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.TableName">
            <summary>
            Gets/Sets the default Table name
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.IsOfflineSupported">
             <summary>
             True if the object can be used against offline Database
            
             </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.SupportedActions24x7">
            <summary>
            Actions supported in 24x7 Mode
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.ActionType">
            <summary>
            Get/Sets the Xm Action Type
            </summary>
            <exception>ActionNotSupported when you try to set an unsupported exception..</exception>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.CalcOnlyFields">
            <summary>
            Gets the Calculation only Fields
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.DbFields">
            <summary>
            Get the Database field on this
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.Keys">
            <summary>
            Get the Keys defined for this business object
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.SerializeValueAsAttribute">
            <summary>
            Get/Sets the use use Elements to serialize property.
            </summary>
            <remarks>
            If false the all childe node will be serialized with values in elements. otherwise in attributes
            </remarks>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.SupportedAction">
            <summary>
            Get/Sets the supported Action Property
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.ParamNodes">
            <summary>
            Get/Sets paramNodes arraylist reference.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.DbPrefix">
            <summary>
            Gets the appropraite dbprefix based on the business object avalibility in 24x7 mode
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.PciColMaps">
            <summary>
            Get PCI column Mapping from Bussiness Object
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.LoadResponseFromBO``1(``0)">
            <summary>
            REST API - Load Respose from the undelaying BO
            </summary>
            <typeparam name="T"></typeparam>
            <param name="response"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.IsActionSupported(Phoenix.FrameWork.BusFrame.XmActionType)">
            <summary>
            Gets the information about Action Supported
            </summary>
            <param name="actionToVerify">Verify the Action</param>
            <returns>Returns true if supported; othjerwise false</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.IsActionSupported(Phoenix.FrameWork.BusFrame.XmActionType,Phoenix.FrameWork.BusFrame.XmActionType)">
            <summary>
            Verifies the whether the action is supported in the given definition
            </summary>
            <param name="actionDefinition">Action Definition</param>
            <param name="actionToVerify">ActionType to verify</param>
            <returns>True if the actionType is defined in the definition</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.IsNullable(System.String)">
            <summary>
            Gets the IsNullable Field information for the field specified by xml name
            </summary>
            <param name="xmlTagName">Xml Tag name</param>
            <returns>True if the field is nullable;otherwise false</returns>
            <exception>InvalidXmlTagException</exception>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.IsNull(System.String)">
            <summary>
            Get the IsNull information by XmlName
            </summary>
            <param name="xmlTagName">Xml Tag Name</param>
            <returns>True if object is Null, otherwise false</returns>
            <exception>InvalidXmlTagException</exception>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.SetNull(System.String)">
             <summary>
             Sets the Field value to null
             </summary>
             <param name="xmlTagName"></param>
            <exception>InvalidXmlTagException</exception>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.EnumValue(System.String)">
            <summary>
            Enumerate the constraint Values
            </summary>
            <param name="xmlTagName">XmlName to be used to get the data</param>
            <returns>ArrayList of <see cref="T:Phoenix.FrameWork.BusFrame.EnumValueCollection"/></returns>
            <exception>InvalidXmlTagException</exception>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.EnumValue(System.String,Phoenix.FrameWork.Core.IDbHelper)">
            <summary>
            Get the enumerated values for the field identified by the Tag Name
            </summary>
            <param name="xmlTagName">Xml Tag Name of the field</param>
            <param name="dbHelper">Db Helper object</param>
            <returns>ArrayList of <see cref="T:Phoenix.FrameWork.BusFrame.EnumValueCollection"/></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.IsEnumerable(System.String)">
            <summary>
            Gets the IsEnumerable property of the field identified by xmlTagName
            </summary>
            <param name="xmlTagName">Xml Tag name of the field</param>
            <returns>True if the field is enumerable; otherwise false.</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.GetIFieldBase(System.String)">
            <summary>
            Gets the field by the xmlTag name identified by xmlTag Name
            </summary>
            <param name="xmlTag">Xml Tag of the field; If null value is passed null will be returned</param>
            <returns><see cref="T:Phoenix.FrameWork.BusFrame.IFieldBase"/> object if the field exist;otherwise null</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.GetFieldByXmlTag(System.String)">
            <summary>
            Gets the field by the xmlTag name identified by xmlTag Name
            </summary>
            <param name="xmlTag">Xml Tag of the field; If null value is passed null will be returned</param>
            <returns><see cref="T:Phoenix.FrameWork.BusFrame.FieldBase"/> object if the field exist;otherwise null</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.IsAccessValid(System.Boolean)">
            <summary>
            Validate the Access
            </summary>
            <param name="isClient">Boolean to indicate Client/Server</param>
            <returns>True if valid;otherwise false</returns>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.IsTranRequired">
            <summary>
            True When the transaction is action type is New, Delete, Update or Custom
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.ResetEdits">
            <summary>
            Reset Edits on all fields
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.ResetAllEnums(System.Boolean)">
            <summary>
            Reset the enumerable field outputs according to the boolean value passed
            </summary>
            <param name="isEnumOutput">value to set <see cref="P:Phoenix.FrameWork.BusFrame.FieldBase.IsEnumOutput"/> property of the fields in the collection</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.ResetFieldStatus(Phoenix.FrameWork.BusFrame.FieldStatus)">
            <summary>
            Reset all fields to the specified status
            </summary>
            <param name="newStatus"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.AddField(Phoenix.FrameWork.BusFrame.FieldBase)">
            <summary>
            Add the field to the internal collection
            </summary>
            <param name="field">Filed to add</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.GetConstraintValues(System.String)">
            <summary>
            Gets the Constraint values of a field specified by the XmlTag name
            </summary>
            <param name="xmlTag">Xml Tag name to be used.</param>
            <returns>Array List of <see cref="T:Phoenix.FrameWork.BusFrame.EnumValueCollection"/> if field by XmlTagName is found; otherwise false</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.GetXmlKey(System.Xml.XmlTextWriter)">
            <summary>
            Returns the Key Values in XML Format
            </summary>
            <returns>string </returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.DefaultStandardFields">
            <summary>
            Set Default Values for the standard fields if needed
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.IsNullsValid(System.Boolean)">
            <summary>
            Validates the all fields for null values
            </summary>
            <param name="isNew">boolean indicating the new/Update</param>
            <returns>true if all field passes null validation, otherwise false</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.GetHashCode">
            <summary>
            Get the HashCode of the object. Unique Id.
            </summary>
            <returns><see cref="T:System.Int32"/> hask code value</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.DoAction(Phoenix.FrameWork.BusFrame.XmActionType,Phoenix.FrameWork.Core.IDbHelper)">
            <summary>
            Set the action Type and perform action
            </summary>
            <param name="action">Action type to perform</param>
            <param name="dbHelper">Db Helper to use</param>
            <returns>Success/Failure</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.ValidateSvcBOSecurity(Phoenix.FrameWork.BusFrame.XmActionType)">
            <summary>
            Validates an action type is supported
            </summary>
            <param name="allowedAction">XmActionType to validate</param>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.IsInitObject">
            <summary>
            Return true whe Action type is Update, New, Default, Select
            <remarks>When doing BeforeAction all ported code should use this flag.</remarks>
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.IsNew">
            <summary>
            Returns true if the Object has to be treated as new object
            for validation purposes. This will be new when the ActionType is Default or New;otherwise false
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.DoAction(Phoenix.FrameWork.Core.IDbHelper)">
            <summary>
            Perform the action specified by the XmActionType
            </summary>
            <param name="dbHelper">DbHelper object</param>
            <returns><see cref="T:Phoenix.FrameWork.BusFrame.RecordStatus"/> for the action performed</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.IsActionSupportedInNonDayMode(Phoenix.FrameWork.Core.IDbHelper)">
            <summary>
            Validate Actions when Copy Status is not = "D"
            </summary>
            <param name="dbHelper"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.GetPtid(Phoenix.FrameWork.Core.IDbHelper,System.Int32,System.String)">
            <summary>
            Get the Ptid for the dbHelper
            </summary>
            <param name="dbHelper">DbHelper Object</param>
            <param name="counter">How many ptid is needed</param>
            <param name="tableName">Table Name to get the ptid from</param>
            <returns>decimal value of ptid</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.GetPtid(Phoenix.FrameWork.Core.IDbHelper)">
            <summary>
            Gets the PTID for the table name specified.
            </summary>
            <param name="dbHelper">Db Helper object</param>
            <returns>PTID Value</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.LoadFromObj(Phoenix.FrameWork.BusFrame.IBusinessObject)">
            <summary>
            Copies( Loads ) the object from source object
            </summary>
            <param name="sourceObj">Source Object to load from</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.LoadFromObj(Phoenix.FrameWork.BusFrame.IBusinessObject,System.Boolean)">
            <summary>
            Copies( Loads ) the object from source object
            </summary>
            <param name="sourceObj">Source Object to load from</param>
            <param name="useResponseXml">controls how the source object has to be serialized as xml.</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.CreateObject(System.String,System.Boolean)">
            <summary>
            Create a business object from the tableName provided
            </summary>
            <param name="tableName">Table name/Resource Key to create the object</param>
            <param name="isServerObject">true if the object needed is server objec; false otherwise</param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.CreateObject(System.Boolean)">
            <summary>
            Create a business object from the tableName provided
            </summary>
            <param name="isServerObject">To indicate whether the created object is client or server</param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.Serialize(System.Xml.XmlWriter,Phoenix.FrameWork.BusFrame.IDependencyMap,Phoenix.FrameWork.BusFrame.IPhoenixSerializable[],System.String[],System.Boolean,System.Boolean)">
             <summary>
            
             </summary>
             <param name="xmlWriter"></param>
             <param name="dependsMap"></param>
             <param name="paramList"></param>
             <param name="enumList"></param>
             <param name="isResponse"></param>
             <param name="isDirtyOnly"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.Serialize(System.Xml.XmlWriter,Phoenix.FrameWork.BusFrame.DependsMap,Phoenix.FrameWork.BusFrame.IPhoenixSerializable[],System.String[],System.Boolean,System.Boolean)">
            <summary>
            Serialize the current object into xmlWriter
            </summary>
            <param name="xmlWriter">Xml Writer to serialilze</param>
            <param name="dependsMap">Depends map if any</param>
            <param name="paramList">Filters/Parameters if any</param>
            <param name="enumList">enumerate List If any</param>
            <param name="isResponse">boolean to indicate if Request/Response</param>
            <param name="isDirtyOnly">boolean to indicate level of serialization</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.Serialize(System.Xml.XmlWriter,Phoenix.FrameWork.BusFrame.DependsMap,Phoenix.FrameWork.BusFrame.IPhoenixSerializable[],System.String[],System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Serialize the current object into xmlWriter
            </summary>
            <param name="xmlWriter">Xml Writer to serialilze</param>
            <param name="dependsMap">Depends map if any</param>
            <param name="paramList">Filters/Parameters if any</param>
            <param name="enumList">enumerate List If any</param>
            <param name="isResponse">boolean to indicate if Request/Response</param>
            <param name="isDirtyOnly">boolean to indicate level of serialization</param>
            <param name="serializeErrorsOnly">boolean to indicate serialization of errors only</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.GetSchema">
            <summary>
            Gets the XMLSchema for the object
            </summary>
            <returns>Schema</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.GetSchema(System.Boolean)">
            <summary>
            Gets the XMLSchema for the object
            </summary>
            <returns>Schema</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.LoadNodeToObject(System.Xml.XmlNode,System.Boolean,System.Boolean)">
            <summary>
            Load node to object
            </summary>
            <param name="xmlElement"></param>
            <param name="isLoadEnumOnly"></param>
            <param name="isClient"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.LoadFromXml(System.Xml.XmlNode,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Loads from the XmlNode
            </summary>
            <param name="xmlElement">Xml Node to load from</param>
            <param name="isClient">boolean value indicating Client/Server</param>
            <param name="isLoadEnumOnly">boolean indicating Load Enumeration only</param>
            <param name="validateObjectId">true if object id from xml need to be validated; false otherwise</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.OnActionEnumerateFields(Phoenix.FrameWork.Core.IDbHelper,System.Boolean)">
            <summary>
            Implements the Enumerate Fields Action
            </summary>
            <param name="dbHelper">DBHelper to use</param>
            <param name="isPrimaryDb">true if the priamry db has to be used;false otherwise</param>
            <returns>true if success;otherwise false</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.OnActionDefault(Phoenix.FrameWork.Core.IDbHelper,System.Boolean)">
            <summary>
            Implements the Default action process
            </summary>
            <param name="dbHelper">DBHelper to use</param>
            <param name="isPrimaryDb">true if the priamry db has to be used;false otherwise</param>
            <returns>true if success;otherwise false</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.OnActionDelete(Phoenix.FrameWork.Core.IDbHelper,Phoenix.FrameWork.BusFrame.DbToUse)">
             <summary>
            
             </summary>
             <param name="dbHelper"></param>
             <param name="dbToUse"></param>
             <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.OnActionDelete(Phoenix.FrameWork.Core.IDbHelper,System.Boolean)">
            <summary>
            Implements the Default action process
            </summary>
            <param name="dbHelper">DBHelper to use</param>
            <param name="isPrimaryDb">true if the priamry db has to be used;false otherwise</param>
            <returns>true if success;otherwise false</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.OnActionListView(Phoenix.FrameWork.Core.IDbHelper,System.Boolean)">
            <summary>
            Implements the list view actions
            </summary>
            <param name="dbHelper">DBHelper to use</param>
            <param name="isPrimaryDb">true if the priamry db has to be used;false otherwise</param>
            <returns>true if success;otherwise false</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.OnValidateObject(Phoenix.FrameWork.Core.IDbHelper,System.Boolean)">
            <summary>
            This function will be called before Insert/update. Override this to perform object level validations.
            If you override this function, make sure you have the code to call the base.
            </summary>
            <param name="dbHelper"></param>
            <param name="isPrimaryDb"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.ValidateObject">
            <summary>
            This function will allow the UI to validate the business actions
            NOTE: This will internally call OnValidateObject with null ad dbHelper and CoreService.DataService.PrimaryDbAvailable
            as the value for the isPrimaryDb
            </summary>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.OnValidateFields(Phoenix.FrameWork.Core.IDbHelper,System.Boolean)">
            <summary>
            This function will be called by the framework, before Insert/Update actions.
            If you override this function, make sure you have the code to call the base.
            </summary>
            <param name="dbHelper"></param>
            <param name="isPrimaryDb"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.OnActionInsert(Phoenix.FrameWork.Core.IDbHelper,System.Boolean)">
            <summary>
            Method implements insert action.
            </summary>
            <param name="dbHelper">DBHelper to use</param>
            <param name="isPrimaryDb">true if the priamry db has to be used;false otherwise</param>
            <returns>true if success;otherwise false</returns>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.IsListMoreRecords">
            <summary>
            Get/Set the More Record flag for the listView response
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.ExecSqlAndMakeXml(Phoenix.FrameWork.Core.IDbHelper,System.String,System.Xml.XmlWriter,System.String,System.Boolean)">
            <summary>
            Execute Sql and create Response Xml
            </summary>
            <param name="dbHelper"></param>
            <param name="sqlStmt"></param>
            <param name="writer"></param>
            <param name="recordName"></param>
            <param name="reformatColumnNames"></param>
            <returns>Number of rows</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.ExecSqlAndMakeJson(Phoenix.FrameWork.Core.IDbHelper,System.String,System.String,System.Boolean)">
            <summary>
            Execute Sql and create Response Json
            </summary>
            <param name="dbHelper"></param>
            <param name="sqlStmt"></param>
            <param name="writer"></param>
            <param name="recordName"></param>
            <param name="reformatColumnNames"></param>
            <returns>Number of rows</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.ExecSqlAndMakeXml(Phoenix.FrameWork.Core.IDbHelper,System.String,System.Xml.XmlWriter,System.String)">
            <summary>
            Execute Sql and create Response Xml
            </summary>
            <param name="dbHelper"></param>
            <param name="sqlStmt"></param>
            <param name="writer"></param>
            <param name="recordName"></param>
            <returns>Number of rows</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.ListViewCanAddRow(System.Int32)">
            <summary>
            Returns True if the current row can be added; false if the current row has to skipped
            </summary>
            <param name="rowCount"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.ListViewFetchNext(System.Int32)">
             <summary>
             Returns True when the row count reached the maximum needed rows for this response;
            
             </summary>
             <param name="rowCount">Number of row in the response</param>
             <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.MakeResultXml(System.Data.IDataReader,System.Xml.XmlWriter,System.String,System.Boolean,System.Boolean)">
            <summary>
            Make the Result Xml in record format.
            </summary>
            <param name="reader">Data Reder to read</param>
            <param name="writer">XML Writer to write</param>
            <param name="isReaderAtFirstRow">Is the first row already read</param>
            <param name="recordName">XML Name to be used for the recrod Node</param>
            <param name="reformatColumnName">True if the Column Name in the result set needs to converted into Xml</param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.MakeResultJson(System.Data.IDataReader,System.String,System.Boolean,System.Boolean)">
            <summary>
            Make the Result Xml in record format.
            </summary>
            <param name="reader">Data Reder to read</param>
            <param name="isReaderAtFirstRow">Is the first row already read</param>
            <param name="recordName">XML Name to be used for the recrod Node</param>
            <param name="reformatColumnName">True if the Column Name in the result set needs to converted into Xml</param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.OnInitComplete(Phoenix.FrameWork.Core.IDbHelper,System.Boolean)">
             <summary>
            
             </summary>
             <param name="dbHelper"></param>
             <param name="dbToUse"></param>
             <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.OnEventBeforeAction(Phoenix.FrameWork.Core.IDbHelper,System.Boolean)">
             <summary>
             Event Before action.
             NOTE: If you change any field.Value, that will be reset with the XmlLoadValue.
            
             </summary>
             <param name="dbHelper"></param>
             <param name="dbToUse"></param>
             <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.OnFetchRowDone(System.Data.IDataReader,System.Xml.XmlWriter,System.Int32)">
            <summary>
            Override this to handle FetchRow Done
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="rowCount"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.OnActionUpdate(Phoenix.FrameWork.Core.IDbHelper,Phoenix.FrameWork.BusFrame.DbToUse)">
            <summary>
            On Action Update
            </summary>
            <param name="dbHelper"></param>
            <param name="dbToUse"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.OnActionUpdate(Phoenix.FrameWork.Core.IDbHelper,System.Boolean)">
            <summary>
            Called when the Action to process iw Update.
            </summary>
            <param name="dbHelper">DBHelper to use</param>
            <param name="isPrimaryDb">true if the priamry db has to be used;false otherwise</param>
            <returns>true if success;otherwise false</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.OnActionCustom(Phoenix.FrameWork.Core.IDbHelper,System.Boolean)">
            <summary>
            Method to perform custom operations.
            </summary>
            <remarks>
            No base class operation.  Programmer must override and implement
            </remarks>
            <param name="dbHelper">DBHelper to use</param>
            <param name="isPrimaryDb">true if the priamry db has to be used;false otherwise</param>
            <returns>true if success;otherwise false</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.OnActionSelect(Phoenix.FrameWork.Core.IDbHelper,System.Boolean)">
            <summary>
            Method to perform select operations.
            </summary>
            <remarks>
            This method will be called for Update Action also;
            </remarks>
            <param name="dbHelper">DBHelper to use</param>
            <param name="isPrimaryDb">true if the priamry db has to be used;false otherwise</param>
            <returns>true if success;otherwise false</returns>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.XmReturnCode">
            <summary>
            Return code of the process
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.XmBatchReturnCode">
            <summary>
            Batch Return Code
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.SetValuesFromDefaultValues">
            <summary>
            Set all field values from default value
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.FocusedField">
            <summary>
            Get/set focused field
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.OnLoadFromXml(System.Xml.XmlNode,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Loads from the XmlNode
            </summary>
            <param name="xmlElement">Xml Node to load from</param>
            <param name="isClient">boolean value indicating Client/Server</param>
            <param name="isLoadEnumOnly">boolean indicating Load Enumeration only</param>
            <param name="validateObjectId">true if object id from xml need to be validated; false otherwise</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.OnLoadNodeToObject(System.Xml.XmlNode,System.Boolean,System.Boolean)">
            <summary>
            Load node to object
            </summary>
            <param name="xmlElement"></param>
            <param name="isLoadEnumOnly"></param>
            <param name="isClient"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.GetAccountId">
            <summary>
            Encrypt Acct no and get account ID
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.GetBatchSql(System.String,System.Text.StringBuilder,System.Int32)">
            <summary>
            Called by the XM Processor to create a Batch SQL.  A Batch Sql will be generated using
            psp_x_snd_ table name format.
            </summary>
            <param name="batchSql">Sql to append</param>
            <param name="sequenceNumber">Sequence Number to add</param>
            <param name="tableName">Table name </param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.GetBatchSql(System.Text.StringBuilder,System.Int32)">
             <summary>
            
             </summary>
             <param name="batchSql"></param>
             <param name="sequenceNumber"></param>
             <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.ValidateEnums(Phoenix.FrameWork.Core.IDbHelper,System.Boolean)">
            <summary>
             Validate Enumerablef
             </summary>
             <param name="dbHelper">DBHelper to use</param>
             <param name="isPrimaryDb">true if the priamry db has to be used;false otherwise</param>
             <returns>true if success;otherwise false</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.ValidateEdits(Phoenix.FrameWork.Core.IDbHelper,System.Boolean)">
            <summary>
             Validate the Editable fields
             </summary>
             <param name="dbHelper">DBHelper to use</param>
             <param name="isPrimaryDb">true if the priamry db has to be used;false otherwise</param>
             <returns>true if success;otherwise false</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.AddDefaultAs(Phoenix.FrameWork.BusFrame.FieldBase)">
            <summary>
            Called from the Depend Map to create a default From Map forthe field
            </summary>
            <param name="field">Field to be added with default As</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.AddDefaultFrom(Phoenix.FrameWork.BusFrame.FieldBase)">
            <summary>
            Called from the DependMap to create a default From Map forthe field
            </summary>
            <param name="field">Field to be added with default from</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.ValidateDefaultAs">
            <summary>
            Validates the DefaultAs values
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.VerifyDefaultFrom">
            <summary>
            Verified whether the object has all default from is available
            </summary>
            <returns>returns true if all default from is available; otherwise false</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.GetDbsToUse">
            <summary>
            Get the databases to use for the action type loaded
            </summary>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.GetDbsToUse(System.String,Phoenix.FrameWork.BusFrame.XmActionType)">
             <summary>
             Gets the Database to use based on the copy status and Action type
            
            		CopyStatus
            		D	-	Returns PrimaryOnly for all actions
            		N	-	Returns Secondary Only for all actions
            		C	-	Returns Both for actionType Update/Delete,
            					Returns SecondaryOnly for New
            					Returns	PrimaryOnly for others
            		B	-	Returns Both for actionTYpe Update/Delete
            					Returns PrimaryOnly for New
            					Returns	SecondaryOnly for others
            
             </summary>
             <param name="copyStatus">copyStatus</param>
             <param name="actionType">actionType</param>
             <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.GetDbsToUse(Phoenix.FrameWork.Core.XmDbStatus,Phoenix.FrameWork.BusFrame.XmActionType)">
             <summary>
             Gets the Database to use based on the copy status and Action type
            
            		CopyStatus
            		D	-	Returns PrimaryOnly for all actions
            		N	-	Returns Secondary Only for all actions
            		C	-	Returns Both for actionType Update/Delete,
            					Returns SecondaryOnly for New
            					Returns	PrimaryOnly for others
            		B	-	Returns Both for actionTYpe Update/Delete
            					Returns PrimaryOnly for New
            					Returns	SecondaryOnly for others
            
             </summary>
             <param name="copyStatus">copyStatus</param>
             <param name="actionType">actionType</param>
             <returns></returns>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.AuditDescription">
            <summary>
            Audit Description
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.AuditScreenId">
            <summary>
            Audit Screen Id
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.AuditInfo">
            <summary>
            Gets the audit defenition; This will be set only for Insert/Update/Delete
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.AuditStoreProvider">
            <summary>
            Get Audit Store provider
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.AuditDescFromTranslationX(System.Int32,System.Int32)">
            <summary>
            Get Audit Description from ML Resource
            </summary>
            <param name="languageId"></param>
            <param name="screenId"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.AuditDescFromTranslation(System.Int32,System.Object[])">
            <summary>
            Get Audit Descrtiption from ML Resource
            </summary>
            <param name="screenId"></param>
            <param name="placeHolderValues">Place holder values to replace in values</param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.SetAuditDef(Phoenix.FrameWork.Core.IDbHelper,System.Int32)">
            <summary>
            Function to set the Audit Definition
            </summary>
            <param name="dbHelper"></param>
            <param name="tableIndex"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.GetAuditKeys(System.Boolean)">
            <summary>
            Get the audit Keys information of the record
            </summary>
            <returns></returns>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.AuditKey">
            <summary>
            Get/Set Audit key information. NOTE this is used for the UI
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.SetListAuditKey(System.String)">
            <summary>
            Define the audit key for the list view
            </summary>
            <param name="tableName"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.SetListAuditKey(System.String,System.Boolean,System.String)">
            <summary>
            Define the audit key for the list view
            </summary>
            <param name="tableName"></param>
            <param name="useObjAcctInfo"></param>
            <param name="additionalWhere"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.SetListAuditKey(System.String,System.Boolean,System.String,System.String,Phoenix.FrameWork.BusFrame.Availability)">
            <summary>
            Define the audit key for the list view
            </summary>
            <param name="tableName"></param>
            <param name="useObjAcctInfo"></param>
            <param name="additionalWhere"></param>
            <param name="screenPtidColumn"></param>
            <param name="availability"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.LoadMessages(System.Xml.XmlNode)">
            <summary>
            Load Messages from the XmlNode
            </summary>
            <param name="objNode"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.LoadObjectState(System.Xml.XmlNode)">
            <summary>
            Load object state identified by VIEW_STATE
            </summary>
            <param name="objNode">Xml Node representing the object</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.LoadOtherInfo(System.Xml.XmlNode)">
            <summary>
            Load OtherInfo identified by OTHER_INFO tag
            </summary>
            <param name="objNode">Xml Node representing the object</param>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.BusObjectBase._extension">
            <summary>
            Get the business frame extenstion
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.Extension">
            <summary>
            Extension for the business object
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.IsThirdParty">
            <summary>
            Returns true if the object is used under the context of Third Party application
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.IsRunningOnServer">
            <summary>
            Returns true if the object is invoked in server environment, or UI.
            -- NOTE: Not to be confused with the server and client business object.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.IsRunningOnClient">
            <summary>
            Returns true if the object is invoked in server environment, or UI.
            -- NOTE: Not to be confused with the server and client business object.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.OrderBy">
            <summary>
            Field collection of order by
            </summary>
        </member>
        <member name="E:Phoenix.FrameWork.BusFrame.BusObjectBase.PropertyChanged">
            <summary>
            property changed event
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.NotifyPropertyChanged(Phoenix.FrameWork.BusFrame.IFieldBase)">
            <summary>
            method to raise the property change event
            </summary>
            <param name="field"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.SetFieldValue(System.String,System.Object)">
            <summary>
            SetFieldValue with forced Event behavior (EventBehavior.Force)
            </summary>
            <param name="xmlTag"></param>
            <param name="valueToSet"></param>
            <returns>0 if failed, 1 if sucess,-1 if field not found</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.SetFieldValue(System.String,System.Object,Phoenix.FrameWork.BusFrame.EventBehavior)">
             <summary>
            
             </summary>
             <param name="xmlTag"></param>
             <param name="valueToSet"></param>
             <param name="behavior"></param>
             <returns>-1 if the field not found, 0 - if failed, 1 if success</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.SetWorkflowKey(Phoenix.FrameWork.Core.IWfCDSExtension)">
            <summary>
            Set Workflow Keys
            </summary>
            <param name="extension"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.GetWorkflowKey">
            <summary>
            Get Workflow Keys
            </summary>
            <returns></returns>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.CanCreateAndLoadFields">
            <summary>
            Set if the BO can create and load fields
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.GetFieldValue(System.String)">
            <summary>
            Get field value 
            </summary>
            <param name="xmlTag"></param>
            <returns></returns>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.IsRestAPIThirdParty">
            <summary>
            Flag to indicate that the call is from RestAPI but not PhoenixUI 
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.SetRestExtension">
            <summary>
            Set the Rest Extension in derived class.
            </summary>
            <returns></returns>     
            
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectBase.SetDefaultRestExtension">
            <summary>
            Initializes the Rest Extension to Default One. Used For BO Documentation.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectBase.RestExtension">
            <summary>
            Rest Extension For the Business Object
            </summary>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.FrameworkExtensionMethods">
            <summary>
            Extensions to allow type inference for generic methods
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FrameworkExtensionMethods.AESEncryptToBase64(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String)">
            <summary>
            Encrypt Password; If the call is invoked in clien, this will return 
            </summary>
            <param name="busObj"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FrameworkExtensionMethods.RjnEncryptToBase64(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String)">
            <summary>
            Encrypt Password; If the call is invoked in clien, this will return 
            </summary>
            <param name="busObj"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FrameworkExtensionMethods.AESDecryptFromBase64(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String)">
            <summary>
            Decrypt password
            </summary>
            <param name="busObj"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FrameworkExtensionMethods.RjnDecryptFromBase64(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String)">
            <summary>
            Decrypt password
            </summary>
            <param name="busObj"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FrameworkExtensionMethods.DecryptPAN(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.String)">
            <summary>
            Decrypt PAN  
            </summary>
            <param name="busObj"></param>
            <param name="encryptedPan"></param>
            <param name="PANPartialKey"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FrameworkExtensionMethods.EncryptPAN(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.String)">
            <summary>
            Decrypt PAN using pan partial key
            </summary>
            <param name="busObj"></param>
            <param name="PANvalue"></param>
            <param name="PANPartialKey"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FrameworkExtensionMethods.GetCryptoService(Phoenix.FrameWork.BusFrame.BusObjectBase)">
            <summary>
            Get AES Crypto Service
            </summary>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FrameworkExtensionMethods.GetRjnCryptoService(Phoenix.FrameWork.BusFrame.BusObjectBase)">
            <summary>
            GetRjnCryptoService
            </summary>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FrameworkExtensionMethods.Clone``1(``0)">
            <summary>
            Return a copy of the business object
            </summary>
            <typeparam name="T"></typeparam>
            <param name="originalObject"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FrameworkExtensionMethods.ValueIfNull``2(``0,``1)">
            <summary>
            Get the value, if null return valueIfNull. valueIfNull must be the same type as field.Value.
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="U"></typeparam>
            <param name="input"></param>
            <param name="valueIfNull"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FrameworkExtensionMethods.TrimX(System.String)">
            <summary>
            Performs a Trim, but if null returns null without any exception.
            </summary>
            <param name="input"></param>
            <returns>null or Trimmed string</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FrameworkExtensionMethods.ToUpperX(System.String)">
            <summary>
            Performs a ToUpper, but if null returns null without any exception
            </summary>
            <param name="input"></param>
            <returns>null or Uppercase string</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FrameworkExtensionMethods.StrRepeatX(System.String,System.Int32)">
            <summary>
            StrRepeatX
            </summary>
            <param name="source"></param>
            <param name="times"></param>
            <returns>string</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FrameworkExtensionMethods.NumberToStringX(System.Decimal,System.Int32)">
            <summary>
            NumberToStringX
            </summary>
            <param name="number"></param>
            <param name="decimalPlaces"></param>
            <returns>string</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FrameworkExtensionMethods.StrMidX(System.String,System.Int32,System.Int32)">
            <summary>
            StrMidX
            </summary>
            <param name="source"></param>
            <param name="startPos"></param>
            <param name="length"></param>
            <returns>string</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FrameworkExtensionMethods.StrStripCharsX(System.String,System.String)">
            <summary>
            StrStripCharsX
            </summary>
            <param name="originalStr"></param>
            <param name="charsToStrip"></param>
            <returns>string</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FrameworkExtensionMethods.StrStripChars(System.String,System.String,System.String@)">
            <summary>
            StrStripChars
            </summary>
            <param name="originalStr"></param>
            <param name="charsToStrip"></param>
            <param name="returnStr"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FrameworkExtensionMethods.StrReplaceX(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            StrReplaceX
            </summary>
            <param name="source"></param>
            <param name="startPos"></param>
            <param name="length"></param>
            <param name="replaceWith"></param>
            <returns>string</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FrameworkExtensionMethods.StrFirstC(System.String@,System.Int32@)">
            <summary>
            StrFirstC
            </summary>
            <param name="source"></param>
            <param name="charValue"></param>
            <returns>string</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FrameworkExtensionMethods.StrLop(System.String@)">
            <summary>
            StrLop
            </summary>
            <param name="source"></param>
            <returns>Int32</returns>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.AccountInfo">
            <summary>
            Defines the Account Information of the data.
            </summary>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.AccountInfo.SupportedFields">
            <summary>
            Enumerates the Supported Fields for Account No
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.AccountInfo.SupportedFields.AcctType">
            <summary>
            Account Type field is supported
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.AccountInfo.SupportedFields.ApplType">
            <summary>
            Appltype field is supported
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.AccountInfo.SupportedFields.NoAcctNumber">
            <summary>
            Account Number field is supported
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.AccountInfo.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,Phoenix.FrameWork.BusFrame.AccountInfo.SupportedFields)">
            <summary>
            Initializes and createsthe object
            </summary>
            <param name="parent">Parent <see cref="T:Phoenix.FrameWork.BusFrame.BusObjectBase"/> to associate this object with</param>
            <param name="fieldsSupported">Fields Supported.  Enumeration</param>
            <remarks>Assumes that the fileds are not null</remarks>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.AccountInfo.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.String,Phoenix.FrameWork.BusFrame.AccountInfo.SupportedFields,System.Boolean)">
            <summary>
            Initializes and createsthe object
            </summary>
            <param name="parent">Parent <see cref="T:Phoenix.FrameWork.BusFrame.BusObjectBase"/> to associate this object with</param>
            <param name="colNamePrefix">Prefix to add. (e.g) TFR_ to create a map for TFR_ACCT_NO and TFR_ACCT_TYPE</param>
            <param name="xmlTagPrefix">Prefix to add befor the XmlTag. (e.g) Tfr to Create a map for TfrAcctNo and TfrAcctType</param>
            <param name="fieldsSupported">Fields Supported.  Enumeration</param>
            <param name="isNullable">True if the fiels can have null values; otherwise false</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.AccountInfo.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.String,Phoenix.FrameWork.BusFrame.AccountInfo.SupportedFields,System.Boolean,System.Int16)">
            <summary>
            
            </summary>
            <param name="parent"></param>
            <param name="colNamePrefix"></param>
            <param name="xmlTagPrefix"></param>
            <param name="fieldsSupported"></param>
            <param name="isNullable"></param>
            <param name="length"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.AccountInfo.IsTypeSupported(Phoenix.FrameWork.BusFrame.AccountInfo.SupportedFields)">
            <summary>
            Get Is Type suppported
            </summary>
            <param name="expectedField"></param>
            <returns></returns>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.AccountInfo.AcctNo">
            <summary>
            Account Number field
            </summary>
            <remarks>Throws an exception if the Account Number field is not available </remarks>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.AccountInfo.AcctType">
            <summary>
            Account Type field
            </summary>
            <remarks>Throws an exception if the Account Type field is not available </remarks>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.AccountInfo.ApplType">
            <summary>
            Appl Type Type field
            </summary>
            <remarks>Throws an exception if the Appl Type field is not available </remarks>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.AccountInfo.DepLoan">
            <summary>
            Dep Loan value of the Account. DP, LN etc.
            </summary>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.AuditDef">
            <summary>
            Summary description for AuditDef.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.AuditDef.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.Boolean)">
             <summary>
            
             </summary>
             <param name="parent"></param>
             <param name="isNew">true if the record is new</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.AuditDef.#ctor(Phoenix.FrameWork.BusFrame.IBusinessObject)">
            <summary>
            
            </summary>
            <param name="parent"></param>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.AuditDef.AcctType">
            <summary>
            Public Account Type
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.AuditDef.IsNew">
            <summary>
            true if the record is new.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.AuditDef.AcctNo">
            <summary>
            Account Number
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.AuditDef.ScreenPtid">
            <summary>
            Identity column from the main table
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.AuditDef.TablePtid">
            <summary>
            Identity column from the corresponsind table
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.AuditDef.AddAuditInfo(Phoenix.FrameWork.BusFrame.IFieldBase)">
            <summary>
            Add audit Information
            </summary>
            <param name="field"></param>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.AuditDef.ApplCode">
            <summary>
            Application Code
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.AuditDef.DefaultAuditInfo">
            <summary>
            Get the default Audit Info
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.AuditDef.StoreProcCmdStart">
            <summary>
            Stored Procedure Cmd Start.
            No exec stmt.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.AuditDef.CreateAuditEntry(Phoenix.FrameWork.Core.IDbHelper,System.Boolean)">
             <summary>
            
             </summary>
             <param name="dbHelper"></param>
             <param name="isPrimaryDb"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.AuditDef.CreateAuditEntry(Phoenix.FrameWork.Core.IDbHelper,System.String,System.String,System.String,System.String,System.String)">
             <summary>
            
             </summary>
             <param name="dbHelper"></param>
             <param name="columnName"></param>
             <param name="prevValue"></param>
             <param name="newValue"></param>
             <param name="actualPrevValue"></param>
             <param name="actualNewValue"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.AuditDef.CreateAuditEntry(Phoenix.FrameWork.Core.IDbHelper,System.Decimal,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Create AuditEntry
            </summary>
            <param name="dbHelper"></param>
            <param name="tablePtid"></param>
            <param name="tableName"></param>
            <param name="columnName"></param>
            <param name="prevValue"></param>
            <param name="newValue"></param>
            <param name="actualPrevValue"></param>
            <param name="actualNewValue"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.AuditDef.CreateAuditEntry(Phoenix.FrameWork.Core.IDbHelper,System.Int32,System.String,System.Boolean,System.Int32,System.String,System.Int32,System.Decimal,System.Decimal,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Create Audit Entry
            </summary>
            <param name="dbHelper"></param>
            <param name="branchNo"></param>
            <param name="applCode"></param>
            <param name="isNew"></param>
            <param name="emplId"></param>
            <param name="auditDescription"></param>
            <param name="screenId"></param>
            <param name="screenPtid"></param>
            <param name="tablePtid"></param>
            <param name="tableName"></param>
            <param name="acctNo"></param>
            <param name="acctType"></param>
            <param name="columnName"></param>
            <param name="prevValue"></param>
            <param name="newValue"></param>
            <param name="actualPrevValue"></param>
            <param name="actualNewValue"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.AuditDef.GetPrefixSql(Phoenix.FrameWork.Core.IDbHelper,System.Int32)">
            <summary>
            Get Prefix SQL
            </summary>
            <param name="dbHelper"></param>
            <param name="branchNo"></param>
            <returns></returns>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.AuditDef.Parent">
            <summary>
            Parent Business Object
            </summary>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.StandardFields">
            <summary>
            Summary description for StandardFields.
            </summary>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.StandardFields.SupportedFields">
            <summary>
            Defines the types of filed supported by this object
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.StandardFields.SupportedFields.EmplId">
            <summary>
            EmplId
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.StandardFields.SupportedFields.IdentityPtid">
            <summary>
            Identity Field
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.StandardFields.SupportedFields.PCPtid">
            <summary>
            PC Ptid
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.StandardFields.SupportedFields.RowVersion">
            <summary>
            Row version
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.StandardFields.SupportedFields.Status">
            <summary>
            Status Field
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.StandardFields.SupportedFields.StatusSort">
            <summary>
            Status sort Field
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.StandardFields.SupportedFields.MemoType">
            <summary>
            memoType
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.StandardFields.SupportedFields.EffectiveDt">
            <summary>
            memoType
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.StandardFields.SupportedFields.CreateDt">
            <summary>
            memoType
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.StandardFields.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,Phoenix.FrameWork.BusFrame.StandardFields.SupportedFields)">
            <summary>
            Initializes and create the Field Object
            </summary>
            <param name="parent">Parent object to which the fields has to be associated</param>
            <param name="supportedFields">fields to create</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.StandardFields.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,Phoenix.FrameWork.BusFrame.StandardFields.SupportedFields,Phoenix.FrameWork.BusFrame.Availability)">
            <summary>
            Initializes and create the Field Object
            </summary>
            <param name="parent">Parent object to which the fields has to be associated</param>
            <param name="supportedFields">fields to create</param>
            <param name="availability">Availabilty for all objects specified.</param>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.StandardFields.EffectiveDt">
            <summary>
            Effective Date Field
            </summary>
            <remarks>Throws Exception if the field is not supported</remarks>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.StandardFields.CreateDt">
            <summary>
            CreateDt  Field
            </summary>
            <remarks>Throws Exception if the field is not supported</remarks>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.StandardFields.MemoType">
            <summary>
            MemoType  Field
            </summary>
            <remarks>Throws Exception if the field is not supported</remarks>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.StandardFields.EmplId">
            <summary>
            Employee Id  Field
            </summary>
            <remarks>Throws Exception if the field is not supported</remarks>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.StandardFields.DbIdentity">
            <summary>
            Database Identity based ptid field.
            </summary>
            <remarks>Throws Exception if the field is not supported</remarks>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.StandardFields.Ptid">
            <summary>
            PC Ptid based ptid field
            </summary>
            <remarks>Throws Exception if the field is not supported</remarks>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.StandardFields.RowVersion">
            <summary>
            PC Ptid based ptid field
            </summary>
            <remarks>Throws Exception if the field is not supported</remarks>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.StandardFields.Status">
            <summary>
            Status Field
            </summary>
            <remarks>Throws Exception if the field is not supported</remarks>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.StandardFields.MakeIntPtid(Phoenix.FrameWork.BusFrame.BusObjectBase,Phoenix.FrameWork.BusFrame.Availability,Phoenix.FrameWork.BusFrame.DbIdentityType)">
            <summary>
            Creates a Ptid Field for the type Int
            </summary>
            <param name="parent"></param>
            <param name="availatility"></param>
            <param name="identityType"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.StandardFields.MakeIntRowVersion(Phoenix.FrameWork.BusFrame.BusObjectBase,Phoenix.FrameWork.BusFrame.Availability)">
            <summary>
            Creates a RowVersion for Int Field
            </summary>
            <param name="parent"></param>
            <param name="availatility"></param>
            <returns></returns>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.StandardFields.StatusSort">
            <summary>
            StatusSort Field
            </summary>
            <remarks>Throws Exception if the field is not supported</remarks>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.StandardFields.IsTypeSupported(Phoenix.FrameWork.BusFrame.StandardFields.SupportedFields)">
            <summary>
            Method to validate whether a given type is supported or not
            </summary>
            <param name="expectedType">Type to be verified for support</param>
            <returns>True if the type is supported; otherwise false</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.StandardFields.DefaultFieldValues">
            <summary>
            Set the default Values for the fields.
            The field values are defaulted only when they are available and nul..
            The following field are defaulted.
            EmplId			to Global EmployeeID
            EffectiveDt		to SystemDate
            RowVersion		to 1
            MemoType		to " "
            StatusSort		to the StatusFieldEquivalent
            </summary>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.StatusField">
            <summary>
            Summary description for StatusField.
            </summary>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.StatusField.StatusID">
            <summary>
            Enumeration for Status Information
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.StatusField.StatusID.New">
            <summary>
            New   
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.StatusField.StatusID.Edit">
            <summary>
            Edit - Active, Inactive Closed
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.StatusField.StatusID.Deposit">
            <summary>
            Deposit - Active,Closed,Dormant,Escheated,Restricted,Locked
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.StatusField.StatusID.DepositNoClosed">
            <summary>
            Deposit - Active, Dormant, Escheated, Restricted, Locked
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.StatusField.StatusID.DepositEscheated">
            <summary>
            Deposit Status - Escheated
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.StatusField.StatusID.DepositMatured">
            <summary>
            
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.StatusField.StatusID.DepositRenewPending">
            <summary>
            
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.StatusField.StatusID.DepositFromDormant">
            <summary>
            
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.StatusField.StatusID.Incomplete">
            <summary>
            
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.StatusField.StatusID.Loan">
            <summary>
            
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.StatusField.StatusID.LoanNoClosed">
            <summary>
            
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.StatusField.StatusID.LoanFromNonAccrua">
            <summary>
            
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.StatusField.StatusID.LoanLimited">
            <summary>
            
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.StatusField.StatusID.Unfunded">
            <summary>
            
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.StatusField.StatusID.ActiveInactive">
            <summary>
            
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.StatusField.NewStatus">
            <summary>
            New status ML Id; 
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.StatusField.EditStatus">
            <summary>
            Edit Status ML Id
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.StatusField.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase)">
            <summary>
            Creates a New Status Field object
            </summary>
            <param name="parent">parent object to which this filed has to be associated with</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.StatusField.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.Int16)">
            <summary>
            
            </summary>
            <param name="parent"></param>
            <param name="length"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.StatusField.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.Int16,System.Int32,System.Int32,Phoenix.FrameWork.BusFrame.Availability)">
            <summary>
            
            </summary>
            <param name="parent"></param>
            <param name="length"></param>
            <param name="newStatus"></param>
            <param name="editStatus"></param>
            <param name="availability"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.StatusField.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.Int16,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="parent"></param>
            <param name="length"></param>
            <param name="newStatus"></param>
            <param name="editStatus"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.StatusField.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.Int32,System.Int32)">
            <summary>
            New Status With Default Information
            </summary>
            <param name="parent"></param>
            <param name="newStatus"></param>
            <param name="editStatus"></param>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.Constraint">
            <summary>
            Defines the constraint object for data fiels
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.Constraint.DelimitChar">
            <summary>
            Constraint Delimiter Character
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.Constraint.LIST_ID_UnInitialized">
            <summary>
            List ID for UnInitialized
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.Constraint.LIST_ID_Initialized">
            <summary>
            Dynamic List Id Initialized
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.Constraint.Field">
            <summary>
            Field on with this constraint is attahced to
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.Constraint._constraintType">
             <summary>
             Containing Field
             </summary>
            internal FieldBase Field;		
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.Constraint.#ctor">
            <summary>
            Creates a Dynamic Combo Using SQL Data
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.Constraint.#ctor(System.Int32)">
            <summary>
            Initializes a constraint using ML list id.
            </summary>
            <remarks>
            The <see cref="P:Phoenix.FrameWork.BusFrame.Constraint.IsCodedList"/> is assmumed true.
            The <see cref="P:Phoenix.FrameWork.BusFrame.Constraint.IsNullable"/> is assumed false.
            </remarks>
            <param name="listId">ML List Id</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.Constraint.#ctor(System.Int32,System.Boolean)">
            <summary>
            Initializes a constraint using ML list id and <see cref="P:Phoenix.FrameWork.BusFrame.Constraint.IsCodedList"/> information
            </summary>
            <remarks>
            The <see cref="P:Phoenix.FrameWork.BusFrame.Constraint.IsNullable"/> is assumed false.
            </remarks>
            <param name="listId">ML list Id</param>
            <param name="isCodedList">true if the List is codd.</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.Constraint.#ctor(System.Int32,System.Boolean,Phoenix.FrameWork.BusFrame.Constraint.StaticSortType)">
            <summary>
            Initializes a constraint using ML list id and <see cref="P:Phoenix.FrameWork.BusFrame.Constraint.IsCodedList"/> information
            </summary>
            <remarks>
            The <see cref="P:Phoenix.FrameWork.BusFrame.Constraint.IsNullable"/> is assumed false.
            </remarks>
            <param name="listId">ML list Id</param>
            <param name="isCodedList">true if the List is codd.</param>
            <param name="sortList">true if you want to sort the list alphabetically. Default is false.</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.Constraint.#ctor(System.String,System.Boolean)">
            <summary>
            Constraint With Temporary Data
            </summary>
            <param name="listValue"></param>
            <param name="isCodedList"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.Constraint.#ctor(System.String,System.String,System.String)">
            <summary>
            Initialises the constraint using Table Name, 
            </summary>
            <remarks>
            Assumes <see cref="P:Phoenix.FrameWork.BusFrame.Constraint.ExtraWhere"/> as null, and <see cref="P:Phoenix.FrameWork.BusFrame.Constraint.ConstraintType"/> as <see cref="F:Phoenix.FrameWork.BusFrame.DbConstraintType.CodeMustExist"/>
            </remarks>
            <param name="tableName"><see cref="P:Phoenix.FrameWork.BusFrame.Constraint.TableName"/> for the constraint</param>
            <param name="codeColumn"><see cref="P:Phoenix.FrameWork.BusFrame.Constraint.CodeColumn"/> for the constraint</param>
            <param name="descriptionColumn"><see cref="P:Phoenix.FrameWork.BusFrame.Constraint.DescriptionColumn"/> for the constraint</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.Constraint.#ctor(System.String,System.String,System.String,System.String,Phoenix.FrameWork.BusFrame.DbConstraintType)">
            <summary>
            Initialize a new constraint.
            </summary>
            <param name="tableName"><see cref="P:Phoenix.FrameWork.BusFrame.Constraint.TableName"/> for the constraint</param>
            <param name="codeColumn"><see cref="P:Phoenix.FrameWork.BusFrame.Constraint.CodeColumn"/> for the constraint</param>
            <param name="descriptionColumn"><see cref="P:Phoenix.FrameWork.BusFrame.Constraint.DescriptionColumn"/> for the constraint</param>
            <param name="extraWhereClause"><see cref="P:Phoenix.FrameWork.BusFrame.Constraint.ExtraWhere"/> of the constraint</param>
            <param name="constraintType"><see cref="P:Phoenix.FrameWork.BusFrame.Constraint.ConstraintType"/> of the constraint</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.Constraint.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initialises the constraint using Table Name, 
            </summary>
            <remarks>
            Assumes <see cref="P:Phoenix.FrameWork.BusFrame.Constraint.ExtraWhere"/> as null, and <see cref="P:Phoenix.FrameWork.BusFrame.Constraint.ConstraintType"/> as <see cref="F:Phoenix.FrameWork.BusFrame.DbConstraintType.CodeMustExist"/>
            </remarks>
            <param name="constraintName">Name of the Constraint to uniquely identify.</param>
            <param name="tableName"><see cref="P:Phoenix.FrameWork.BusFrame.Constraint.TableName"/> for the constraint</param>
            <param name="codeColumn"><see cref="P:Phoenix.FrameWork.BusFrame.Constraint.CodeColumn"/> for the constraint</param>
            <param name="descriptionColumn"><see cref="P:Phoenix.FrameWork.BusFrame.Constraint.DescriptionColumn"/> for the constraint</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.Constraint.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initialises the constraint using Table Name, 
            </summary>
            <remarks>
            Assumes <see cref="P:Phoenix.FrameWork.BusFrame.Constraint.ExtraWhere"/> as null, and <see cref="P:Phoenix.FrameWork.BusFrame.Constraint.ConstraintType"/> as <see cref="F:Phoenix.FrameWork.BusFrame.DbConstraintType.CodeMustExist"/>
            </remarks>
            <param name="constraintName">Name of the Constraint to uniquely identify.</param>
            <param name="tableName"><see cref="P:Phoenix.FrameWork.BusFrame.Constraint.TableName"/> for the constraint</param>
            <param name="codeColumn"><see cref="P:Phoenix.FrameWork.BusFrame.Constraint.CodeColumn"/> for the constraint</param>
            <param name="descriptionColumn"><see cref="P:Phoenix.FrameWork.BusFrame.Constraint.DescriptionColumn"/> for the constraint</param>
            <param name="extraWhereClause">Define any extra where clause to use</param>
            <param name="orderBy">any order by clause to use in populating</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.Constraint.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,Phoenix.FrameWork.BusFrame.DbConstraintType,System.Boolean)">
            <summary>
            Initialises the class for constraint populated from database.
            </summary>
            <param name="constraintName">Name of the Constraint to uniquely identify.</param>
            <param name="tableName"><see cref="P:Phoenix.FrameWork.BusFrame.Constraint.TableName"/> for the constraint</param>
            <param name="codeColumn"><see cref="P:Phoenix.FrameWork.BusFrame.Constraint.CodeColumn"/> for the constraint</param>
            <param name="descriptionColumn"><see cref="P:Phoenix.FrameWork.BusFrame.Constraint.DescriptionColumn"/> for the constraint</param>
            <param name="extraWhereClause">Define any extra where clause to use</param>
            <param name="orderBy">any order by clause to use in populating</param>
            <param name="constraintType">Defines the type of constraint</param>
            <param name="isCacheable">Pass True if the constraint value are cacheable.</param>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.Constraint.ForceIngnoreStatus">
            <summary>
            true if we need to ignore the status, since we are want to look into the closed records
            also.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.Constraint.ForceIngnoreStatue">
            <summary>
            true if we need to ignore the status, since we are want to look into the closed records
            also.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.Constraint.Is24x7Supported">
            <summary>
            Set the 24x7 support for the constraint
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.Constraint.IsOfflineSupported">
            <summary>
            Set the Is the constraint available against offline.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.Constraint.SpecialSql">
            <summary>
            Sets the special Sql for the constraint.
            </summary>
            <remarks>
            useful for the user enhancd sql to be used for Populating the constraint.
            </remarks>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.Constraint.ConstraintSql">
            <summary>
            Gets/Sets the constraint Sql for the object.
            </summary>
            <remarks>
            It will reset the <see cref="P:Phoenix.FrameWork.BusFrame.Constraint.SpecialSql"/>.  
            </remarks>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.Constraint.IsCodedList">
            <summary>
            Gets the boolean value indicating whether the constaint contains coded list or not
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.Constraint.IsActiveOnly">
            <summary>
            Sets or Gets the information for the constraint to include Active elements only.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.Constraint.IsPopulated">
            <summary>
            True if the constraint is populated; otherwise false
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.Constraint.Reset(System.Boolean)">
            <summary>
            Reset the collection
            </summary>
            <param name="userAddedOnly"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.Constraint.Reset">
            <summary>
            Reset the Constraint values. 
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.Constraint.IsCacheable">
            <summary>
            Get the property value for Caching. True indicates the enumerated value is cacheable for later use.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.Constraint.IsNullable">
            <summary>
            Gets/Sets the information about whether the constraint is nullable or not.
            </summary>
            <remarks>
            When this value is true, then a CodeValue of -1, and Description of --Null-- will be added to the constraint.
            </remarks>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.Constraint.IsEffectiveDated">
            <summary>
            Gets/Sets the information about whether the constraint is Effective dated.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.Constraint.TableName">
            <summary>
            Gets/Sets the Table Name to be used in building the Dynamic SQL for the Constraint.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.Constraint.CodeColumn">
            <summary>
            Gets/Sets the column name to populate code value of the constraint.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.Constraint.DescriptionColumn">
            <summary>
            Gets/Sets the column name to populate description of the constraint.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.Constraint.ExtraWhere">
            <summary>
            Gets/Sets the additional Where clause to use in the SQL build.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.Constraint.OrderBy">
            <summary>
            Order By Clause
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.Constraint.ConstraintType">
            <summary>
            Gets/Sets the <see cref="T:Phoenix.FrameWork.BusFrame.DbConstraintType"/> type of the constraint.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.Constraint.ListId">
            <summary>
            Gets/Sets the Static List Id of the constraint. Use ML and load the constraints.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.Constraint.IsStaticList">
            <summary>
            Returns true if the Constrains is populated using <see cref="P:Phoenix.FrameWork.BusFrame.Constraint.ListId"/>.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.Constraint.Values">
            <summary>
            Gets the <see cref="T:System.Collections.ArrayList"/> of <see cref="T:Phoenix.FrameWork.BusFrame.EnumValue"/> for this constraint.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.Constraint.GetDescriptionSql(System.Boolean,Phoenix.FrameWork.Core.IDbHelper,System.String,System.String)">
            <summary>
            Returns the description SQL
            </summary>
            <param name="usePrimaryDb"></param>
            <param name="dbHelper"></param>
            <param name="tblAlias"></param>
            <param name="keyValue"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.Constraint.GetSelectSql(Phoenix.FrameWork.Core.IDbHelper,System.Boolean,System.String)">
            <summary>
            Returns the SQL Needs to be populate the constraint.
            </summary>
            <remarks>
            If the constraint uses <see cref="P:Phoenix.FrameWork.BusFrame.Constraint.SpecialSql"/>, then returns the value of it.
            Otherwise create the SQL as follows<BR/>
            <see cref="P:Phoenix.FrameWork.BusFrame.Constraint.ConstraintSql"/> + { 
             WHERE {ExtraWhere} +  <BR/>
               {{AND} additionalWhere } + <BR/>
               {{AND} <see cref="P:Phoenix.FrameWork.BusFrame.Constraint.TableName"/>.status = 'Active'}
               {{AND} <see cref="P:Phoenix.FrameWork.BusFrame.Constraint.TableName"/>.effective_dt = 'current_datetime} 
            </remarks>
            <param name="dbHelper">Database Helper Object to use</param>
            <param name="isPrimary">use primary or secondary database</param>
            <param name="additionalWhere">additional Where clause to be used </param>
            <returns>Sql string</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.Constraint.Populate(Phoenix.FrameWork.Core.IDbHelper,System.Boolean,System.Boolean)">
            <summary>
            Populates the Constraint using dbHelper
            </summary>
            <param name="dbHelper">Database helper for the connection</param>
            <param name="resetFlag">True if you want to repopulate the constraint;</param>
            <param name="usePrimaryDb">True to use primary database</param>
            <returns>Returns true if success; otherwise false.</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.Constraint.Populate(Phoenix.FrameWork.Core.IDbHelper,System.String,System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="dbHelper">Database helper for the connection</param>
            <param name="additionalWhere">Additional where to be used</param>
            <param name="resetFlag">True if you want to repopulate the constraint;</param>
            <param name="usePrimary">True  to use primary</param>
            <returns>Returns true if success; otherwise false.</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.Constraint.GetEnumValue(Phoenix.FrameWork.Core.IDbHelper,System.String,System.Boolean,System.Boolean,System.Object)">
            <summary>
            
            </summary>
            <param name="dbHelper">Database helper for the connection</param>
            <param name="additionalWhere">Additional where to be used</param>
            <param name="resetFlag">True if you want to repopulate the constraint;</param>
            <param name="usePrimary">True  to use primary</param>
            <param name="valueToGet">Value to get</param>
            <returns>Returns true if success; otherwise false.</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.Constraint.GetEnumValue(Phoenix.FrameWork.Core.IDbHelper,System.String,System.Boolean,System.Boolean,System.Object,System.Boolean)">
            <summary>
            
            </summary>
            <param name="dbHelper">Database helper for the connection</param>
            <param name="additionalWhere">Additional where to be used</param>
            <param name="resetFlag">True if you want to repopulate the constraint;</param>
            <param name="usePrimary">True  to use primary</param>
            <param name="valueToGet">Value to get</param>
            <param name="ignoreStatus">True to ignore status</param>
            <returns>Returns true if success; otherwise false.</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.Constraint.Serialize(System.Xml.XmlWriter,System.Boolean)">
            <summary>
            Serialized the constraint for XML 
            </summary>
            <param name="xmlWriter">Xml writer to use.</param>
            <param name="valueSerializedAsAttributes">Value was serialized as attributes inst. of element text</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.Constraint.SetFieldStatus(System.Object,Phoenix.Windows.Forms.VisibilityState,Phoenix.Windows.Forms.EnableState)">
            <summary>
            Set Field status
            </summary>
            <param name="codeValue"></param>
            <param name="visible"></param>
            <param name="enabled"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.Constraint.LoadFromXml(System.Xml.XmlNode,System.Boolean)">
            <summary>
            Deserialize the object from the XmlNode
            </summary>
            <param name="xmlNode">xmlNode containing Data</param>
            <param name="serializeValueAsAttribute">Serialize Value as attributes</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.Constraint.Deserialize(System.Xml.XmlNode,System.Boolean)">
            <summary>
            Deserialize the object from the XmlNode
            </summary>
            <param name="xmlNode">xmlNode containing Data</param>
            <param name="serializeValueAsAttribute">Serialize Value as attributes</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.Constraint.GetHashCode">
            <summary>
            Returns the HashCode for the Constraint object.
            </summary>
            <remarks>
            If the constraint is based on static list<see cref="P:Phoenix.FrameWork.BusFrame.Constraint.IsStaticList"/>  then returns the static list id.
            otherwise returns the hashcode generated based on the Select SQL
            </remarks>
            <returns></returns>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.Constraint.ValidValues">
            <summary>
            Returns valid values in a string format.
            </summary>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.ConstraintFactory">
            <summary>
            Summary description for ConstraintFactory.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.ConstraintFactory.Instance">
            <summary>
            Instance Object of the singleton
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.ConstraintFactory.CreateObject(System.String)">
            <summary>
            Creates the specified object from the resource.
            </summary>
            <param name="constraintName">Key value to get the string info of the assembly and object</param>
            <returns>Valid object if success; otherwise null</returns>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.ConstraintDef">
            <summary>
            Constraint Definition
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.ConstraintDef.Name">
            <summary>
            Constraint Name
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.ConstraintDef.TableName">
            <summary>
            Table Name to use
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.ConstraintDef.CodeColumn">
            <summary>
            Code Column
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.ConstraintDef.DescriptionColumns">
            <summary>
            Descriprition Columns
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.ConstraintDef.ConstraintType">
            <summary>
            Constraint Type
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.ConstraintDef.WhereClause">
            <summary>
            Where Clause to use
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.ConstraintDef.WhereClauseParameters">
            <summary>
            Where Clause Parameters..  ML Items
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.ConstraintDef.OrderBy">
            <summary>
            Order By Clause
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.ConstraintDef.IsCacheable">
            <summary>
            Is Cacheable 
            </summary>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.ConstraintResource">
            <summary>
            Constraint Resource 
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.ConstraintResource.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="assemblyName"></param>
            <param name="resourceName"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.ConstraintResource.GetObject(System.String)">
            <summary>
            Gets the Constraint Object
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.DbBigInt">
            <summary>
            Summary description for DbInt.
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.DbBigInt.Null">
            <summary>
            DbInt Null value
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.DbBigInt.MinValue">
            <summary>
            MinValue  this Integer Data can have
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.DbBigInt.MaxValue">
            <summary>
            MaxCalue  this Integer Data can have
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbBigInt.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.String,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.ParameterDirection,Phoenix.FrameWork.BusFrame.Availability,System.Int16)">
            <summary>
            Creates and Initialize the type
            </summary>
            <param name="baseRecord">Base Record</param>
            <param name="tableName">Table name to map</param>
            <param name="columnName">Column name to map</param>
            <param name="isNullable">Boolean to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
            <param name="xmlName">Xml Name of the field</param>
            <param name="direction">Paremeter direction dictates to use if the table name is a stored procedure</param>
            <param name="availability">Defines the field availability when the database is changed</param>
            <param name="paramOrder">Parameter Order applicable only for Stored Procedure</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbBigInt.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.String,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.Availability)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Assumes the default Table name from baseRecord
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="tableName">Table name to map</param>
            <param name="columnName">Column name to map</param>
            <param name="isNullable">Boolean to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
            <param name="xmlName">Xml Name of the field</param>
            <param name="availability">Defines the field availability when the database is changed</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbBigInt.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.ParameterDirection,System.Int16)">
            <summary>
            Creates and Initialize the type. Useful for Stored Procedure Parameters
            </summary>
            <remarks>
            Assumes the default Table name from baseRecord
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="columnName">Column name to map</param>
            <param name="isNullable">Boolean to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
            <param name="xmlName">Xml Name of the field</param>
            <param name="direction">Paremeter direction dictates to use if the table name is a stored procedure</param>
            <param name="paramOrder">Parameter Order applicable only for Stored Procedure</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbBigInt.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.Availability)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Assumes the default Table name from baseRecord
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="columnName">Column name to map</param>
            <param name="isNullable">Boolean to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
            <param name="xmlName">Xml Name of the field</param>
            <param name="availability">Defines the field availability when the database is changed</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbBigInt.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Boolean,System.String)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Assumes the default Table name from baseRecord
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="columnName">Column name to map</param>
            <param name="isNullable">Boolean to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
            <param name="xmlName">Xml Name of the field</param>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbBigInt.ValidMinValue">
            <summary>
            Miimum value allowed for this field. 
            -- While setting the value, if the value is smaller than the DbtinyInt.MinValue
            -- then that will be set to DbInt.MinValue
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbBigInt.ValidMaxValue">
            <summary>
            Maximum allowed value for this field
            -- While setting the value, if the value is bigger than the DbInt.MaxValue then that will be the maxValue
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbBigInt.IsDirty">
            <summary>
            true if the value is changed
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbBigInt.Value">
            <summary>
            Gets/Sets the int64 value of the object
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbBigInt.PreviousValue">
            <summary>
            Previoust value of the object
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbBigInt.IsNull">
            <summary>
            Gets the null property.  True if the value is null, otherwsie false.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbBigInt.LoadStringValue(System.String,System.Boolean)">
            <summary>
            Loads the string Value from string passed. The input string must be base64
            </summary>
            <param name="nodeValue">string value</param>
            <param name="isNull">bool if the value is null</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbBigInt.SetFieldValue(System.Object)">
            <summary>
            Sets the field Value
            -- Could throw FormatException, InvalidcastException, PhoenixArgumentOutOfRangeException
            </summary>
            <param name="valueToSet"></param>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.DbBit">
            <summary>
            Summary description for DbBit.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbBit.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.String,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.ParameterDirection,Phoenix.FrameWork.BusFrame.Availability,System.Int16)">
            <summary>
            Creates and Initialize the type
            </summary>
            <param name="baseRecord">Base Record</param>
            <param name="tableName">Table name to map</param>
            <param name="columnName">Column name to map</param>
            <param name="isNullable">Boolean to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
            <param name="xmlName">Xml Name of the field</param>
            <param name="direction">Paremeter direction dictates to use if the table name is a stored procedure</param>
            <param name="availability">Defines the field availability when the database is changed</param>
            <param name="paramOrder">Parameter Order applicable only for Stored Procedure</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbBit.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.ParameterDirection,System.Int16)">
            <summary>
            Creates and Initialize the type: Useful Stored Procedures
            </summary>
            <remarks>
            Assumes the default Table name from baseRecord
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="columnName">Column name to map</param>
            <param name="isNullable">Boolean to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
            <param name="xmlName">Xml Tag Name</param>
            <param name="direction">Paremeter direction dictates to use if the table name is a stored procedure</param>
            <param name="paramOrder">Parameter Order applicable only for Stored Procedure</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbBit.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.String,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.Availability)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Assumes the default Table name from baseRecord
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="tableName">Table name to map</param>
            <param name="columnName">Column name to map</param>
            <param name="isNullable">Boolean to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
            <param name="xmlName">Xml Tag Name</param>
            <param name="availability">Defines the field availability when the database is changed</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbBit.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.Availability)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Assumes the default Table name from baseRecord
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="columnName">Column name to map</param>
            <param name="isNullable">Boolean to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
            <param name="xmlName">Xml Tag Name</param>
            <param name="availability">Defines the field availability when the database is changed</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbBit.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Boolean,System.String)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Assumes the default Table name from baseRecord
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="columnName">Column name to map</param>
            <param name="isNullable">Boolean to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
            <param name="xmlName">Xml Tag Name</param>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbBit.XmlValue">
            <summary>
            Get the XMl Value
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbBit.Value">
            <summary>
            short value of of the object
            </summary>
            <remarks>
            Throws ArgumentNullException if the value is Null
            </remarks>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbBit.PreviousValue">
            <summary>
            Get/Set the PreviousValue of the Object
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbBit.LoadStringValue(System.String,System.Boolean)">
            <summary>
            Loads the string Value from string passed
            </summary>
            <param name="nodeValue">string value</param>
            <param name="isNull">bool if the value is null</param>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.DbChar">
            <summary>
            Definition of Character datatype.  This class can be mapped to char data type of RDBMS.
            
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.DbChar.Null">
            <summary>
            Null Value definition
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.DbChar.MaxLength">
            <summary>
            Max Length Allowed
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbChar.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.String,System.Int16,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.ParameterDirection,Phoenix.FrameWork.BusFrame.Availability,System.Int16)">
            <summary>
            Initializes and creates the object: Use full to map stored proc parameters
            </summary>
            <param name="baseRecord">Base Record of the field</param>
            <param name="tableName">Table name associated with</param>
            <param name="columnName">Column name to be mapped</param>
            <param name="length">length of the char</param>
            <param name="isNullable">Boolean value indicating the <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/>  property</param>
            <param name="xmlName">Xml Name to use</param>
            <param name="direction">Paremeter direction dictates to use if the table name is a stored procedure</param>
            <param name="availability">Defines the field availability when the database is changed</param>
            <param name="paramOrder">Parameter Order applicable only for Stored Procedure</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbChar.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Int16,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.ParameterDirection,System.Int16)">
            <summary>
            Initializes and creates the object.  Useful for Stored Procedure
            </summary>
            <param name="baseRecord">Base Record of the field</param>
            <param name="columnName">Column name to be mapped</param>
            <param name="length">length of the char</param>
            <param name="isNullable">Boolean value indicating the <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/>  property</param>
            <param name="xmlName">Xml Name to use</param>
            <param name="direction">Paremeter direction dictates to use if the table name is a stored procedure</param>
            <param name="paramOrder">Parameter Order applicable only for Stored Procedure</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbChar.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.String,System.Int16,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.Availability)">
            <summary>
            Initializes and creates the object
            </summary>
            <param name="baseRecord">Base Record of the field</param>
            <param name="tableName">Table name associated with</param>
            <param name="columnName">Column name to be mapped</param>
            <param name="length">length of the char</param>
            <param name="isNullable">Boolean value indicating the <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/>  property</param>
            <param name="xmlName">Xml Name to use</param>
            <param name="availability">Availability</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbChar.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Int16,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.Availability)">
            <summary>
            Initializes and creates the object
            </summary>
            <param name="baseRecord">Base Record of the field</param>
            <param name="columnName">Column name to be mapped</param>
            <param name="length">length of the char</param>
            <param name="isNullable">Boolean value indicating the <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/>  property</param>
            <param name="xmlName">Xml Name to use</param>
            <param name="availability">Availability</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbChar.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Int16,System.Boolean,System.String)">
            <summary>
            Initializes and creates the object
            </summary>
            <param name="baseRecord">Base Record of the field</param>
            <param name="columnName">Column name to be mapped</param>
            <param name="length">length of the char</param>
            <param name="isNullable">Boolean value indicating the <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/>  property</param>
            <param name="xmlName">Xml Name to use</param>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbChar.IsDirty">
            <summary>
            Returns true if the object is dirty
            </summary>		
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbChar.TrimPaddedBlankSpace">
            <summary>
            Get/Sets the flag to trim the padded blank space.  
            Default value for this is True.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbChar.PreviousValue">
            <summary>
            Previoust value of the object
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbChar.Value">
            <summary>
            String Value of the Object
            </summary>
            <remarks>
            Passing the null will set the Value Object to null
            </remarks>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbChar.SqlString">
            <summary>
            Gets the SqlString.  replaces double quotes with single quotes
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbChar.ValueObject">
            <summary>
            The object containing the value of this 
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbChar.PreviousValueObject">
            <summary>
            Previous Value of the current filed.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbChar.ValidateDefinition">
            <summary>
            Validate the Definition of the field
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbChar.LoadStringValue(System.String,System.Boolean)">
            <summary>
            Loads the string Value from string passed
            </summary>
            <param name="nodeValue">string value</param>
            <param name="isNull">bool if the valeu is null</param>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.DbDateTime">
            <summary>
            Summary description for DbDateTime.
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.DbDateTime.Null">
            <summary>
            Null Value of the Data Type
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.DbDateTime.MaxValue">
            <summary>
            Max Value of the Date Time 9999-12-31 23:59:459
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.DbDateTime.MinValue">
            <summary>
            Min Value for the type 1753-01-01
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbDateTime.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.String,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.ParameterDirection,Phoenix.FrameWork.BusFrame.Availability,System.Int16)">
            <summary>
            Creates and Initialize the type
            </summary>
            <param name="baseRecord">Base Record</param>
            <param name="tableName">Table name to map</param>
            <param name="columnName">Column name to map</param>
            <param name="isNullable">Boolen to set Nullable property</param>
            <param name="xmlName">Xml Name</param>
            <param name="direction">Paremeter direction dictates to use if the table name is a stored procedure</param>
            <param name="availability">Defines the field availability when the database is changed</param>
            <param name="paramOrder">Defines the parameter order: applicable only for Stored procedure</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbDateTime.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.ParameterDirection,System.Int16)">
            <summary>
            Creates and Initialize the type. Useful for Stored Procedure
            </summary>
            <remarks>
            TableName is defaulted from the base record.
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="columnName">Column name to map</param>
            <param name="isNullable">Boolen to set Nullable property</param>
            <param name="xmlName">Xml Tag Name</param>
            <param name="direction">Paremeter direction dictates to use if the table name is a stored procedure</param>
            <param name="paramOrder">Parameter Order applicable only for Stored Procedure</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbDateTime.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.String,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.Availability)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            TableName is defaulted from the base record.
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="tableName">Table Name associated with</param>
            <param name="columnName">Column name to map</param>
            <param name="isNullable">Boolen to set Nullable property</param>
            <param name="xmlName">Xml Tag Name</param>
            <param name="availability">Xapi Availability</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbDateTime.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.Availability)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            TableName is defaulted from the base record.
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="columnName">Column name to map</param>
            <param name="isNullable">Boolen to set Nullable property</param>
            <param name="xmlName">Xml Tag Name</param>
            <param name="availability">Xapi Availability</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbDateTime.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Boolean,System.String)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            TableName is defaulted from the base record.
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="columnName">Column name to map</param>
            <param name="isNullable">Boolen to set Nullable property</param>
            <param name="xmlName">Xml Tag Name</param>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbDateTime.ValidMinValue">
            <summary>
            Miimum value allowed for this field. 
            -- While setting the value, if the value is smaller than the DbtinyInt.MinValue
            -- then that will be set to DbDateTime.MinValue
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbDateTime.ValidMaxValue">
            <summary>
            Maximum allowed value for this field
            -- While setting the value, if the value is bigger than the DbDateTime.MaxValue then that will be the maxValue
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbDateTime.XmlValue">
            <summary>
            Gets the value in Valid XML Format
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbDateTime.IsNull">
            <summary>
            Gets the null property.  True if the value is null, otherwsie false.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbDateTime.GetSqlString(System.Object)">
            <summary>
            Get Sql String
            </summary>
            <param name="valueObject"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbDateTime.GetSqlDate(System.Object)">
            <summary>
            
            </summary>
            <param name="dateValue"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbDateTime.GetSqlDateTime(System.Object)">
            <summary>
            
            </summary>
            <param name="dateValue"></param>
            <returns></returns>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbDateTime.StringValue">
            <summary>
            Gets the strign value of the object.  Returns 'null' if the value is null. 
            Otherwise  string  formatted using "yyyy-MM-dd hh:mm:ss.fff"
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbDateTime.SqlString">
            <summary>
            Returns Sql String. 
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbDateTime.Value">
            <summary>
            Value of the object
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbDateTime.PreviousValue">
            <summary>
            Previoust value of the object
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbDateTime.LoadStringValue(System.String,System.Boolean)">
            <summary>
            Loads the string Value from string passed
            </summary>
            <remarks>
            uses <see cref="P:System.Globalization.CultureInfo.InvariantCulture"/> for convertion
            </remarks>
            <param name="nodeValue">string value</param>
            <param name="isNull">bool if the value is null</param>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.DbDecimal">
            <summary>
            Summary description for DbDecimal.
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.DbDecimal.Null">
            <summary>
            Public value indicating Decimal Null
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.DbDecimal.MinValue">
            <summary>
            Min Value DbDecimal can have.
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.DbDecimal.MaxValue">
            <summary>
            Max Value DbDecimal can have 
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.DbDecimal.MaxScale">
            <summary>
            Maxium Length allowed
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.DbDecimal.MaxPrecision">
            <summary>
            Maxium Length allowed
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbDecimal.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.String,System.Int16,System.Int16,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.ParameterDirection,Phoenix.FrameWork.BusFrame.Availability,System.Int16)">
            <summary>
            Creates and Initialize the type
            </summary>
            <param name="baseRecord">Base Record</param>
            <param name="tableName">Table name to map</param>
            <param name="columnName">Column name to map</param>
            <param name="scale">Scale of of the decimal</param>
            <param name="precision">precision of the decimal</param>
            <param name="isNullable">Boolean to set Nullable property</param>
            <param name="xmlName">Xml Name of the field</param>
            <param name="direction">Paremeter direction dictates to use if the table name is a stored procedure</param>
            <param name="availability">Defines the field availability when the database is changed</param>
            <param name="paramOrder">Defines the parameter order: applicable only for Stored procedure</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbDecimal.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Int16,System.Int16,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.ParameterDirection,System.Int16)">
            <summary>
            Creates and Initialize the type.  Useful for Stored Procedure
            </summary>
            <remarks>
            Default table name of the baseRecord will be used.
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="columnName">Column name to map</param>
            <param name="scale">Scale of of the decimal</param>
            <param name="precision">precision of the decimal</param>
            <param name="isNullable">Boolean to set Nullable property</param>
            <param name="xmlName">Xml Tag Name</param>
            <param name="direction">Paremeter direction dictates to use if the table name is a stored procedure</param>
            <param name="paramOrder">Parameter Order applicable only for Stored Procedure</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbDecimal.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.String,System.Int16,System.Int16,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.Availability)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Default table name of the baseRecord will be used.
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="tableName">Table name to map</param>
            <param name="columnName">Column name to map</param>
            <param name="scale">Scale of of the decimal</param>
            <param name="precision">precision of the decimal</param>
            <param name="isNullable">Boolean to set Nullable property</param>
            <param name="xmlName">Xml Tag Name</param>
            <param name="availability">Xapi Availability</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbDecimal.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Int16,System.Int16,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.Availability)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Default table name of the baseRecord will be used.
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="columnName">Column name to map</param>
            <param name="scale">Scale of of the decimal</param>
            <param name="precision">precision of the decimal</param>
            <param name="isNullable">Boolean to set Nullable property</param>
            <param name="xmlName">Xml Tag Name</param>
            <param name="availability">Xapi Availability</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbDecimal.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Int16,System.Int16,System.Boolean,System.String)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Default table name of the baseRecord will be used.
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="columnName">Column name to map</param>
            <param name="scale">Scale of of the decimal</param>
            <param name="precision">precision of the decimal</param>
            <param name="isNullable">Boolean to set Nullable property</param>
            <param name="xmlName">Xml Tag Name</param>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbDecimal.ValidMinValue">
            <summary>
            Miimum value allowed for this field. 
            -- While setting the value, if the value is smaller than the DbtinyInt.MinValue
            -- then that will be set to DbInt.MinValue
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbDecimal.ValidMaxValue">
            <summary>
            Maximum allowed value for this field
            -- While setting the value, if the value is bigger than the DbInt.MaxValue then that will be the maxValue
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbDecimal.XmlValue">
            <summary>
            Gets the XML Value formatted using XmlConvert
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbDecimal.PreviousValue">
            <summary>
            Decimal value of the object
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbDecimal.Value">
            <summary>
            Decimal value of the object
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbDecimal.IsNull">
            <summary>
            Gets the null property.  True if the value is null, otherwsie false.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbDecimal.LoadStringValue(System.String,System.Boolean)">
            <summary>
            Loads the string Value from string passed
            </summary>
            <param name="nodeValue">string value</param>
            <param name="isNull">bool if the valeu is null</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbDecimal.SetFieldValue(System.Object)">
            <summary>
            Set the field Value and validate the type
            -- Throws exception FormatException, InvalidCastException, overflow
            </summary>
            <param name="valueToSet"></param>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.DbIdentity">
            <summary>
            Summary description for DbIdentity.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbIdentity.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.String,System.Int16,System.Int16,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.ParameterDirection,Phoenix.FrameWork.BusFrame.Availability)">
            <summary>
            Creates and Initialize the type
            </summary>
            <param name="baseRecord">Base Record</param>
            <param name="tableName">Table name to map</param>
            <param name="columnName">Column name to map</param>
            <param name="scale">Scale of of the decimal</param>
            <param name="precision">precision of the decimal</param>
            <param name="isNullable">Boolean to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
            <param name="xmlName">Xml Tag Name</param>
            <param name="direction">Paremeter direction dictates to use if the table name is a stored procedure</param>
            <param name="availability">Defines the field availability when the database is changed</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbIdentity.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.String,System.Int16,System.Int16,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.Availability)">
            <summary>
            Creates and Initialize the type
            </summary>
            <param name="baseRecord">Base Record</param>
            <param name="columnName">Column name to map</param>
            <param name="tableName">Table name to map</param>
            <param name="scale">Scale of of the decimal</param>
            <param name="precision">precision of the decimal</param>
            <param name="isNullable">Boolean to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
            <param name="xmlName">Xml Tag Name</param>
            <param name="availability">Defines the field availability when the database is changed</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbIdentity.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Int16,System.Int16,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.Availability)">
            <summary>
            Creates and Initialize the type
            </summary>
            <param name="baseRecord">Base Record</param>
            <param name="columnName">Column name to map</param>
            <param name="scale">Scale of of the decimal</param>
            <param name="precision">precision of the decimal</param>
            <param name="isNullable">Boolean to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
            <param name="xmlName">Xml Tag Name</param>
            <param name="availability">Defines the field availability when the database is changed</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbIdentity.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Int16,System.Int16,System.Boolean,System.String)">
            <summary>
            Creates and Initialize the type
            </summary>
            <param name="baseRecord">Base Record</param>
            <param name="columnName">Column name to map</param>
            <param name="scale">Scale of of the decimal</param>
            <param name="precision">precision of the decimal</param>
            <param name="isNullable">Boolean to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
            <param name="xmlName">Xml Tag Name</param>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.DbImage">
            <summary>
            Summary description for DbImage.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbImage.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.String,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.ParameterDirection,Phoenix.FrameWork.BusFrame.Availability,System.Int16)">
            <summary>
            Creates and Initialize the type
            </summary>
            <param name="baseRecord">Base Record</param>
            <param name="tableName">Table name to map</param>
            <param name="columnName">Column name to map</param>
            <param name="isNullable">Boolean to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
            <param name="xmlName">Xml Tag Name</param>
            <param name="direction">Paremeter direction dictates to use if the table name is a stored procedure</param>
            <param name="availability">Defines the field availability when the database is changed</param>
            <param name="paramOrder">Defines the parameter order: applicable only for Stored procedure</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbImage.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.Availability)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Default table name of the baseRecord will be used.
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="columnName">Column name to map</param>
            <param name="isNullable">Boolean to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
            <param name="xmlName">Xml Tag Name</param>
            <param name="availability">Defines the field availability when the database is changed</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbImage.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Boolean,System.String)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Default table name of the baseRecord will be used.
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="columnName">Column name to map</param>
            <param name="isNullable">Boolean to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
            <param name="xmlName">Xml Tag Name</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbImage.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Boolean)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Default table name of the baseRecord will be used.
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="columnName">Column name to map</param>
            <param name="isNullable">Boolean to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbImage.Value">
            <summary>
            Gets/Sets the image object
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbImage.XmlValue">
            <summary>
            Gets the Xml Value of the Image. Converted into Base64
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbImage.LoadFromFile(System.IO.FileInfo)">
            <summary>
            Load information filed valie from file
            </summary>
            <param name="fileInfo"></param>
            <returns>true if success; false otherwise</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbImage.SaveToFile(System.IO.FileInfo)">
            <summary>
            Write the value into file
            </summary>
            <param name="fileInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbImage.LoadStringValue(System.String,System.Boolean)">
            <summary>
            Loads the string Value from string passed. The input string must be base64
            </summary>
            <param name="nodeValue">string value</param>
            <param name="isNull">bool if the value is null</param>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.DbInt">
            <summary>
            Summary description for DbInt.
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.DbInt.Null">
            <summary>
            DbInt Null value
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.DbInt.MinValue">
            <summary>
            MinValue  this Integer Data can have
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.DbInt.MaxValue">
            <summary>
            MaxCalue  this Integer Data can have
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbInt.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.String,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.ParameterDirection,Phoenix.FrameWork.BusFrame.Availability,System.Int16)">
            <summary>
            Creates and Initialize the type
            </summary>
            <param name="baseRecord">Base Record</param>
            <param name="tableName">Table name to map</param>
            <param name="columnName">Column name to map</param>
            <param name="isNullable">Boolean to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
            <param name="xmlName">Xml Name of the field</param>
            <param name="direction">Paremeter direction dictates to use if the table name is a stored procedure</param>
            <param name="availability">Defines the field availability when the database is changed</param>
            <param name="paramOrder">Parameter Order applicable only for Stored Procedure</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbInt.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.String,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.Availability)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Assumes the default Table name from baseRecord
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="tableName">Table name to map</param>
            <param name="columnName">Column name to map</param>
            <param name="isNullable">Boolean to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
            <param name="xmlName">Xml Name of the field</param>
            <param name="availability">Defines the field availability when the database is changed</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbInt.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.ParameterDirection,System.Int16)">
            <summary>
            Creates and Initialize the type. Useful for Stored Procedure Parameters
            </summary>
            <remarks>
            Assumes the default Table name from baseRecord
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="columnName">Column name to map</param>
            <param name="isNullable">Boolean to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
            <param name="xmlName">Xml Name of the field</param>
            <param name="direction">Paremeter direction dictates to use if the table name is a stored procedure</param>
            <param name="paramOrder">Parameter Order applicable only for Stored Procedure</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbInt.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.Availability)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Assumes the default Table name from baseRecord
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="columnName">Column name to map</param>
            <param name="isNullable">Boolean to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
            <param name="xmlName">Xml Name of the field</param>
            <param name="availability">Defines the field availability when the database is changed</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbInt.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Boolean,System.String)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Assumes the default Table name from baseRecord
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="columnName">Column name to map</param>
            <param name="isNullable">Boolean to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
            <param name="xmlName">Xml Name of the field</param>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbInt.ValidMinValue">
            <summary>
            Miimum value allowed for this field. 
            -- While setting the value, if the value is smaller than the DbtinyInt.MinValue
            -- then that will be set to DbInt.MinValue
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbInt.ValidMaxValue">
            <summary>
            Maximum allowed value for this field
            -- While setting the value, if the value is bigger than the DbInt.MaxValue then that will be the maxValue
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbInt.IsDirty">
            <summary>
            true if the value is changed
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbInt.Value">
            <summary>
            Gets/Sets the int valye of the object
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbInt.PreviousValue">
            <summary>
            Previoust value of the object
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbInt.IsNull">
            <summary>
            Gets the null property.  True if the value is null, otherwsie false.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbInt.LoadStringValue(System.String,System.Boolean)">
            <summary>
            Loads the string Value from string passed. The input string must be base64
            </summary>
            <param name="nodeValue">string value</param>
            <param name="isNull">bool if the value is null</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbInt.SetFieldValue(System.Object)">
            <summary>
            Sets the field Value
            -- Could throw FormatException, InvalidcastException, PhoenixArgumentOutOfRangeException
            </summary>
            <param name="valueToSet"></param>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.DbNumeric">
            <summary>
            Summary description for DbNumeric.
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.DbNumeric.Null">
            <summary>
            DbNumeric Null value
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.DbNumeric.MinValue">
            <summary>
            Min Value DbNumeric field can have
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.DbNumeric.MaxValue">
            <summary>
            Max Value DbNumeric field can have
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.DbNumeric.MaxPrecision">
            <summary>
            Maximum allowed precision
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.DbNumeric.MaxScale">
            <summary>
            Maximum allowed scale
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbNumeric.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.String,System.Int16,System.Int16,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.ParameterDirection,Phoenix.FrameWork.BusFrame.Availability,System.Int16)">
            <summary>
            Creates and Initialize the type
            </summary>
            <param name="baseRecord">Base Record</param>
            <param name="tableName">Table name to map</param>
            <param name="columnName">Column name to map</param>
            <param name="scale">Scale of of the decimal</param>
            <param name="precision">precision of the decimal</param>
            <param name="isNullable">Boolean to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
            <param name="xmlName">Xml Tag Name</param>
            <param name="direction">Paremeter direction dictates to use if the table name is a stored procedure</param>
            <param name="availability">Defines the field availability when the database is changed</param>
            <param name="paramOrder">Parameter Order applicable only for Stored Procedure</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbNumeric.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Int16,System.Int16,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.ParameterDirection,System.Int16)">
            <summary>
            Creates and Initialize the type: Useful for store procedure
            </summary>
            <remarks>
            Default table name of the baseRecord will be used.
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="columnName">Column name to map</param>
            <param name="scale">Scale of of the decimal</param>
            <param name="precision">precision of the decimal</param>
            <param name="isNullable">Boolean to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
            <param name="xmlName">Xml Tag Name</param>
            <param name="direction">Paremeter direction dictates to use if the table name is a stored procedure</param>
            <param name="paramOrder">Parameter Order applicable only for Stored Procedure</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbNumeric.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.String,System.Int16,System.Int16,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.Availability)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Default table name of the baseRecord will be used.
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="tableName">Table name to map</param>
            <param name="columnName">Column name to map</param>
            <param name="scale">Scale of of the decimal</param>
            <param name="precision">precision of the decimal</param>
            <param name="isNullable">Boolean to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
            <param name="xmlName">Xml Tag Name</param>
            <param name="availability">Defines the field availability when the database is changed</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbNumeric.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Int16,System.Int16,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.Availability)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Default table name of the baseRecord will be used.
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="columnName">Column name to map</param>
            <param name="scale">Scale of of the decimal</param>
            <param name="precision">precision of the decimal</param>
            <param name="isNullable">Boolean to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
            <param name="xmlName">Xml Tag Name</param>
            <param name="availability">Defines the field availability when the database is changed</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbNumeric.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Int16,System.Int16,System.Boolean,System.String)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Default table name of the baseRecord will be used.
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="columnName">Column name to map</param>
            <param name="scale">Scale of of the decimal</param>
            <param name="precision">precision of the decimal</param>
            <param name="isNullable">Boolean to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
            <param name="xmlName">Xml Tag Name</param>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbNumeric.IsDirty">
            <summary>
            True if the value is changed.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbNumeric.PreviousValue">
            <summary>
            Previoust value of the object
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbNumeric.Value">
            <summary>
            Decimal value of the object
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbNumeric.IsNull">
            <summary>
            Gets the null property.  True if the value is null, otherwsie false.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbNumeric.ValidateDefinition">
            <summary>
            Validates the definition
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbNumeric.LoadStringValue(System.String,System.Boolean)">
            <summary>
            Loads the string value into the object.  
            </summary>
            <param name="nodeValue">String value. Must be of CultureInfo.InvariantCulture</param>
            <param name="isNull">True if the value is null</param>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbNumeric.IdentityType">
            <summary>
            Gets/Sets the Identity Type of the object
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbNumeric.XmlValue">
            <summary>
            Xml Value of the Object
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbNumeric.SetFieldValue(System.Object)">
            <summary>
            Set the Value of the field
            -- Could throw FormatException, InvalidCastException, OverflowException, PhoenixArgumentOutOfRangeException
            </summary>
            <param name="valueToSet"></param>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.DbPtid">
            <summary>
            Summary description for DbPtid.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbPtid.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.String,System.Int16,System.Int16,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.ParameterDirection,Phoenix.FrameWork.BusFrame.Availability)">
            <summary>
            Creates and Initialize the type
            </summary>
            <param name="baseRecord">Base Record</param>
            <param name="tableName">Table name to map</param>
            <param name="columnName">Column name to map</param>
            <param name="scale">Scale of of the decimal</param>
            <param name="precision">precision of the decimal</param>
            <param name="isNullable">Boolean to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
            <param name="xmlName">Xml Name of the field</param>
            <param name="direction">Paremeter direction dictates to use if the table name is a stored procedure</param>
            <param name="availability">Defines the field availability when the database is changed</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbPtid.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.String,System.Int16,System.Int16,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.Availability)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Default table name of the baseRecord will be used.
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="tableName">Table name to map</param>
            <param name="columnName">Column name to map</param>
            <param name="scale">Scale of of the decimal</param>
            <param name="precision">precision of the decimal</param>
            <param name="isNullable">Boolean to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
            <param name="xmlName">xml Tag Name</param>
            <param name="availability">Defines the field availability when the database is changed</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbPtid.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Int16,System.Int16,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.Availability)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Default table name of the baseRecord will be used.
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="columnName">Column name to map</param>
            <param name="scale">Scale of of the decimal</param>
            <param name="precision">precision of the decimal</param>
            <param name="isNullable">Boolean to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
            <param name="xmlName">xml Tag Name</param>
            <param name="availability">Defines the field availability when the database is changed</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbPtid.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Int16,System.Int16,System.Boolean,System.String)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Default table name of the baseRecord will be used.
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="columnName">Column name to map</param>
            <param name="scale">Scale of of the decimal</param>
            <param name="precision">precision of the decimal</param>
            <param name="isNullable">Boolean to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
            <param name="xmlName">xml Tag Name</param>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.DbSmallDateTime">
            <summary>
            Summary description for DbSmallDateTime.
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.DbSmallDateTime.Null">
            <summary>
            Null Value of the Data Type
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.DbSmallDateTime.MaxValue">
            <summary>
            Max Value of the Date Time 9999-12-31 23:59:459
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.DbSmallDateTime.MinValue">
            <summary>
            Min Value for the type 1753-01-01
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.DbSmallDateTime.IsCreateDt">
            <summary>
            Set to true if the getdate() from the Db needs to be used for create Date
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbSmallDateTime.IsEffectiveDt">
            <summary>
            is the field meant for effective Dt
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbSmallDateTime.NoDaysBack">
            <summary>
            Number of Days Backdating allowed for this record
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbSmallDateTime.AllowBackDating">
            <summary>
            Allow Backdating values. Default is set to true;
            If this value is set to false, then the validation will fail, if the date is less than 
            the current system date.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbSmallDateTime.AcctTypeField">
            <summary>
            Account type field association for BackDate Validation.
            If the account type field is set and AllowBackDating is true, the global allowed back date
            days will be verified against the value.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbSmallDateTime.ValidMinValue">
            <summary>
            Miimum value allowed for this field. 
            -- While setting the value, if the value is smaller than the DbSmallDateTime.MinValue
            -- then that will be set to DbInt.MinValue
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbSmallDateTime.ValidMaxValue">
            <summary>
            Maximum allowed value for this field
            -- While setting the value, if the value is bigger than the DbSmallDateTime.MaxValue then that will be the maxValue
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbSmallDateTime.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.String,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.ParameterDirection,Phoenix.FrameWork.BusFrame.Availability,System.Int16)">
            <summary>
            Creates and Initialize the type
            </summary>
            <param name="baseRecord">Base Record</param>
            <param name="tableName">Table name to map</param>
            <param name="columnName">Column name to map</param>
            <param name="isNullable">Boolen to set Nullable property</param>
            <param name="xmlName">Xml Name of the field</param>
            <param name="direction">Paremeter direction dictates to use if the table name is a stored procedure</param>
            <param name="availability">Defines the field availability when the database is changed</param>
            <param name="paramOrder">Parameter Order applicable only for Stored Procedure</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbSmallDateTime.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.ParameterDirection,System.Int16)">
            <summary>
            Creates and Initialize the type. Useful for stored procedure
            </summary>
            <remarks>
            TableName is defaulted from the base record.
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="columnName">Column name to map</param>
            <param name="isNullable">Boolen to set Nullable property</param>
            <param name="xmlName">Xml Tag Name</param>
            <param name="direction">Paremeter direction dictates to use if the table name is a stored procedure</param>
            <param name="paramOrder">Parameter Order applicable only for Stored Procedure</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbSmallDateTime.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.String,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.Availability)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            TableName is defaulted from the base record.
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="columnName">Column name to map</param>
            <param name="tableName">Table name to map</param>
            <param name="isNullable">Boolen to set Nullable property</param>
            <param name="xmlName">Xml Tag Name</param>
            <param name="availability">Defines the field availability when the database is changed</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbSmallDateTime.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.Availability)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            TableName is defaulted from the base record.
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="columnName">Column name to map</param>
            <param name="isNullable">Boolen to set Nullable property</param>
            <param name="xmlName">Xml Tag Name</param>
            <param name="availability">Defines the field availability when the database is changed</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbSmallDateTime.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Boolean,System.String)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            TableName is defaulted from the base record.
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="columnName">Column name to map</param>
            <param name="isNullable">Boolen to set Nullable property</param>
            <param name="xmlName">Xml Tag Name</param>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbSmallDateTime.IsNullValid">
            <summary>
            Validates the Null information
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbSmallDateTime.XmlValue">
            <summary>
            Gets the value in Valid XML Format
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbSmallDateTime.StringValue">
            <summary>
            Gets the strign value of the object.  Returns 'null' if the value is null. 
            Otherwise  string  formatted using "yyyy-MM-dd hh:mm:ss.fff"
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbSmallDateTime.SqlString">
            <summary>
            Returns Sql String. 
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbSmallDateTime.Value">
            <summary>
            Value of the object
            </summary>
            <remarks>
            Returns DbSmallDateTime.Null if the value is null
            </remarks>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbSmallDateTime.PreviousValue">
            <summary>
            Get/Set the PreviousValue of the Object
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbSmallDateTime.IsNull">
            <summary>
            Gets the null property.  True if the value is null, otherwsie false.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbSmallDateTime.LoadStringValue(System.String,System.Boolean)">
            <summary>
            Loads the string Value from string passed
            </summary>
            <param name="nodeValue">string value</param>
            <param name="isNull">bool if the value is null</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbSmallDateTime.ValidateField(System.Boolean,System.Object)">
            <summary>
            Validate field 
            </summary>
            <param name="isFromForm"></param>
            <param name="preValue">previous Value</param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbSmallDateTime.SetFieldValue(System.Object)">
            <summary>
            Set the value for the field
            - Could Throw FormatException, InvalidCastException and PhoenixArgumentOutOfRangeException
            </summary>
            <param name="valueToSet"></param>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.DbSmallInt">
            <summary>
            Summary description for DbSmallInt.
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.DbSmallInt.Null">
            <summary>
            Smallint Null Valie
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.DbSmallInt.MinValue">
            <summary>
            Min Value DbSmallInt can have
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.DbSmallInt.MaxValue">
            <summary>
            Max Value DbSmallInt can have
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbSmallInt.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.String,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.ParameterDirection,Phoenix.FrameWork.BusFrame.Availability,System.Int16)">
            <summary>
            Creates and Initialize the type
            </summary>
            <param name="baseRecord">Base Record</param>
            <param name="tableName">Table name to map</param>
            <param name="columnName">Column name to map</param>
            <param name="isNullable">Boolean to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
            <param name="xmlName">Xml Name of the field</param>
            <param name="direction">Paremeter direction dictates to use if the table name is a stored procedure</param>
            <param name="availability">Defines the field availability when the database is changed</param>
            <param name="paramOrder">Parameter Order applicable only for Stored Procedure</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbSmallInt.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.ParameterDirection,System.Int16)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Assumes the default Table name from baseRecord
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="columnName">Column name to map</param>
            <param name="isNullable">Boolean to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
            <param name="xmlName">Xml Tag Name</param>
            <param name="direction">Paremeter direction dictates to use if the table name is a stored procedure</param>
            <param name="paramOrder">Parameter Order applicable only for Stored Procedure</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbSmallInt.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.String,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.Availability)">
            <summary>
            Creates and Initialize the type: Useful for store procedure Parameters
            </summary>
            <remarks>
            Assumes the default Table name from baseRecord
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="tableName">Table Name to map with</param>
            <param name="columnName">Column name to map</param>
            <param name="isNullable">Boolean to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
            <param name="xmlName">Xml Tag Name</param>
            <param name="availability">Defines the field availability when the database is changed</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbSmallInt.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.Availability)">
            <summary>
            Creates and Initialize the type: Useful for store procedure Parameters
            </summary>
            <remarks>
            Assumes the default Table name from baseRecord
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="columnName">Column name to map</param>
            <param name="isNullable">Boolean to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
            <param name="xmlName">Xml Tag Name</param>
            <param name="availability">Defines the field availability when the database is changed</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbSmallInt.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Boolean,System.String)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Assumes the default Table name from baseRecord
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="columnName">Column name to map</param>
            <param name="isNullable">Boolean to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
            <param name="xmlName">Xml Tag Name</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbSmallInt.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Boolean)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Assumes the default Table name from baseRecord
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="columnName">Column name to map</param>
            <param name="isNullable">Boolean to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbSmallInt.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Assumes the default Table name from baseRecord
            sets <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property to false.
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="columnName">Column name to map</param>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbSmallInt.ValidMinValue">
            <summary>
            Miimum value allowed for this field. 
            -- While setting the value, if the value is smaller than the DbtinyInt.MinValue
            -- then that will be set to DbSmallInt.MinValue
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbSmallInt.ValidMaxValue">
            <summary>
            Maximum allowed value for this field
            -- While setting the value, if the value is bigger than the DbSmallInt.MaxValue then that will be the maxValue
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbSmallInt.IsDirty">
            <summary>
            True if the value is changed
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbSmallInt.Value">
            <summary>
            short value of of the object
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbSmallInt.PreviousValue">
            <summary>
            Get/Set the PreviousValue of the Object
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbSmallInt.SetFieldValue(System.Object)">
            <summary>
            Set field value
            -- Could throw PhoenixArgumentOutOfRangeException, FormatException, InvalidCastException
            </summary>
            <param name="valueToSet"></param>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbSmallInt.IsNull">
            <summary>
            Gets the null property.  True if the value is null, otherwsie false.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbSmallInt.LoadStringValue(System.String,System.Boolean)">
            <summary>
            Loads the string Value from string passed
            </summary>
            <remarks>
            Uses <see cref="P:System.Globalization.CultureInfo.InvariantCulture"/> to convert
            </remarks>
            <param name="nodeValue">string value</param>
            <param name="isNull">bool if the value is null</param>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.DbText">
            <summary>
            Summary description for DbText.
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.DbText.Null">
            <summary>
            Public Null Value
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbText.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.String,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.ParameterDirection,Phoenix.FrameWork.BusFrame.Availability,System.Int16)">
            <summary>
            Creates and Initialize the type
            </summary>
            <param name="baseRecord">Base Record</param>
            <param name="tableName">Table name to map</param>
            <param name="columnName">Column name to map</param>
            <param name="isNullable">Boolean to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
            <param name="xmlName">Xml Name of the field</param>
            <param name="direction">Paremeter direction dictates to use if the table name is a stored procedure</param>
            <param name="availability">Defines the field availability when the database is changed</param>
            <param name="paramOrder">Parameter Order applicable only for Stored Procedure</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbText.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.String,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.Availability)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Assumes the default Table name from baseRecord
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="tableName">Table name to map</param>
            <param name="columnName">Column name to map</param>
            <param name="isNullable">Boolean to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
            <param name="xmlName">Xml Tag Name</param>
            <param name="availability">Defines the field availability when the database is changed</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbText.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.Availability)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Assumes the default Table name from baseRecord
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="columnName">Column name to map</param>
            <param name="isNullable">Boolean to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
            <param name="xmlName">Xml Tag Name</param>
            <param name="availability">Defines the field availability when the database is changed</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbText.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Boolean,System.String)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Assumes the default Table name from baseRecord
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="columnName">Column name to map</param>
            <param name="isNullable">Boolean to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
            <param name="xmlName">Xml Tag Name</param>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbText.Value">
            <summary>
            string value of of the object
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbText.PreviousValue">
            <summary>
            Get/Set the PreviousValue of the Object
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbText.SqlString">
            <summary>
            Returns Sql String. Double quotes are replaced with single quotes
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbText.LoadStringValue(System.String,System.Boolean)">
            <summary>
            Loads the string Value from string passed
            </summary>
            <param name="nodeValue">string value</param>
            <param name="isNull">bool if the value is null</param>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.DbTinyInt">
            <summary>
            Summary description for DbTinyInt.
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.DbTinyInt.Null">
            <summary>
            null value object
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.DbTinyInt.MinValue">
            <summary>
            Min Value a DbTinyInt can have
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.DbTinyInt.MaxValue">
            <summary>
            Max Value a DbTinyInt can have
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbTinyInt.ValidMinValue">
            <summary>
            Miimum value allowed for this field. 
            -- While setting the value, if the value is smaller than the DbtinyInt.MinValue
            -- then that will be set to DbTinyInt.MinValue
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbTinyInt.ValidMaxValue">
            <summary>
            Maximum allowed value for this field
            -- While setting the value, if the value is bigger than the DbtinyInt.MaxValue then that will be the maxValue
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbTinyInt.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.String,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.ParameterDirection,Phoenix.FrameWork.BusFrame.Availability,System.Int16)">
            <summary>
            Creates and Initialize the type
            </summary>
            <param name="baseRecord">Base Record</param>
            <param name="tableName">Table name to map</param>
            <param name="columnName">Column name to map</param>
            <param name="isNullable">Boolean to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
            <param name="xmlName">Xml Name of the field</param>
            <param name="direction">Paremeter direction dictates to use if the table name is a stored procedure</param>
            <param name="availability">Defines the field availability when the database is changed</param>
            <param name="paramOrder">Parameter Order applicable only for Stored Procedure</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbTinyInt.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.ParameterDirection,System.Int16)">
            <summary>
            Creates and Initialize the type: Useful Stored Procedures
            </summary>
            <remarks>
            Assumes the default Table name from baseRecord
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="columnName">Column name to map</param>
            <param name="isNullable">Boolean to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
            <param name="xmlName">Xml Tag Name</param>
            <param name="direction">Paremeter direction dictates to use if the table name is a stored procedure</param>
            <param name="paramOrder">Parameter Order applicable only for Stored Procedure</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbTinyInt.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.String,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.Availability)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Assumes the default Table name from baseRecord
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="tableName">Table name to map</param>
            <param name="columnName">Column name to map</param>
            <param name="isNullable">Boolean to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
            <param name="xmlName">Xml Tag Name</param>
            <param name="availability">Defines the field availability when the database is changed</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbTinyInt.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.Availability)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Assumes the default Table name from baseRecord
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="columnName">Column name to map</param>
            <param name="isNullable">Boolean to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
            <param name="xmlName">Xml Tag Name</param>
            <param name="availability">Defines the field availability when the database is changed</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbTinyInt.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Boolean,System.String)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Assumes the default Table name from baseRecord
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="columnName">Column name to map</param>
            <param name="isNullable">Boolean to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
            <param name="xmlName">Xml Tag Name</param>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbTinyInt.IsDirty">
            <summary>
            True if the value changed
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbTinyInt.XmlValue">
            <summary>
            Get the XMl Value
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbTinyInt.Value">
            <summary>
            short value of of the object
            </summary>
            <remarks>
            Throws ArgumentNullException if the value is Null
            </remarks>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbTinyInt.PreviousValue">
            <summary>
            Get/Set the PreviousValue of the Object
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbTinyInt.IsNull">
            <summary>
            Gets the null property.  True if the value is null, otherwsie false.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbTinyInt.LoadStringValue(System.String,System.Boolean)">
            <summary>
            Loads the string Value from string passed
            </summary>
            <param name="nodeValue">string value</param>
            <param name="isNull">bool if the value is null</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbTinyInt.SetValue(System.Object)">
            <summary>
            Set the value of the field
            </summary>
            <param name="valueToset"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbTinyInt.SetFieldValue(System.Object)">
            <summary>
            Sets the field Value
            -- Could throw FormatException, InvalidcastException, PhoenixArgumentOutOfRangeException
            </summary>
            <param name="valueToSet"></param>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.DbUniqueIdentifier">
            <summary>
            DB Unique Identifier
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbUniqueIdentifier.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.Availability)">
            <summary>
            Creates and Initialize the type
            </summary>
            <param name="xmlName">Xml Name</param>
            <param name="baseRecord">Base Record</param>
            <param name="columnName">name of the column</param>
            <param name="isNullable">Boolen to set Nullable property</param>
            <param name="availability">Availability</param>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbUniqueIdentifier.PreviousValueObject">
            <summary>
            Previous Value
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbUniqueIdentifier.ValueObject">
            <summary>
            Value object
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbUniqueIdentifier.ObjectToString(System.Object)">
            <summary>
            validate the valueObject for Guid and then convert to string value
            </summary>
            <param name="valueObject"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbUniqueIdentifier.GuidToString(System.Guid)">
            <summary>
            Guid to String
            </summary>
            <param name="guidValue"></param>
            <returns></returns>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbUniqueIdentifier.GuidValue">
            <summary>
            Guid Value
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbUniqueIdentifier.StringToGuid(System.String)">
            <summary>
            Convert string  to Guid value
            </summary>
            <param name="stringValue"></param>
            <returns></returns>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbUniqueIdentifier.IsDirty">
            <summary>
            ignore case
            </summary>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.DbVarChar">
            <summary>
            Summary description for DbVarChar.
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.DbVarChar.Null">
            <summary>
            Null Value of the object
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.DbVarChar.MaxLength">
            <summary>
            Max Length for the VarChar Type
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbVarChar.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.String,System.Int16,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.ParameterDirection,Phoenix.FrameWork.BusFrame.Availability,System.Int16)">
            <summary>
            Creates and Initialize the type: Useful for Stored Procedure Parameters
            </summary>
            <param name="baseRecord">Base Record</param>
            <param name="tableName">Table name to map</param>
            <param name="columnName">Column name to map</param>
            <param name="length">Scale of of the decimal</param>
            <param name="isNullable">Boolean to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
            <param name="xmlName">Xml Name of the field</param>
            <param name="direction">Parameter direction to use</param>
            <param name="availability">Defines the field availability when the database is changed</param>
            <param name="paramOrder">Parameter Order applicable only for Stored Procedure</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbVarChar.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Int16,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.ParameterDirection,System.Int16)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Default table name of the baseRecord will be used.
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="columnName">Column name to map</param>
            <param name="length">Scale of of the decimal</param>
            <param name="isNullable">Boolean to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
            <param name="xmlName">Xml Tag Name</param>
            <param name="direction">Parameter direction to use</param>
            <param name="paramOrder">Parameter Order applicable only for Stored Procedure</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbVarChar.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.String,System.Int16,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.Availability)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Default table name of the baseRecord will be used.
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="tableName">Table name to map</param>
            <param name="columnName">Column name to map</param>
            <param name="length">Scale of of the decimal</param>
            <param name="isNullable">Boolean to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
            <param name="xmlName">Xml Tag Name</param>
            <param name="availability">Defines the field availability when the database is changed</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbVarChar.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Int16,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.Availability)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Default table name of the baseRecord will be used.
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="columnName">Column name to map</param>
            <param name="length">Scale of of the decimal</param>
            <param name="isNullable">Boolean to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
            <param name="xmlName">Xml Tag Name</param>
            <param name="availability">Defines the field availability when the database is changed</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbVarChar.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Int16,System.Boolean,System.String)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Default table name of the baseRecord will be used.
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="columnName">Column name to map</param>
            <param name="length">Scale of of the decimal</param>
            <param name="isNullable">Boolean to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
            <param name="xmlName">Xml Tag Name</param>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbVarChar.PreviousValue">
            <summary>
            Get/Sets String value of the object
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbVarChar.Value">
            <summary>
            Get/Sets String value of the object
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbVarChar.SqlString">
            <summary>
            Returns if Sql String Value of the object
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbVarChar.LoadStringValue(System.String,System.Boolean)">
            <summary>
            Loads the string Value from string passed
            </summary>
            <param name="nodeValue">string value</param>
            <param name="isNull">bool if the value is null</param>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.DbObject">
            <summary>
            Summary description for DbObject.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbObject.#ctor(System.String)">
            <summary>
            Creates and initializes the object.
            </summary>
            <param name="tableName">Primary Table Name</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbObject.#ctor(System.String,System.String)">
            <summary>
            Creates and initializes the object
            </summary>
            <param name="primaryTableName">Primary Table Name</param>
            <param name="secondaryTableName">Secondary Table Name</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbObject.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Creates a Database Object.  
            </summary>
            <param name="primaryName">Table/Stored Proc name in the Primary Db</param>
            <param name="secondaryName">Table/Stored Proc name in the Xapi Db </param>
            <param name="isStoreProc">bool value to indicate this object is a Stored procedure.</param>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbObject.PrimaryName">
            <summary>
            Gets the  Table Name or Stored Procedure name in the Primary Database
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbObject.SecondaryName">
            <summary>
            Gets the Table Name or Stored Procedure name in the Primary Database
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbObject.IsStoreProc">
            <summary>
            Gets the bool value of the property IsStoreProc.
            </summary>
            <remarks>
            The value will be true if the object is StoreProc, flase if it is a table.
            </remarks>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.DbObjectCollection">
            <summary>
            Summary description for DbObjectCollection.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbObjectCollection.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase)">
            <summary>
            Creates and Initializes the object
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbObjectCollection.GetKeyForItem(Phoenix.FrameWork.BusFrame.IDbObject)">
            <summary>
            Implementaion for Key Collection
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbObjectCollection.TableAlias(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbObjectCollection.TableName(System.Int32,System.Boolean)">
            <summary>
            Get the Table Name from 
            </summary>
            <param name="index">table index stats from 0.</param>
            <param name="isPrimaryDb"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbObjectCollection.GetIndex(System.String)">
            <summary>
            Get the index of the Object
            </summary>
            <param name="objectName"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbObjectCollection.Add(System.String)">
            <summary>
            Adds a new Table object to the collection
            </summary>
            <param name="primaryTableName"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbObjectCollection.Add(System.String,System.String)">
            <summary>
            Adds a new Table object to the collection
            </summary>
            <param name="primTableName"></param>
            <param name="secondaryTableName"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbObjectCollection.Add(System.String,System.String,System.Boolean)">
            <summary>
            Add a new Table/Stored Proc Object to collection Object
            </summary>
            <param name="primObjectName"></param>
            <param name="secondaryObjectName"></param>
            <param name="isStoreProc"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbObjectCollection.Add(Phoenix.FrameWork.BusFrame.IDbObject)">
            <summary>
            Add the DbObject
            </summary>
            <param name="dbObject">Object to Add</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbObjectCollection.Get(System.String)">
            <summary>
            Get the DbObject identified by the Primary Name
            </summary>
            <param name="objectName">Primary name of the object</param>
            <returns>DbObject</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbObjectCollection.Get(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DbObjectCollection.HasStoredProcMap">
            <summary>
            True if the object has stored procedure mapping
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbObjectCollection.GetSelectSql(Phoenix.FrameWork.Core.IDbHelper,System.Boolean)">
            <summary>
            Gets the Select SQL for the Object
            </summary>
            <param name="dbHelper"></param>
            <param name="isPrimaryDb">true if primary db; fale otherwise</param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbObjectCollection.GetSelectSql(System.Text.StringBuilder,Phoenix.FrameWork.Core.IDbHelper,System.Boolean,System.Collections.ArrayList)">
            <summary>
            Gets the Select Sql using the default logic
            </summary>
            <param name="sqlText">Stream to receive the string</param>
            <param name="dbHelper">DbHelper Object</param>
            <param name="isPrimaryDb">Flag to indicate the use of Primary or secondary db</param>
            <param name="parameters">Parameter array collection</param>
            <returns>True if success; otherwise false</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbObjectCollection.GetUpdateSql(System.Text.StringBuilder,Phoenix.FrameWork.Core.IDbHelper,System.Int32,System.Boolean,System.Boolean,System.Collections.ArrayList,Phoenix.FrameWork.BusFrame.FieldBase,System.Boolean)">
            <summary>
            Gets the Update Sql for the object identified by the table
            </summary>
            <param name="sqlText">Stream to receive the string</param>
            <param name="dbHelper">DbHelper Object</param>
            <param name="tableIndex">Table index to use</param>
            <param name="useBind">Use parameters if a bind is needed</param>
            <param name="isPrimaryDb">Flag to indicate the use of Primary or secondary db</param>
            <param name="parameters">Parameter array collection</param>
            <param name="rowVersion">RowVersion object</param>
            <param name="useRowVersionInWhereClause">if the RowVersion needs to be used in Where class</param>
            <returns>Returns true if suscces; otherwise false</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbObjectCollection.GetListViewSql(System.Boolean,System.Collections.ArrayList)">
            <summary>
            Gets the Default Sql for List View
            </summary>
            <param name="isPrimaryDb">Flag to indicate the use of Primary or secondary db</param>
            <param name="filterNodes">Filter Nodes </param>
            <returns>Returns true if success; otherwise false</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbObjectCollection.GetListViewSql(System.Text.StringBuilder,Phoenix.FrameWork.BusFrame.PListViewCollection{Phoenix.FrameWork.BusFrame.FieldBase},System.Collections.ArrayList,System.Boolean)">
            <summary>
            Gets the Default Sql for List View
            </summary>
            <param name="sqlText">Stream to receive the string</param>
            <param name="selectFields">Order By Fields</param>
            <param name="filterNodes">Nodes to use for additional filter</param>
            <param name="isPrimaryDb">Flag to indicate the use of Primary or secondary db</param>
            <returns>Returns true if success; otherwise false</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbObjectCollection.GetListViewSql(System.Text.StringBuilder,Phoenix.FrameWork.BusFrame.PListViewCollection{Phoenix.FrameWork.BusFrame.FieldBase},System.Collections.ArrayList,System.Boolean,System.Boolean)">
            <summary>
            Gets the Default Sql for List View
            </summary>
            <param name="sqlText">Stream to receive the string</param>
            <param name="selectFields">Order By Fields</param>
            <param name="filterNodes">Nodes to use for additional filter</param>
            <param name="isPrimaryDb">Flag to indicate the use of Primary or secondary db</param>
            <param name="isOfflineDb">True if offline Db is in use</param>
            <returns>Returns true if success; otherwise false</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbObjectCollection.GetListViewSql(System.Text.StringBuilder,Phoenix.FrameWork.BusFrame.PListViewCollection{Phoenix.FrameWork.BusFrame.FieldBase},System.Collections.ArrayList,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Gets the Default Sql for List View
            </summary>
            <param name="sqlText">Stream to receive the string</param>
            <param name="selectFields">Order By Fields</param>
            <param name="filterNodes">Nodes to use for additional filter</param>
            <param name="isPrimaryDb">Flag to indicate the use of Primary or secondary db</param>
            <param name="isOfflineDb">True if offline Db is in use</param>
            <param name="enumerateDesc">enumerate the description field for dynamic constraints</param>
            <returns>Returns true if success; otherwise false</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbObjectCollection.GetWhereFromFilters(System.Collections.ArrayList,System.Text.StringBuilder,System.Boolean,System.Boolean)">
            <summary>
            Get the Where clause SQL from the filters
            </summary>
            <param name="filterNodes"></param>
            <param name="whereSql"></param>
            <param name="isPrimaryDb"></param>
            <param name="isAddWhere"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DbObjectCollection.GetInsertSql(System.Text.StringBuilder,Phoenix.FrameWork.Core.IDbHelper,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Collections.ArrayList)">
            <summary>
            Get Insert Sql for the table specified in index
            </summary>
            <param name="sqlText">Stream to receive the string</param>
            <param name="dbHelper">DbHelper Object</param>
            <param name="tableIndex">Table index to use</param>
            <param name="useBind">Use parameters if a bind is needed</param>
            <param name="isPrimaryDb">Flag to indicate the use of Primary or secondary db</param>
            <param name="fetchIdentity">Add Select to fetch identity value</param>
            <param name="parameters"></param>
            <returns>Returns true if success; otherwise false</returns>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.DefaultValue">
            <summary>
            Summary description for DefaultValue.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DefaultValue.#ctor(System.Object)">
            <summary>
            Initializes and creates the object
            </summary>
            <param name="valueObj">value object</param>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DefaultValue.ValueObj">
            <summary>
            Gets the Value Object from the Default Value
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DefaultValue.IsLoaded">
            <summary>
            Gets the IsLoaded property of the object
            </summary>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.DefaultValueCache">
            <summary>
            Singleton object Default Value Cache
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DefaultValueCache.#ctor">
            <summary>
            Private  constructor. Initializes the object
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DefaultValueCache.Instance">
            <summary>
            Get the singleton instance of Default Value Cache
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DefaultValueCache.Item(System.String)">
            <summary>
            Get/Sets the DefaultAs value for the speficied name
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DefaultValueCache.Clear">
            <summary>
            Cleat the cache
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DefaultValueCache.AddKey(System.String)">
            <summary>
            Adds the key for future look up.
            </summary>
            <param name="defaultAsName">Default As Name</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DefaultValueCache.DefaultAsExists(System.String)">
            <summary>
            Get the information of whether the defaultAs exists for the key.
            </summary>
            <param name="defaultAsName">Name of the default as</param>
            <returns>true if the defaultAs exists; otherwise false</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DefaultValueCache.DefaultAsHasValues(System.String)">
            <summary>
            Verified whether the defaultAs has value.
            </summary>
            <param name="defaultAsName">defaultAs name</param>
            <returns>True if the default as has value; otherwise false</returns>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.DependsMap">
            <summary>
            Summary description for DependsMap.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DependsMap.#ctor">
            <summary>
            Initializes and creates the object
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DependsMap.AddDependency(Phoenix.FrameWork.BusFrame.IFieldBase,Phoenix.FrameWork.BusFrame.IFieldBase)">
            <summary>
            Add a dependency map to the object
            </summary>
            <param name="parentField">Parent Field</param>
            <param name="childField">Child Field Name</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DependsMap.AddDependency(Phoenix.FrameWork.BusFrame.IBusinessObject,Phoenix.FrameWork.BusFrame.IFieldBase,Phoenix.FrameWork.BusFrame.IBusinessObject,Phoenix.FrameWork.BusFrame.IFieldBase)">
            <summary>
            Add a dependency map to the object
            </summary>
            <param name="parent">Parent object</param>
            <param name="parentField">Parent Field</param>
            <param name="child">Child Object</param>
            <param name="childField">Child Field Name</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DependsMap.HasDefaultFrom(System.Int32)">
            <summary>
            Verifies whether the object is participating in a DefaultFrom in request Xml. 
            </summary>
            <param name="objId">Object Hash Code</param>
            <returns>True if the object associated in a default From</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DependsMap.HasDefaultAs(System.Int32)">
            <summary>
            Verifies whether the object is participating in a DefaultAs request Xml. 
            </summary>
            <param name="objId">Object hash code</param>
            <returns>True if the object is associated to a Default As</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DependsMap.GetDefaultFrom(System.Int32,Phoenix.FrameWork.BusFrame.IFieldBase)">
            <summary>
            Get the defaultFrom name
            </summary>
            <param name="objId">Object Hash Code</param>
            <param name="field">Field to look for default from name</param>
            <returns>null if no defaultFrom found, else a string value</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DependsMap.GetDefaultAs(System.Int32,Phoenix.FrameWork.BusFrame.IFieldBase)">
            <summary>
            Get thje defaultAs Name 
            </summary>
            <param name="objId"></param>
            <param name="field">Field name to ge the DefaultAs</param>
            <returns>null if no DefaultAs found, else a string value</returns>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.FilterOperator">
            <summary>
            Specified the operator for the Filter to be used in defining filters.
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.FilterOperator.LE">
            <summary>
            Less than or equal to
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.FilterOperator.LT">
            <summary>
            Less than 
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.FilterOperator.GE">
            <summary>
            Greater than or equal to
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.FilterOperator.GT">
            <summary>
            Greater than
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.FilterOperator.EQ">
            <summary>
            Equal To
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.FilterOperator.NE">
            <summary>
            Not Equal to
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.FilterOperator.ISN">
            <summary>
            Is Null
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.FilterOperator.NN">
            <summary>
            Not Null
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.FilterOperator.LK">
            <summary>
            Like 
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.FilterOperator.IN">
            <summary>
            In
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.FilterOperator.OR">
            <summary>
            OR Group
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.FilterOperator.AND">
            <summary>
            And Group
            </summary>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.KeyType">
            <summary>
            Define the type of key.
            </summary>
            <remarks>
            This is basically maps phoenix indexes prefixed with  pk and ak
            </remarks>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.KeyType.PrimaryKeyUnique">
            <summary>
            Primary key and is unique
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.KeyType.PrimaryKeyNonUnique">
            <summary>
            Primary key but not unique
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.KeyType.AlternateKeyUnique">
            <summary>
            Unique alternate key
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.KeyType.AlternateKeyNonUnique">
            <summary>
            Non unique Alternate key
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.KeyType.KeyForNew">
            <summary>
            This is key for creating a new record.
            </summary>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.SecurityAccessTypes">
            <summary>
            Defines the security flags for field, and records
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.SecurityAccessTypes.None">
            <summary>
            Undefined - Not Yet Defined
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.SecurityAccessTypes.New">
            <summary>
            Can create New
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.SecurityAccessTypes.Edit">
            <summary>
            Can Edit the Record
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.SecurityAccessTypes.Update">
            <summary>
            Can Update the Record
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.SecurityAccessTypes.View">
            <summary>
            Can View the record
            </summary>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.ParameterDirection">
            <summary>
            Parameter Direction for the Field
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.ParameterDirection.None">
            <summary>
            Not a Parameter
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.ParameterDirection.Input">
            <summary>
            The parameter is an input parameter. 
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.ParameterDirection.InputOutput">
            <summary>
            The parameter is capable of both input and output. 
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.ParameterDirection.Output">
            <summary>
            The parameter is an output parameter. 
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.ParameterDirection.ReturnValue">
            <summary>
            The parameter represents a return value from an operation such as a stored procedure, built-in function, or user-defined function
            </summary>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.Availability">
            <summary>
            Object Availability
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.Availability.NA">
            <summary>
            Not Applicable.
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.Availability.PrimaryDb">
            <summary>
            Available when Primary Db is available/accessible
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.Availability.SecondaryDb">
            <summary>
            Available when Secondary Db is available/accessible
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.Availability.Both">
            <summary>
            Available always
            </summary>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.DbToUse">
            <summary>
            Database to use.
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.DbToUse.PrimaryOnly">
            <summary>
            use Primary Database only
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.DbToUse.SecondaryOnly">
            <summary>
            Use Secondary database only
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.DbToUse.Both">
            <summary>
            Use Both Database
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.DbToUse.Offline">
            <summary>
            Use offline database
            </summary>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.ErrorCodes">
            <summary>
            Errorcodes used in Business frame
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.ErrorCodes.OVER_FLOW">
            <summary>
            used when the Over flow detected
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.ErrorCodes.PRECISION_ERROR">
            <summary>
            used when the over flow detected due to precision error
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.ErrorCodes.SCALE_ERROR">
            <summary>
            When the over flow detected due to scale error.
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.ErrorCodes.NOT_POSITIVENUMBER">
            <summary>
            Error used when positive number is expected, but negative number is received
            </summary>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.EnumValue">
            <summary>
            Summary description for EnumValue.
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.EnumValue._bvProperties">
            <summary>
            BitVector Properties
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.EnumValue._bvsHide">
            <summary>
            Show Hide 
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.EnumValue._bvsDisabled">
            <summary>
            Enable Disable
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.EnumValue._bvsHideTextWhenDisabled">
            <summary>
            Show Text When disabled
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.EnumValue.#cctor">
            <summary>
            Load the enumValue
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.EnumValue.#ctor(System.String)">
            <summary>
            Create new String From coded List
            </summary>
            <param name="codedValue"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.EnumValue.#ctor(System.String,System.String)">
            <summary>
            Initializes a new <see cref="T:Phoenix.FrameWork.BusFrame.EnumValue"/> Object
            </summary>
            <remarks>
            The codeValue will be trimmed before using. 
            </remarks>
            <param name="codeValue">code value for the constraint</param>
            <param name="description">Description value for the constraint</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.EnumValue.#ctor(System.Object,System.String)">
            <summary>
            Initializes a new <see cref="T:Phoenix.FrameWork.BusFrame.EnumValue"/> Object
            </summary>
            <remarks>
            The codeValue will be trimmed before using. 
            </remarks>
            <param name="codeValue">code value for the constraint</param>
            <param name="description">Description value for the constraint</param>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.EnumValue.NullValue">
            <summary>
            Returns the Null Value equivalent for Enumerations
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.EnumValue.AllValue">
            <summary>
            Returns All Value for Enumeration
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.EnumValue.CodeValueByte">
            <summary>
            Gets the converted code value using <see cref="M:System.Convert.ToByte(System.String,System.Int32)"/>
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.EnumValue.CodeValueShort">
            <summary>
            Gets the converted code value using <see cref="M:System.Convert.ToInt32(System.String,System.Int32)"/>.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.EnumValue.CodeValueInt">
            <summary>
            Gets the converted code value using <see cref="M:System.Convert.ToInt32(System.String,System.Int32)"/>.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.EnumValue.CodeValue">
            <summary>
            Gets the code value <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.EnumValue.Description">
            <summary>
            Gets the description value <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.EnumValue.CombinedValue">
            <summary>
            Gets the concatenated value of <see cref="P:Phoenix.FrameWork.BusFrame.EnumValue.CodeValue"/> and <see cref="P:Phoenix.FrameWork.BusFrame.EnumValue.Description"/>
            </summary>
            <remarks>
            The code value  and description value is concatenated using " - ".
            </remarks>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.EnumValue.Seperator">
            <summary>
            Seperator used when the CodeValue and Description are combined in ToString
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.EnumValue.ToString">
            <summary>
            Creates the CodeValue+Description in the String Format
            </summary>
            <returns></returns>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.EnumValue.IsEnabled">
            <summary>
            Set Enabled/Disabled
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.EnumValue.IsVisible">
            <summary>
            This enumeration is visible/hidden
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.EnumValue.IsShowTextWhenDisabled">
            <summary>
            This text can be shown when disabled.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.EnumValue.SetStatus(Phoenix.Windows.Forms.VisibilityState,Phoenix.Windows.Forms.EnableState)">
            <summary>
            Set the status of this enum.
            </summary>
            <param name="visible">Visibility state to set. If no change needed then use the VisibilityState.Default</param>
            <param name="enabled">Enable state to set. If no change needed then use the EnableState.Default </param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.EnumValue.DecodeUIProperties(System.String)">
            <summary>
            Decode UI Properties and set the value to the enumValue
            </summary>
            <param name="propValue"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.EnumValue.Serialize(System.Xml.XmlWriter,System.Boolean)">
            <summary>
            Serialize information
            </summary>
            <param name="xmlWriter"></param>
            <param name="serialiseValueAsAttributes"></param>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.EnumValueCollection">
            <summary>
            Defines the collection for EnumValue.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.EnumValueCollection.TrimCodeValue">
            <summary>
            Trim Code Value
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.EnumValueCollection.#ctor">
            <summary>
            Initialized the class.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.EnumValueCollection.EnumValues">
            <summary>
            Gets the <see cref="T:System.Collections.ArrayList"/> of <see cref="T:Phoenix.FrameWork.BusFrame.EnumValue"/> object 
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.EnumValueCollection.CodeValues">
            <summary>
            Gets the <see cref="T:System.Collections.ArrayList"/> of code value object
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.EnumValueCollection.Descriptions">
            <summary>
            Gets the <see cref="T:System.Collections.ArrayList"/> of description <see cref="T:System.String"/> value.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.EnumValueCollection.ClearAll">
            <summary>
            Resets the object.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.EnumValueCollection.Add(Phoenix.FrameWork.BusFrame.EnumValue)">
            <summary>
            Adds the object in to collection
            </summary>
            <param name="enumObject">Enumeration Object to add to collection</param>
            <returns>returns <see cref="T:System.Int32">index</see> value in the internal collection. </returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.EnumValueCollection.AddKey(System.Object,System.String)">
            <summary>
            Adds the object in to collection
            </summary>
            <param name="codeValue">code value for the enum List</param>
            <param name="description">description value for the enum List</param>
            <returns>returns <see cref="T:System.Int32">index</see> value in the internal collection. </returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.EnumValueCollection.AddKey(System.Object,System.String,System.Boolean)">
            <summary>
            Adds the object in to collection
            </summary>
            <param name="codeValue">code value for the enum List</param>
            <param name="description">description value for the enum List</param>
            <param name="addBeforeNone">flag to indicate whether to add the entry before the 'None'entry</param>
            <returns>returns <see cref="T:System.Int32">index</see> value in the internal collection. </returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.EnumValueCollection.GetKeyIndex(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of a value <see cref="P:Phoenix.FrameWork.BusFrame.EnumValue.CodeValue">codeValue</see>
            </summary>
            <param name="codeValue">code value to be searched for</param>
            <returns>The zero-based index of the first occurrence of value within the entire collection, if found; otherwise, -1. </returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.EnumValueCollection.GetDescriptionIndex(System.String)">
            <summary>
            Returns the zero-based index of the first occurrence of a value <see cref="P:Phoenix.FrameWork.BusFrame.EnumValue.Description"/>
            </summary>
            <param name="description">Description value to be searched for</param>
            <returns>The zero-based index of the first occurrence of value within the entire collection, if found; otherwise, -1. </returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.EnumValueCollection.IsValidCode(System.Object)">
            <summary>
            Returns true if the codevalue is found in the collection; otherwise false.
            </summary>
            <param name="codeValue">code value to be validated</param>
            <returns>Returns true if the codevalue is found in the collection; otherwise false.</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.EnumValueCollection.IsValidDescription(System.String)">
            <summary>
            Returns true if the description is found in the collection; otherwise false.
            </summary>
            <param name="description">description to be validated</param>
            <returns>Returns true if the description is found in the collection; otherwise false.</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.EnumValueCollection.Serialize(System.Xml.XmlWriter,System.Boolean)">
            <summary>
            Serializes the list into Xml Element.
            </summary>
            <param name="xmlWriter">Xml writer to be used to write the serizlised data</param>
            <param name="serialiseValueAsAttributes">Serialize value as attributes</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.EnumValueCollection.Deserialize(System.Xml.XmlNode,System.Boolean)">
            <summary>
            Deserialize the xml node into the collection.
            </summary>
            <param name="valueNode"></param>
            <param name="valueSerializedAsAttribute">Value was serialized as attributes</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.EnumValueCollection.LoadFromStaticList(System.Int32,System.Boolean)">
            <summary>
            Load the information from the Multilanguage.
            </summary>
            <param name="listId">Multi Language List Id.</param>
            <param name="isCodedList">true if this is a coded list;otherwise false.</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.EnumValueCollection.LoadFromStaticList(System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="listValue"></param>
            <param name="isCodedList"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.EnumValueCollection.RemoveItem(System.Object)">
            <summary>
            Remove the item identified by the code value;
            </summary>
            <param name="codeValue"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.EnumValueCollection.SetFieldStatus(System.Object,Phoenix.Windows.Forms.VisibilityState,Phoenix.Windows.Forms.EnableState)">
            <summary>
            Set enum status of the enumeration
            </summary>
            <param name="codeValue"></param>
            <param name="visible"></param>
            <param name="enabled"></param>
            <returns></returns>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.BusObjectEventHandler">
            <summary>
            Represents the method that will handle the Validate Event Handler in the business framerowk
            </summary>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.ListViewEventHandler">
            <summary>
            Represents the methods that will handle the actions before performing ListView Action.
            </summary>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.ValueChangeEventHandler">
            <summary>
            Represents delegate defenition for ValueChange Event Handler
            </summary>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.ValueChangeEventArgs">
            <summary>
             Argument  class for <see cref="T:Phoenix.FrameWork.BusFrame.ValueChangeEventHandler">ValueChangeEventHandler</see>
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.ValueChangeEventArgs.Field">
            <summary>
            Field that is 
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.ValueChangeEventArgs.#ctor(Phoenix.FrameWork.BusFrame.FieldBase,System.Object,System.Object,System.Object)">
            <summary>
            full constructor
            </summary>
            <param name="field">Field associalted with this event</param>
            <param name="eventValue">Value prior to this call</param>
            <param name="wParam">true if called from form/object level, false if called from field level</param>
            <param name="lParam">Not used, null value</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.ValueChangeEventArgs.#ctor(System.Object)">
            <summary>
            Basic Constructor
            </summary>
            <param name="eventValue"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.ValueChangeEventArgs.#ctor(System.Object,System.Object)">
            <summary>
            Constructor
            </summary>
            <param name="wParam"></param>
            <param name="lParam"></param>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.ValueChangeEventArgs.ValueBeforeEvent">
            <summary>
            Event Specific value, the value in the object
            </summary>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.ListViewEventArgs">
            <summary>
            Class definition for the Listview event args
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.ListViewEventArgs.EnumerateDesc">
            <summary>
            Enumerate the Description field of constraints
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.ListViewEventArgs.RestArgs">
            <summary>
            Arguments for Rest List View Event Execution( Custom List Views Only )
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.ListViewEventArgs.#ctor(Phoenix.FrameWork.Core.IDbHelper,System.Collections.ArrayList,System.Boolean)">
            <summary>
            Public constructor
            </summary>
            <param name="dbHelper">DBHelper object use</param>
            <param name="filters">Filter objects associated with </param>
            <param name="usePrimaryDb">True if Primary database is to be used, false otherwise</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.ListViewEventArgs.#ctor(Phoenix.FrameWork.Core.IDbHelper,System.Collections.ArrayList,System.Boolean,Phoenix.FrameWork.BusFrame.POrderByCollection)">
            <summary>
            Public constructor
            </summary>
            <param name="dbHelper">DBHelper object use</param>
            <param name="filters">Filter objects associated with </param>
            <param name="usePrimaryDb">True if Primary database is to be used, false otherwise</param>
            <param name="orderByFields">list of order by fields</param>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.ListViewEventArgs.Filters">
            <summary>
            Get the array of Filters 
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.ListViewEventArgs.OrderBy">
            <summary>
            Order By Fields
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.ListViewEventArgs.SelectFields">
            <summary>
            List View Select Fields
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.ListViewEventArgs.ReformattedColNames">
            <summary>
            If the Result columns in the reader have underscore(_) then format it.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.ListViewEventArgs.SqlStmt">
            <summary>
            Gets/Sets the SqlStmt generated for the ListView
            </summary>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.BusActionEventArgs">
            <summary>
            Class Defining the Business action event args.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusActionEventArgs.#ctor(System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="wParam"></param>
            <param name="lParam"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusActionEventArgs.#ctor(Phoenix.FrameWork.Core.IDbHelper,Phoenix.FrameWork.BusFrame.XmActionType,System.Boolean)">
            <summary>
            Constructs and initializes the object
            </summary>
            <param name="dbHelper">Database Helper object for the currebt action</param>
            <param name="actionType">Current Action</param>
            <param name="usePrimaryDb">True if Primary database is to be used, false otherwise</param>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusActionEventArgs.ActionType">
            <summary>
            Gets the current action type
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusActionEventArgs.DbHelper">
            <summary>
            Gets the DbHelepr object of the current context
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusActionEventArgs.Param2">
            <summary>
            User it for lparam
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusActionEventArgs.Param1">
            <summary>
            use it for wParam
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusActionEventArgs.IsContinue">
            <summary>
            Get/Set the continuer boolean.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusActionEventArgs.UsePrimaryDb">
            <summary>
            Get/Set the continuer boolean.
            </summary>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.ListViewRestArgs">
            <summary>
            Event Arguments for Rest List View Event Execution
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.ListViewRestArgs.SelectedColumns">
            <summary>
            Returns DB list of selected columns as passed in the 'Select' list
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.ListViewRestArgs.FilterClause">
            <summary>
            Returns the DB filter Clause as passed in the 'Filter' field
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.ListViewRestArgs.OrderByClause">
            <summary>
            Returns the DB OrderBy Clause as passed in the 'OrderBy' field
            </summary>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.PhoenixMustOverrideException">
            <summary>
            This Exception is thrown when the programmer has not overridden/or not implemented an expected business logic/event.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PhoenixMustOverrideException.#ctor">
            <summary>
            Default Constructor. Do not use this.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PhoenixMustOverrideException.#ctor(System.Int32,System.String)">
            <summary>
            Use this to specify the function name or event name that must be overriden
            </summary>
            <param name="codeErrorNumber">Pass the programmer defined number that identifies the code segment.</param>
            <param name="codeName">Name of function or event that needs to be overridden</param>
            <remarks>This function (InitializeMap) must be overriden and implemented by the programmer.</remarks>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.PhoenixActionNotSupportedException">
            <summary>
            This Exception is thrown when the request specifies an Action type that is not supported by this business object.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PhoenixActionNotSupportedException.#ctor">
            <summary>
            Default Constructor.Not to be used.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PhoenixActionNotSupportedException.#ctor(System.Int32,System.String,System.String)">
            <summary>
            Use this constructor to specify the action type and the business object name.
            </summary>
            <param name="codeErrorNo">Code Error number to identifying the code segment producing the error.</param>
            <param name="actionType">XM action type string</param>
            <param name="busObjName">Business Object name</param>
            <remarks>This Action type {0} is not supported by this business object {1}</remarks>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PhoenixActionNotSupportedException.#ctor(System.Int32,System.String)">
            <summary>
            Use this constructor to specify the business object name.
            </summary>
            <param name="codeErrorNo">Code Error number to identifying the code segment producing the error.</param>		
            <param name="busObjName">Business Object name</param>
            <remarks>This Action is not supported by this business object {0}.This may also happen when there is no action specified in the request. </remarks>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.PhoenixInvalidXmlTagException">
            <summary>
            This Exception is thrown when the request contains an invalid Xml tag.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PhoenixInvalidXmlTagException.#ctor">
            <summary>
            Default Constructor.Not to be used.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PhoenixInvalidXmlTagException.#ctor(System.Int32,System.String,System.String)">
            <summary>
            Use this constructor to specify the Xml Tag and the business object name.
            </summary>
            <param name="codeErrorNo">Code Error number to identifying the code segment producing the error.</param>
            <param name="xmlTag">Xml tag Name</param>
            <param name="busObjName">Business Object name</param>
            <remarks>Invalid XML tag passed {0} for this business object {1}</remarks>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.PhoenixArgumentNullException">
            <summary>
            This Exception is thrown when an argument is null.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PhoenixArgumentNullException.#ctor">
            <summary>
            Default Constructor.Not to be used.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PhoenixArgumentNullException.#ctor(System.Int32,System.String)">
            <summary>
            Use this constructor to specify the Xml Tag that cannot be null.
            </summary>
            <param name="codeErrorNo">Code Error number to identifying the code segment producing the error.</param>
            <param name="xmlTag">Xml tag Name</param>		
            <remarks>{0} cannot be null</remarks>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.PhoenixArgumentOutOfRangeException">
            <summary>
            This Exception is thrown when the argument is out of range.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PhoenixArgumentOutOfRangeException.#ctor">
            <summary>
            Default Constructor.Not to be used.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PhoenixArgumentOutOfRangeException.#ctor(System.Int32,System.String)">
            <summary>
            Use this constructor to specify the Xml Tag that is out of range.
            </summary>
            <param name="codeErrorNo">Code Error number to identifying the code segment producing the error.</param>
            <param name="xmlTag">Xml tag Name</param>		
            <remarks>Argument {0} is out of range</remarks>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.FieldBase">
            <summary>
            Summary description for FieldBase.
            </summary>
        </member>
        <member name="E:Phoenix.FrameWork.BusFrame.FieldBase.BeforePopulateEvent">
            <summary>
            Event to get notification befor populating an Enumeration
            </summary>
        </member>
        <member name="E:Phoenix.FrameWork.BusFrame.FieldBase.AfterPopulateEvent">
            <summary>
            Event to get notification after populating an Enumeration.
            </summary>
        </member>
        <member name="E:Phoenix.FrameWork.BusFrame.FieldBase.ValueChanged">
            <summary>
            Event to get notification after the value is changed
            </summary>
        </member>
        <member name="E:Phoenix.FrameWork.BusFrame.FieldBase.RefreshUI">
            <summary>
            Refresh UI for the value set
            WARNING: intented to be used only by the framework.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.FieldBase.DefaultValue">
            <summary>
            Default value of the field
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.FieldBase.DefaultTableId">
            <summary>
            Default value of the table
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.FieldBase.AllowedLength">
            <summary>
            Allowed length, complements the length defined for the fiels. This could be less than the lengthe defined by the system  
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FieldBase.#ctor">
            <summary>
            Basic Constructor
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FieldBase.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.String,Phoenix.FrameWork.Core.FieldType,System.Int16,System.Int16,System.Boolean,System.String,Phoenix.FrameWork.BusFrame.ParameterDirection,Phoenix.FrameWork.BusFrame.Availability,System.Int16)">
            <summary>
            Initializes the Object
            </summary>
            <remarks>
            <para>If table name string is passed null, then the default name is used.</para>
            <para>If the Database column name is null then the filed is assumed to be Calulate only</para>
            <para>If the field is <see cref="P:Phoenix.FrameWork.BusFrame.FieldBase.IsCalcOnly"/> and <see cref="T:System.Xml.XmlName"/> is null throws exception.</para>
            <para>If the xmlTag is passed as null, and column name is passed then the XmlTag Name id created as follows
            <BR/> Split the name by underscore (acct_type - split into acct, type)<BR/>
            Propercase each word ( Acct, Type) <BR/>
            Concatenate( AcctType)
            </para>
            </remarks>
            <param name="baseRecord">Base record Object</param>
            <param name="tableName">Table name to use</param>
            <param name="columnName">Database column name</param>
            <param name="xmlTag">Xml Tag name to use</param>
            <param name="fieldType">type of the field</param>
            <param name="length">Length of the field</param>
            <param name="precision">Precision of the field</param>
            <param name="isNullable">Is the field is nullable</param>
            <param name="direction">Parameter direction if the baseRecord is mapped to stored procedure</param>
            <param name="availability">Defines the field availability when the database is changed</param>
            <param name="paramOrder">Defined the parameter order in the stored procedure</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FieldBase.Finalize">
            <summary>
            Destructor to clean up the memory
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.FieldBase.ParamOrder">
            <summary>
            Parameter Order.  Applicable only to Stored Procedures. Otherwise 0
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.FieldBase.Selected">
            <summary>
            Include In Action set this if you need to select/list view specific data
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FieldBase.IsFieldAvailable(System.Boolean)">
            <summary>
            Get whether the field is available in Primary Db or Secondary Db
            </summary>
            <param name="isPrimaryDb">True to verify for Primary Db, flase for Secondary Db</param>
            <returns>True if available; otherwise false</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FieldBase.IsFieldAvailable(System.Boolean,System.Boolean)">
            <summary>
            Get whether the field is available in Primary Db or Secondary Db
            </summary>
            <param name="isPrimaryDb">True to verify for Primary Db, flase for Secondary Db</param>
            <param name="isOfflineDb">True if the Database is offline</param>
            <returns>True if available; otherwise false</returns>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.FieldBase.Availability">
            <summary>
            Get/Sets Availability option for the field
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.FieldBase.Container">
            <summary>
            Get the Parent Container of the field
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.FieldBase.BusinessObject">
            <summary>
            Business Object containing this field
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.FieldBase.ParameterDirection">
            <summary>
            Gets the parameter direction property field
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.FieldBase.UseCData">
            <summary>
            Get/Set to indicate the use of CDATA when serialize
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FieldBase.GetColumnName(System.Int32)">
            <summary>
            Returns the columns name for the specified table id.
            </summary>
            <param name="tableId">Table Id to map from. -1 uses the default table name</param>
            <returns></returns>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.FieldBase.PreviousValue">
            <summary>
            Gets/Sets the previous value of the field.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.FieldBase.IsIdentity">
            <summary>
            Returns true if the database column is Identity.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.FieldBase.IdentityType">
            <summary>
            Get/sets  the Identity type of the field if the field is Identity
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.FieldBase.FKValue">
            <summary>
            Gets the Foreign Key Values associated with this field.
             </summary>
             <remarks>
             The purpose of this field to get the Foreign Key Value associated with the Constraint of this field.
             If the Select was requested with <see cref="F:Phoenix.FrameWork.BusFrame.XmEnumerationType.EnumFKValues"/> and the field contains a constraint,
             this property will return valid value. Otherwise null.
             </remarks>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.FieldBase.Constraint">
            <summary>
            Gets/Sets the Constraint Property.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.FieldBase.IsValidatePositiveNumber">
            <summary>
            This flag is used by Number fields to validate whether the value is positive.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.FieldBase.SerializeInRequest">
            <summary>
            Property to Get/Set value to serialize in request
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.FieldBase.SerializeInResponse">
            <summary>
            Property to Get/Set value to serialize in response
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.FieldBase.IsNullValid">
            <summary>
            Verifies the Null Validation.
            </summary>
            <remarks>
            Returns flase if the field is Not Nullable and the fieldValue is null.
            </remarks>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.FieldBase.DefaultAs">
            <summary>
            Gets the DefaultAs string name
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.FieldBase.DefaultFrom">
            <summary>
            Gets the Default from stringName
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.FieldBase.IsMultiTableMap">
            <summary>
            Get the information about whether more than one table is mapped to this field.
            </summary>
            <remarks>
            The value is true, if the field is mapped to more than one table.
            </remarks>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.FieldBase.EnumValues">
            <summary>
            Enumerated Values of the Array.
            </summary>
            <remarks>
            Throws exception if the field <see cref="P:Phoenix.FrameWork.BusFrame.FieldBase.IsEnumerable"/> is false.
            </remarks>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FieldBase.GetSqlJoin(System.Boolean,System.Boolean)">
            <summary>
            Gets the Join Condition for the field.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FieldBase.GetTableJoin(System.Boolean,System.Boolean)">
            <summary>
            Gets the Table join condition for the field.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FieldBase.SetValueToNull">
            <summary>
            Set the Object Value to Null.  This is the only way to set the object to Null
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FieldBase.IsTableHasMap(System.Int32)">
             <summary>
             Vaerify the table id has a map.
             </summary>
            
             <param name="tableId">Table Id.</param>
             <returns>Returns true if the table has map in this field.</returns>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.FieldBase.TableName">
            <summary>
            Get the primary TableName name for the field
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.FieldBase.IsForceNullWhenReadonly">
            <summary>
            Property indicates to Force Null when value is not allowedis allowed in the current business action.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.FieldBase.IsCalcOnly">
            <summary>
            Get/Sets the CalcOnly information about the field. Return true if there no Database map;ohterwise false.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.FieldBase.IsEnumerable">
            <summary>
            Gets the Enumerable property of the field.  True if the field contains a constraint.
            </summary>
            <remarks>
            A field is considered enumerable only when it has a <see cref="P:Phoenix.FrameWork.BusFrame.FieldBase.Constraint"/> attached to it.
            </remarks>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.FieldBase.IsEnumCacheable">
            <summary>
            Gets the IsEnumCacheable property of the field.   Setting this to True Sets IsEnumerable also.
            </summary>
            <remarks>
            A field is considered IsEnumCacheable only when it has a <see cref="P:Phoenix.FrameWork.BusFrame.FieldBase.IsEnumerable"/> set to true
            </remarks>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.FieldBase.IsEnumOutput">
            <summary>
            Gets/Sets the property to indicate the XM to enumerate output.
            </summary>
            <remarks>
            A field is enumerable only when it has a <see cref="P:Phoenix.FrameWork.BusFrame.FieldBase.Constraint"/> attached to it.
            </remarks>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.FieldBase.IsValidType">
            <summary>
            Type validation of the Field
            </summary>
            <remarks>
            Verify the NullValidate, Length Validation.
            </remarks>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FieldBase.ValidateDefinition">
            <summary>
            Verifies that the definition is used to create the table is valid.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FieldBase.AddTableColumn(System.String,System.String)">
            <summary>
            Map additional tables to the field
            </summary>
            <param name="tableName">Table Name</param>
            <param name="columnName">Column Name</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FieldBase.PopulateEnums">
            <summary>
            Populate 
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FieldBase.PopulateEnums(Phoenix.FrameWork.Core.IDbHelper,System.Boolean,System.Boolean)">
            <summary>
            Populate Enum eration Feild
            </summary>
            <param name="dbHelper">Database Helper</param>
            <param name="isPrimaryDb">true if to use primary Db</param>
            <param name="getAll">true if GEt All otherwise get the Value only</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FieldBase.ConvertToFkValueToEnum">
            <summary>
            Returns the FkValue to the Enumeration
            </summary>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FieldBase.GetTableName(System.Boolean)">
            <summary>
            Get the database table name for which this field is mapped.
            </summary>
            <remarks>
            If a field has more than one table+column mapped then the default table name is
            returned.
            </remarks>
            <param name="usePrimDb">true if the Primary Db has to be used; false otherwise</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FieldBase.GetTableName(System.Int32,System.Boolean)">
            <summary>
            Get the database table name for which this field is mapped.
            </summary>
            <remarks>
            If a field has more than one table+column mapped then the default table name is
            returned.
            </remarks>
            <param name="tableId">TableId</param>
            <param name="usePrimDb">true if the Primary Db has to be used; false otherwise</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FieldBase.SqlName(System.Int32,System.Boolean)">
            <summary>
            Returns the Table Name prefixed with the
            </summary>
            <param name="tableId">Table Id</param>
            <param name="isPrimaryDb">boolen indicating to use PrimaryDb or secondary Db</param>
            <returns>fully qualified string for the database object name</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FieldBase.SqlNameAliased(System.Int32)">
            <summary>
            Returns the Table Name prefixed with the
            </summary>
            <param name="tableId">Table Id</param>
            <returns>fully qualified string for the database object name</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FieldBase.SqlNameAliased">
            <summary>
            Returns the Table Name prefixed with the
            </summary>
            <returns>fully qualified string for the database object name</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FieldBase.SqlWhere(Phoenix.FrameWork.BusFrame.Filter,System.Boolean)">
            <summary>
            Get the SqlWhere Condidtion for the filter passed
            </summary>
            <param name="filter">Filter element to use</param>
            <param name="isPrimaryDb">Flag to indicate to use Primary or secondary db</param>
            <returns>SQL string</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FieldBase.LoadFromNode(System.Xml.XmlNode,System.Boolean)">
            <summary>
            Load the field value from Xml Node
            </summary>
            <param name="valueNode">Xml Node containingthe field data.</param>
            <param name="showNullWarning">True if the excpetion is expected on null, otherwise false</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FieldBase.LoadStringValue(System.String,System.Boolean)">
            <summary>
            Loads the String value into the field
            </summary>
            <param name="nodeValue">String value to be loaded</param>
            <param name="isNull">True if the value is null.</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FieldBase.SerializeConstraint(System.Xml.XmlWriter,System.Boolean)">
            <summary>
            Serialized the constraint.
            </summary>
            <param name="xmlWriter">Xmlwriter to use for serialization</param>
            <param name="serializeValueAsAttribute">Serialize value as attribute</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FieldBase.SqlWhere(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Get the Sql Where for the Default table using base TAble Id -1
            </summary>
            <param name="tableId">Table Id</param>
            <param name="useAlias">If the Where clause needs to use Alias then pass true. Otherwise </param>
            <param name="isPrimaryDb">Flag to indicate the use of Primary or secondary db</param>
            <returns>Sql Where </returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FieldBase.SqlWhere(System.Int32,System.Int32,System.Boolean,System.Boolean)">
             <summary>
             Get the SqlWhere for the table Id specified.
             </summary>
             <remarks>
             If baseTable Id is less than 0 then uses the value of the field in the RHS.
             otherwise uses the Table
             </remarks>
             <param name="tableId">Table id representing the to create the Where</param>
             <param name="baseTableId">Based table on which the where needs to be created</param>
             <param name="useAlias">True if the table needs to have aliase or table name</param>
             <param name="isPrimaryDb">Flag to indicate the use of Primary or secondary db</param>
             <returns>SQL Statement</returns>
            
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FieldBase.Serialize(System.String,System.Xml.XmlWriter,System.Boolean,System.Boolean)">
            <summary>
            Serialize the current Filter into XmlWriter passed
            </summary>
            <param name="xmlWriter">Xml writer to use for writing Data</param>
            <param name="nodeName"></param>
            <param name="isClosedNode"></param>
            <param name="serializeValueAsElem">True if the value needs to be serialized as element</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FieldBase.Serialize(System.Xml.XmlWriter,System.String,System.String,System.Boolean,System.Boolean)">
             <summary>
            
             </summary>
             <param name="xmlWriter"></param>
             <param name="defaultAs"></param>
             <param name="defaultFrom"></param>
             <param name="serializeValueAsAttribute"></param>
             <param name="isResponse"></param>
             <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FieldBase.GetAuditSql(Phoenix.FrameWork.Core.IDbHelper,System.Boolean,System.Int32)">
             <summary>
            
             </summary>
             <param name="dbHelper"></param>
             <param name="isPrimDb"></param>
             <param name="tableId"></param>
             <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FieldBase.ValidateEnums(Phoenix.FrameWork.Core.IDbHelper,System.Boolean)">
            <summary>
            Implements the Enumerate Fields Action
            </summary>
            <param name="dbHelper">DBHelper to use</param>
            <param name="isPrimaryDb">true if the priamry db has to be used;false otherwise</param>
            <returns>true if success;otherwise false</returns>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.FieldBase.ValidValues">
            <summary>
            Returns Valid Values from the constraint.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.FieldBase.IsVisible">
            <summary>
            Get/Set Visible Property of the property
            - Sets the VisibilityState of the field 
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.FieldBase.IsNotNull">
            <summary>
            DO NOT USE:
            Use Nullable property. <see cref="P:Phoenix.FrameWork.BusFrame.FieldBase.Nullable"/>
            Set the Not Null property.  This property can be set only when the data field defintion is Nullable.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.FieldBase.IsShowTextWhenReadOnly">
            <summary>
            Get/Set the values for IsShowTextWhenReadOnly, if the field is not readolny, the get will always return true;
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.FieldBase.ValueObject">
            <summary>
            Value object
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FieldBase.SetFieldStatus(Phoenix.Windows.Forms.NullabilityState,Phoenix.Windows.Forms.VisibilityState,Phoenix.Windows.Forms.EnableState)">
            <summary>
            Set the field Status ...
            </summary>
            <param name="nullState"></param>
            <param name="visibility"></param>
            <param name="enableState"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FieldBase.RefreshUIStatus">
            <summary>
            Refreshes UI.  
            If no tracking is enabled, then the UI will be refreshed immediately
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FieldBase.SetValueWithEvents(System.Object)">
            <summary>
            DO NOT USE:   Use SetValue instead of this function 
            
            Set the value and fire events
            </summary>
            <param name="value">value of the field</param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FieldBase.SetValueFromDefault(System.Boolean)">
            <summary>
            Set the field value from the Default Value.
            --  No ValueChanged Event will be fired
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FieldBase.OnValueChanged(System.Boolean)">
            <summary>
            Raise value changed event for the field
            </summary>
            <returns>returns true if the Validation is successfull, false otherwisse</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FieldBase.ValidateField(System.Boolean,System.Object)">
            <summary>
            Validate 
            </summary>
            <param name="isFromForm">true if the event raised at the object level, false otherwsie</param>
            <param name="previousValue">previous value</param>
            <returns></returns>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.FieldBase.DbNullable">
            <summary>
            Get/Set fields nullable property to match with the database definition
            <remarks>Replaces IsNullable property</remarks>
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.FieldBase.Nullable">
            <summary>
            Get/Set fields property so that the value can be validated for nullability. 
            - useful to change the behavior of nullable column based on business logic.
            - property can be set only when the data field defintion is Nullable.
            - Updates the FieldState
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.FieldBase.SkipAudit">
            <summary>
            Get/Set fields property so that the property can be xexcluded from being audited. Default to false if not set
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.FieldBase.AuditColumnName">
            <summary>
            Set to override the fieldname for the audits
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FieldBase.SetValue(System.Object)">
            <summary>
            Set the value of the field.  will fire the ValueChanged event forecefully
            </summary>
            <param name="valueToset"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FieldBase.SetValue(System.Object,Phoenix.FrameWork.BusFrame.EventBehavior)">
            <summary>
            Set the value of the field. 
            </summary>
            <param name="valueToset">Value to be set for the field</param>
            <param name="valueChangedBehavior">control how the value changed event to be fired
            </param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FieldBase.SetFieldValue(System.Object)">
            <summary>
            Set the value of the field
            - Set the passed in value to ValueObject.
            </summary>
            <param name="valueToSet">value to be set</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FieldBase.NotifyPropertyChanged(System.String)">
            <summary>
            Notify property changed 
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="E:Phoenix.FrameWork.BusFrame.FieldBase.PropertyChanged">
            <summary>
            Event notified when property changed
            </summary>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.PFieldStateTracker">
            <summary>
            Field Status Tracker
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PFieldStateTracker.IsTrackingEnabled">
            <summary>
            True if the tracking enabled
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PFieldStateTracker.#ctor">
            <summary>
            Simple Constructor
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PFieldStateTracker.Objects">
            <summary>
            Get/Set fields
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PFieldStateTracker.Repopulate(Phoenix.FrameWork.BusFrame.FieldBase)">
            <summary>
            
            </summary>
            <param name="field"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PFieldStateTracker.StatusUpdated(Phoenix.FrameWork.BusFrame.FieldBase)">
            <summary>
            Calle when the status of the field is updated
            </summary>
            <param name="field"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PFieldStateTracker.ValueChanged(Phoenix.FrameWork.BusFrame.FieldBase)">
            <summary>
            called when the value of the field is changed
            </summary>
            <param name="field"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PFieldStateTracker.GetFieldState(Phoenix.FrameWork.BusFrame.FieldBase)">
            <summary>
            get the Field state, returns null, if the field is not found
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PFieldStateTracker.Dispose">
            <summary>
            Dispose the Traking properties
            </summary>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.PFieldState">
            <summary>
            Class to hold field state information
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PFieldState.#ctor(Phoenix.FrameWork.BusFrame.IFieldBase)">
            <summary>
            Constructor
            </summary>
            <param name="field"></param>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PFieldState.Repopulate">
            <summary>
            Get/Set flag to indicate, if the contraint needs to be repopulated
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PFieldState.IsStateChanged">
            <summary>
            Get/Set flag to indcat, if the state has been changed
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PFieldState.IsValueChanged">
            <summary>
            Get/Set flag to indicate if the value was changed
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PFieldState.Field">
            <summary>
            Filed for  the status
            </summary>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.PFieldStateCollection">
            <summary>
            Field State Collection
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PFieldStateCollection.Add(Phoenix.FrameWork.BusFrame.PFieldState)">
            <summary>
            Add  item
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PFieldStateCollection.GetKeyForItem(Phoenix.FrameWork.BusFrame.PFieldState)">
            <summary>
            get key for the field state
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.FieldCollection">
            <summary>
            Summary description for FieldCollection.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FieldCollection.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase)">
            <summary>
            Creates and Initializes the field collection
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FieldCollection.GetKeyForItem(Phoenix.FrameWork.BusFrame.FieldBase)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FieldCollection.ValidateFields">
            <summary>
            Validate all fields in collection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FieldCollection.ContainsKey(System.String)">
            <summary>
            Verifies the existance of the specified XmlTagName
            </summary>
            <param name="key">XmlTag Name</param>
            <returns>true iof found; otherwise false</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FieldCollection.GetIndex(System.String)">
            <summary>
            Returns index of the field specified in XmlTagName
            </summary>
            <param name="xmlTagName">Xml TagName <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.XmlTag"/></param>
            <returns>o based index if found. otherwise negative number (-1).</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FieldCollection.GetField(System.String)">
            <summary>
            Get the Field identified by the xmlTagName
            </summary>
            <param name="xmlTagName">Xml Tag Name <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.XmlTag"/> </param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FieldCollection.ResetEdit">
            <summary>
            Reset all fields Edit Flag <see cref="M:Phoenix.FrameWork.BusFrame.PBaseType.ResetEdit"/>
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FieldCollection.ResetAllEnums(System.Boolean)">
            <summary>
            Reset the enumerable field outputs according to the boolean value passed
            </summary>
            <param name="isEnumOutput">value to set <see cref="P:Phoenix.FrameWork.BusFrame.FieldBase.IsEnumOutput"/> property of the fields in the collection</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FieldCollection.ResetFieldStatus(Phoenix.FrameWork.BusFrame.FieldStatus)">
            <summary>
            Reset the enumerable field outputs according to the boolean value passed
            </summary>
            <param name="newStatus">value to set property of the fields in the collection</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FieldCollection.PopulateConstraints(Phoenix.FrameWork.Core.IDbHelper,System.Boolean)">
            <summary>
            Populate enumerable fields in the Field collection
            </summary>
            <param name="dbHelper"></param>
            <param name="isPrimaryDb"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FieldCollection.CreateStoreProcSql(System.Text.StringBuilder)">
            <summary>
            Create Stored Procedure SQl for the SqlStmt.
            </summary>
            <param name="sqlStmt"></param>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.Filter">
            <summary>
            Defines the filter object to be usedin list view.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.Filter.#ctor(Phoenix.FrameWork.BusFrame.FilterOperator)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.Filter.#ctor(System.Xml.XmlNode,System.Boolean)">
            <summary>
            Constructor with Node
            </summary>
            <param name="node">Xml Node Value</param>
            <param name="valueSerializedAsAttribute">true if the values are in attributes; false otherwise</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.Filter.#ctor(System.String,System.Object,Phoenix.FrameWork.BusFrame.FilterOperator,Phoenix.FrameWork.Core.FieldType)">
            <summary>
            Creates and Initializes Filter object
            </summary>
            <remarks>
            if the filtervalue is null then the value will be assumed to null
            </remarks>
            <param name="xmlTagName">xml tag Name</param>
            <param name="filterValue">Value of the filter</param>
            <param name="filterOperator">Filter Operator</param>
            <param name="fieldType">FieldType</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.Filter.#ctor(System.String,System.Object,Phoenix.FrameWork.BusFrame.FilterOperator)">
            <summary>
            Creates and Initializes Filter object
            </summary>
            <remarks>
            if the filtervalue is null then the value will be assumed to null
            </remarks>
            <param name="xmlTagName">xml tag Name</param>
            <param name="filterValue">Value of the filter</param>
            <param name="filterOperator">Filter Operator</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.Filter.#ctor(System.String,System.Object)">
            <summary>
            Creates and Initializes the filter object
            </summary>
            <remarks>
            <see cref="F:Phoenix.FrameWork.BusFrame.FilterOperator.EQ"/> is assumed for the operator.
            <para>
            if the filtervalue is null then the value will be assumed to null
            </para>
            </remarks>
            <param name="xmlTagName">Xml Tag name for the filter</param>
            <param name="filterValue">value for the filter</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.Filter.#ctor(Phoenix.FrameWork.BusFrame.FieldBase)">
            <summary>
            Creates and Initializes the filter object
            </summary>
            <remarks>
            <see cref="F:Phoenix.FrameWork.BusFrame.FilterOperator.EQ"/> is assumed for the operator.
            <para>
            if the filtervalue is null then the value will be assumed to null
            </para>
            </remarks>
            <param name="field">Field to Add as filter</param>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.Filter.GroupFilters">
            <summary>
            Group filters used for OR and AND joins
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.Filter.Operator">
            <summary>
            Gets the <see cref="T:Phoenix.FrameWork.BusFrame.FilterOperator"/> for the filter.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.Filter.FilterValue">
            <summary>
            Gets the value to filter.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.Filter.Serialize(System.Xml.XmlWriter,System.Boolean)">
            <summary>
            Serialize the current Filter into XmlWriter passed
            </summary>
            <param name="xmlWriter">Xml writer to use for writing Data</param>
            <param name="serializeValueAsAttribute"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.Filter.LoadFromXml(System.Xml.XmlNode,System.Boolean)">
            <summary>
            Load the current object from the XmlNode passed
            </summary>
            <param name="node">XmlNode from which the object has to be loaded from</param>
            <param name="valueSerializedAsAttribute">true if the object value is at 'value' attribute; otherwise false</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.Filter.GetOperatorString">
            <summary>
            Gets the Operator String
            </summary>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.Filter.GetWhereCondition(System.String)">
            <summary>
            Makes the Where Condition for the columnName
            </summary>
            <param name="columName"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.Filter.GetWhereCondition(Phoenix.FrameWork.BusFrame.BusObjectBase,System.Boolean)">
            <summary>
            Get the sqlstring where condiditon for the Filter
            </summary>
            <param name="parent"></param>
            <param name="isPrimaryDb"></param>
            <returns></returns>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.BusFrameHelper">
            <summary>
            Summary description for BusFrameHelper.
            <ModLog>
            <Mod issueId="" date="2005-10-01" ver="0" init="mramalin">Created</Mod>
            <Mod issueId="67185" date="2006-01-18" ver="1" init="mramalin">Modified MakeXmlFromReader</Mod>
            </ModLog>
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusFrameHelper.MakeXmlName(System.String)">
            <summary>
            Make Xml Name for the column name and append it to the XmlTag
            </summary>
            <param name="columnName"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusFrameHelper.MakeXmlNames(System.Data.IDataReader,System.Boolean)">
            <summary>
            Makes the XML name for column name from the reader and returns a string array
            </summary>
            <param name="reader"></param>
            <param name="reformatColumnName"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusFrameHelper.MakeDecimalFormat(System.Int32)">
            <summary>
            Make Decimal format for the scale passed
            </summary>
            <param name="scale"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusFrameHelper.MakeDecimalFormats(System.Data.IDataReader)">
            <summary>
            Returns the Get Decimal Formats
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusFrameHelper.MakeXmlFromReader(System.Data.IDataReader,System.Xml.XmlWriter,System.String,System.String[],System.String[])">
            <summary>
            Helper function makes  Xml output  for the current record
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="recordName">Record Name</param>
            <param name="xmlNames">Xml name for the fields</param>
            <param name="decFormats">array to include the decimal format</param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusFrameHelper.MakeXmlFromReader(System.Data.IDataReader,System.Xml.XmlWriter,System.String,System.String[],System.String[],System.String,System.String,System.Data.IDbConnection)">
            <summary>
            Helper function makes  Xml output  for the current record - only for Inquiry TC in PCI enabled 
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="recordName"></param>
            <param name="xmlNames"></param>
            <param name="decFormats"></param>
            <param name="acctColumnsToDecrypt"></param>
            <param name="panColumnsToDecrypt"></param>
            <param name="conn"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusFrameHelper.MakeXmlFromReader(System.Data.IDataReader,System.Xml.XmlWriter,System.String,System.String[],System.String[],System.Boolean)">
            <summary>
            Helper function makes Xml output for the current record
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="recordName">Record Name</param>
            <param name="xmlNames">Xml name for the fields</param>
            <param name="decFormats">array to include the decimal format</param>
            <param name="isCDATAOutput">enclose the string with CDATAOutput</param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusFrameHelper.MakeXmlFromReader(System.Data.IDataReader,System.Xml.XmlWriter,System.String,System.String[],System.String[],System.Boolean,System.String,System.String,System.Data.IDbConnection)">
            <summary>
            Helper function makes Xml output for the current record - PCI enabled inquiry TC
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="recordName"></param>
            <param name="xmlNames"></param>
            <param name="decFormats"></param>
            <param name="isCDATAOutput"></param>
            <param name="acctColumnsToDecrypt"></param>
            <param name="panColumnsToDecrypt"></param>
            <param name="conn"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusFrameHelper.GetDecryptedAcctNo(System.String,System.Data.IDbConnection)">
            <summary>
            Select decrypted Account number based on account Id
            </summary>
            <param name="acctId"></param>
            <param name="conn"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusFrameHelper.GetDecryptedPan(System.String,System.Data.IDbConnection)">
            <summary>
            GetDecryptedPan
            </summary>
            <param name="panId"></param>
            <param name="conn"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusFrameHelper.GetAcctEncryptionInfo">
            <summary>
            Get Account type encryption ifo from ad_ex_acct_type.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusFrameHelper.GetEncryptedAcctId(System.String)">
            <summary>
            Get  account id after encryption of account no
            <param name="acctno"></param>
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusFrameHelper.GetEncryptedPanId(System.String)">
            <summary>
            Get PanId from actual PAN
            </summary>
            <param name="pan"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.Helpers.BusFrameHelperJson.MakeJsonFromReader(Phoenix.FrameWork.BusFrame.BusObjectBase,System.Data.IDataReader,Newtonsoft.Json.JsonWriter,System.String,System.String[],System.String[],System.Boolean,System.Collections.Generic.List{System.String},System.Collections.Generic.Dictionary{System.String,System.Object}@)">
            <summary>
            Helper function makes Xml output for the current record
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="recordName">Record Name</param>
            <param name="xmlNames">Xml name for the fields</param>
            <param name="decFormats">array to include the decimal format</param>
            <param name="isCDATAOutput">enclose the string with CDATAOutput</param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.Helpers.BusFrameHelperJson.MakeJsonFromReader(Phoenix.FrameWork.BusFrame.BusObjectBase,System.Data.IDataReader,Newtonsoft.Json.JsonWriter,System.String,System.String[],System.String[],System.Boolean,System.String,System.String,System.Data.IDbConnection,System.Collections.Generic.List{System.String},System.Collections.Generic.Dictionary{System.String,System.Object}@)">
            <summary>
            Helper function makes Xml output for the current record - PCI enabled inquiry TC
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="recordName"></param>
            <param name="xmlNames"></param>
            <param name="decFormats"></param>
            <param name="isCDATAOutput"></param>
            <param name="acctColumnsToDecrypt"></param>
            <param name="panColumnsToDecrypt"></param>
            <param name="conn"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.Helpers.BusFrameHelperJson.MakeJsonFromReader(Phoenix.FrameWork.BusFrame.BusObjectBase,System.Data.IDataReader,Newtonsoft.Json.JsonWriter,System.String,System.String[],System.String[],System.Collections.Generic.List{System.String},System.Collections.Generic.Dictionary{System.String,System.Object}@)">
            <summary>
            Helper function makes  Xml output  for the current record
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="recordName">Record Name</param>
            <param name="xmlNames">Xml name for the fields</param>
            <param name="decFormats">array to include the decimal format</param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.Helpers.BusFrameHelperJson.MakeJsonFromReader(Phoenix.FrameWork.BusFrame.BusObjectBase,System.Data.IDataReader,Newtonsoft.Json.JsonWriter,System.String,System.String[],System.String[],System.String,System.String,System.Data.IDbConnection,System.Collections.Generic.List{System.String},System.Collections.Generic.Dictionary{System.String,System.Object}@)">
            <summary>
            Helper function makes  Xml output  for the current record - only for Inquiry TC in PCI enabled 
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="recordName"></param>
            <param name="xmlNames"></param>
            <param name="decFormats"></param>
            <param name="acctColumnsToDecrypt"></param>
            <param name="panColumnsToDecrypt"></param>
            <param name="conn"></param>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.Helpers.WfTaskKeySerializer">
            <summary>
            Wf Task Key Serializer
            </summary>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.BusGlobalVars">
            <summary>
            Summary description for GlobalVars.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusGlobalVars.Instance">
            <summary>
            Instance of the global variables
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusGlobalVars.SsoEnabled">
            <summary>
            SSO Enabled Flag
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusGlobalVars.ClientNetworkUser">
            <summary>
            Client Network User Name
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusGlobalVars.EmployeeId">
            <summary>
            Current Employee Id
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusGlobalVars.CurrentBranchNo">
            <summary>
            Current Branch Number
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusGlobalVars.Module">
            <summary>
            Current Module Name
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusGlobalVars.UserType">
            <summary>
            Current UserType
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusGlobalVars.ServiceId">
            <summary>
            Get/Ser the XM Service ID being used 
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusGlobalVars.SystemDate">
            <summary>
            Current System Date
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusGlobalVars.IsOldFmtDecimal">
            <summary>
            True if the Decimal needs to be formatted like COM+ components
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusGlobalVars.StatusSortHelper">
            <summary>
            Status Sort Helper to be loaded
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusGlobalVars.IsPhoenixClient">
            <summary>
            True if the call was made by the phoenix Client.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusGlobalVars.ValidateWindowSize">
            <summary>
            The control enabled CDS hits track info.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusGlobalVars.BranchName">
            <summary>
            Returns selective values as formatted string
            </summary>
            <returns></returns>
            
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusGlobalVars.EncryptPanEnabled">
            <summary>
            To Check If EncryptFlag is enabled or not
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusGlobalVars.PanEcrptPartialKey">
            <summary>
            store PCI parial Encryption Key
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusGlobalVars.ToFmtString">
            <summary>
            Tod format string
            </summary>
            <returns></returns>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.BusGlobalVarsSerializable">
            <summary>
            Summary description for GlobalVars
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusGlobalVarsSerializable.SsoEnabled">
            <summary>
            SSO Enabled Flag
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusGlobalVarsSerializable.ClientNetworkUser">
            <summary>
            Client Network User Name
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusGlobalVarsSerializable.EmployeeId">
            <summary>
            Current Employee Id
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusGlobalVarsSerializable.CurrentBranchNo">
            <summary>
            Current Branch Number
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusGlobalVarsSerializable.Module">
            <summary>
            Current Module Name
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusGlobalVarsSerializable.UserType">
            <summary>
            User Type
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusGlobalVarsSerializable.ServiceId">
            <summary>
            Get/Ser the XM Service ID being used 
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusGlobalVarsSerializable.SystemDate">
            <summary>
            Current System Date
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusGlobalVarsSerializable.IsOldFmtDecimal">
            <summary>
            True if the Decimal needs to be formatted like COM+ components
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusGlobalVarsSerializable.StatusSortHelper">
            <summary>
            Status Sort Helper to be loaded
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusGlobalVarsSerializable.IsPhoenixClient">
            <summary>
            True if the call was made by the phoenix Client.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusGlobalVarsSerializable.ValidateWindowSize">
            <summary>
            The control enabled CDS hits track info.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusGlobalVarsSerializable.BranchName">
            <summary>
            Returns selective values as formatted string
            </summary>
            <returns></returns>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusGlobalVarsSerializable.EncryptPanEnabled">
            <summary>
            To Check If EncryptFlag is enabled or not
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusGlobalVarsSerializable.PanEcrptPartialKey">
            <summary>
            store PCI parial Encryption Key
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusGlobalVarsSerializable.ToFmtString">
            <summary>
            Tod format string
            </summary>
            <returns></returns>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.BusObjSerializer">
            <summary>
            Business Object Helper
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjSerializer.SerializeToXml(Phoenix.FrameWork.BusFrame.BusObjectBase,System.Boolean,System.Boolean)">
            <summary>
            Serialize an object and return string
            </summary>
            <param name="busObject"></param>
            <param name="isResponse"></param>
            <param name="isDirtyOnly"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjSerializer.LoadFromXml(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String)">
            <summary>
            
            </summary>
            <param name="busObject"></param>
            <param name="objectXml"></param>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.StringArray">
            <summary>
            Dynamic String Array
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.StringArray.Item(System.Int32)">
            <summary>
            Get/Set array element
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.StringArray.IsNull(System.Int32)">
            <summary>
            Check whether the string is NULL
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.IntArray">
            <summary>
            Dynamic Integer Array
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.IntArray.Item(System.Int32)">
            <summary>
            Indexer for integer
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.IntArray.IsNull(System.Int32)">
            <summary>
            Check nullvalue
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.DateTimeArray">
            <summary>
            Dynamic Array to get the datetime
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DateTimeArray.Item(System.Int32)">
            <summary>
            Indexer for the DateTime
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DateTimeArray.IsNull(System.Int32)">
            <summary>
            chceck if this is null
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.DecimalArray">
            <summary>
            Dynamic Array to get store decimal
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.DecimalArray.Item(System.Int32)">
            <summary>
            Indexer for the DateTime
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.DecimalArray.IsNull(System.Int32)">
            <summary>
            chceck if this is null
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.Currency">
            <summary>
            Currency class containing details related to a currency
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.Currency.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.Currency.CurrencyId">
            <summary>
            CurrencyId
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.Currency.IsoCode">
            <summary>
            IsoCode
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.Currency.CurrencySymbol">
            <summary>
            CurrencySymbol
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.Currency.CurrencyPosition">
            <summary>
            CurrencyPosition
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.Currency.CurrencyNegative">
            <summary>
            CurrencyNegative
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.Currency.ThousandSymbol">
            <summary>
            ThousandSymbol
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.Currency.ThousandDigits">
            <summary>
            ThousandDigits
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.Currency.DecimalSymbol">
            <summary>
            DecimalSymbol
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.Currency.DecimalDigits">
            <summary>
            DecimalDigits
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.Currency.#ctor(System.Int32,System.String,System.String,System.Int32,System.Int32,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Contructor for passing all details related to the currency
            </summary>
            <param name="currencyId"></param>
            <param name="isoCode"></param>
            <param name="currencySymbol"></param>
            <param name="currencyPosition"></param>
            <param name="currencyNegative"></param>
            <param name="thousandSymbol"></param>
            <param name="thousandDigits"></param>
            <param name="decimalSymbol"></param>
            <param name="decimaldigits"></param>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.PCurrencyHelper">
            <summary>
            Summary description for FormatHelpers.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PCurrencyHelper.#ctor">
            <summary>
            Creates the currency helper class
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PCurrencyHelper.Currencies">
            <summary>
            Hashtable containg the list of supportde currencies
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PCurrencyHelper.BankCurrencyId">
            <summary>
            BankCurrencyId
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PCurrencyHelper.ReportingCurrencyId">
            <summary>
            ReportingCurrencyId
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PCurrencyHelper.PresentationCurrencyId">
            <summary>
            PresentationCurrencyId
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PCurrencyHelper.PresentationCurrencyFlag">
            <summary>
            PresentationCurrencyFlag
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PCurrencyHelper.BankIsoCode">
            <summary>
            BankIsoCode
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PCurrencyHelper.HideSymbol">
            <summary>
            HideSymbol
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PCurrencyHelper.IsInit">
            <summary>
            IsInit
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PCurrencyHelper.AmountPrecision">
            <summary>
            AmountPrecision
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PCurrencyHelper.GLAmountPrecision">
            <summary>
            GLAmountPrecision
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PCurrencyHelper.AssumeDecimal">
            <summary>
            AssumeDecimal
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PCurrencyHelper.GetFormattedValue(System.Int32,System.Object)">
            <summary>
            Get Formatted Value of the string
            </summary>
            <param name="currencyId"></param>
            <param name="unformattedValue"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PCurrencyHelper.GetFormattedValue(System.Int32,System.Decimal)">
            <summary>
            Get the Formatted Value
            </summary>
            <param name="currencyId"></param>
            <param name="currencyValue"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PCurrencyHelper.GetFormattedValue(System.String,System.Decimal)">
            <summary>
            Get the Formatted Value
            </summary>
            <param name="isoCode"></param>
            <param name="currencyValue"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PCurrencyHelper.GetFormattedValue(System.Decimal)">
            <summary>
            Get the Formatted Value
            </summary>
            <param name="currencyValue"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PCurrencyHelper.GetUnformattedValue(System.Int32,System.String)">
            <summary>
            Get the Unformatted Value
            </summary>
            <param name="currencyId"></param>
            <param name="currencyValue"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PCurrencyHelper.GetUnformattedValue(System.Int32,System.String,System.Boolean)">
            <summary>
            Get the Unformatted Value
            </summary>
            <param name="currencyId"></param>
            <param name="currencyValue"></param>
            <param name="assumeDecimal"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PCurrencyHelper.GetUnformattedValue(System.String,System.String)">
            <summary>
            Get the Unformatted Value
            </summary>
            <param name="isoCode"></param>
            <param name="currencyValue"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PCurrencyHelper.GetUnformattedValue(System.String)">
            <summary>
            Get the Unformatted Value
            </summary>
            <param name="currencyValue"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PCurrencyHelper.GetIsoCode(System.Int32)">
            <summary>
            Get the Iso Code
            </summary>
            <param name="currencyId"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PCurrencyHelper.GetCurrenyId(System.String)">
            <summary>
            Get the CurrenyId
            </summary>
            <param name="isoCode"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PCurrencyHelper.GetCurrencyDetails(System.Int32)">
            <summary>
            Get details of a Currency
            </summary>
            <param name="currencyId"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PCurrencyHelper.GetCurrencyDetails(System.String)">
            <summary>
            Get details of a Currency
            </summary>
            <param name="isoCode"></param>
            <returns></returns>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.ObjNameHelper">
            <summary>
            Summary description for ObjNameHelper.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.ObjNameHelper.MakeFullNameClient(System.String)">
            <summary>
            Make FullName to create a client object for a specific table
            </summary>
            <param name="tableName">Table Name</param>
            <returns>FullName of the client object for the table name specified</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.ObjNameHelper.MakeFullNameServer(System.String)">
            <summary>
            Make FullName to create a server object for a specific table
            </summary>
            <param name="tableName">Table Name</param>
            <returns>FullName of the server object for the table name specified</returns>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.BusObjHelper">
            <summary>
            Helper class to work with busObject
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjHelper.CreateIBusinessObject(System.String,System.Boolean)">
            <summary>
            Create Ibusiness Object
            </summary>
            <param name="resKey"></param>
            <param name="isServer"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjHelper.CreateBusObject(System.String,System.Boolean)">
            <summary>
            Creates the specified object from the resource.
            </summary>
            <param name="resKey">Key value to get the string info of the assembly and object</param>
            <returns>Valid object if success; otherwise null</returns>
            <param name="isServer">true if the object needed is server; otherwise false</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjHelper.MakeClientObject(System.String)">
            <summary>
            Create a Client Object
            </summary>
            <param name="tableName">XML table name</param>
            <returns>BusObject if created, otherwise null</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjHelper.MakeServerObject(System.String)">
            <summary>
            Create a server object for specified name
            </summary>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjHelper.GetDateTimeFieldValue(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String)">
            <summary>
            Get the Datetime value of a field
            </summary>
            <param name="busObject">Business object</param>
            <param name="xmlTag">Xml tag name for the field</param>
            <returns>DbDateTime.Null if not found, otherwise the value</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjHelper.GetIntFieldValue(Phoenix.FrameWork.BusFrame.IBusinessObject,System.String)">
            <summary>
            Get the int value of a field
            </summary>
            <param name="busObject">Business object</param>
            <param name="xmlTag">Xml tag name for the field</param>
            <returns>DbInt.Null if not found, otherwise the value</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjHelper.GetFieldValue(Phoenix.FrameWork.BusFrame.IBusinessObject,System.String)">
            <summary>
            Get the string value of a field
            </summary>
            <param name="busObject">Business object</param>
            <param name="xmlTag">Xml tag name for the field</param>
            <returns>null if not found, otherwise the value</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjHelper.InitGlobalObject(System.String,Phoenix.FrameWork.BusFrame.XmEnumerationType)">
            <summary>
            
            </summary>
            <param name="componentName"></param>
            <param name="enumType"></param>
            <returns></returns>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.PSqlHelper">
            <summary>
            PSqlHelper calls to use
            </summary>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.PSqlHelper.HelperStatus">
            <summary>
            Helper Status
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.PSqlHelper.HelperStatus.None">
            <summary>
            No Status
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.PSqlHelper.HelperStatus.Success">
            <summary>
            Last Call was succes
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.PSqlHelper.HelperStatus.Error">
            <summary>
            Last call had an error
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.PSqlHelper.HelperStatus.NoMoreRecords">
            <summary>
            No more records to fetch
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.PSqlHelper.HelperStatus.NoResults">
            <summary>
            No more result set to fetch
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.PSqlHelper.HelperStatus.ReaderNotOpen">
            <summary>
            Reader is not open to fetch.
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.PSqlHelper.HelperStatus.InvalidDbHelper">
            <summary>
            Dbhelper to is invalid
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.PSqlHelper.HelperStatus.InvalidArguments">
            <summary>
            Number of arguments in the into var list are not matching with the result
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PSqlHelper.Status">
            <summary>
            Gets the status of the last call;
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PSqlHelper.ThrowDbException">
            <summary>
            Flag to turn off the execptions;
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PSqlHelper.Exception">
            <summary>
            Gets the last exception
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PSqlHelper.DataSet">
            <summary>
            Gets/Sets the DataSet used for fetching rows instead of the Reader.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PSqlHelper.NextResult">
            <summary>
            Fetch the next result for the current cursor
            </summary>
            <returns>True if success;otherwise false</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PSqlHelper.NextRow">
            <summary>
            Gets the Next row from the reader.
            </summary>
            <returns>If success an object array contaning the columns; otherwise null</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PSqlHelper.NextRowInto(Phoenix.FrameWork.BusFrame.IPhoenixDataType[])">
            <summary>
            Gets the next row into the variables passed
            </summary>
            <param name="intoVars">One or more into variables parameters</param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PSqlHelper.SqlImmediate(System.String)">
            <summary>
            Executes the sql with the internal connection and fetches the firs row
            </summary>
            <param name="sqlStmt">SqlStatement to execute</param>
            <returns>null of the operation is not success or no result set. Caller must verify the <see cref="P:Phoenix.FrameWork.BusFrame.PSqlHelper.Status"/> property.</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PSqlHelper.SqlImmediate(Phoenix.FrameWork.Core.IDbHelper,System.String)">
            <summary>
             Executes the sql with the internal connection and fetches the firs row
            </summary>
            <param name="dbHelper">Dbhelper to use</param>
            <param name="sqlStmt">SqlStatement to execute</param>
            <returns>null of the operation is not success or no result set. Caller must verify the <see cref="P:Phoenix.FrameWork.BusFrame.PSqlHelper.Status"/> property.</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PSqlHelper.SqlImmediate(System.Data.IDbConnection,System.String)">
            <summary>
             Executes the sql with the internal connection and fetches the firs row
            [NOTE: if you are passing a closed conection, then a the connection will be opened for execution and closed after first row fetch.]
            </summary>
            <param name="dbConnection">Sql Connection object</param>
            <param name="sqlStmt">SqlStatement to execute</param>
            <returns>null of the operation is not success or no result set. Caller must verify the <see cref="P:Phoenix.FrameWork.BusFrame.PSqlHelper.Status"/> property.</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PSqlHelper.SqlImmediate(Phoenix.FrameWork.Core.IDbHelper,System.Data.IDbConnection,System.String)">
            <summary>
             Executes the sql with the internal connection and fetches the firs row
             </summary>
            <param name="dbConnection">Sql Connection object</param>
            <param name="sqlStmt">SqlStatement to execute</param>
            <param name="dbHelper">database helper to </param>
            <returns>null of the operation is not success or no result set. Caller must verify the <see cref="P:Phoenix.FrameWork.BusFrame.PSqlHelper.Status"/> property.</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PSqlHelper.SqlImmediateInto(System.String,Phoenix.FrameWork.BusFrame.IPhoenixDataType[])">
            <summary>
            Executes the sqlstatement and fetches the first row of the result into the Into variables
            </summary>
            <param name="sqlStmt">Sql statements to execute</param>
            <param name="intoVars">parameters list of into variables</param>
            <returns>Status of the operation</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PSqlHelper.SqlImmediateInto(Phoenix.FrameWork.Core.IDbHelper,System.String,Phoenix.FrameWork.BusFrame.IPhoenixDataType[])">
            <summary>
            Executes the sqlstatement and fetches the first row of the result into the Into variables
            </summary>
            <param name="sqlStmt">Sql statements to execute</param>
            <param name="intoVars">parameters list of into variables</param>
            <param name="dbHelper">Dbhelper to use</param>
            <returns>Status of the operation</returns>	
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PSqlHelper.SqlImmediateInto(System.Data.IDbConnection,System.String,Phoenix.FrameWork.BusFrame.IPhoenixDataType[])">
            <summary>
            Executes the sqlstatement and fetches the first row of the result into the Into variables
            [
            </summary>
            <param name="sqlStmt">Sql statements to execute</param>
            <param name="intoVars">parameters list of into variables</param>
            <param name="dbConnection">Database connection to use</param>
            <returns>Status of the operation</returns>	
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PSqlHelper.SqlImmediateInto(Phoenix.FrameWork.Core.IDbHelper,System.Data.IDbConnection,System.String,Phoenix.FrameWork.BusFrame.IPhoenixDataType[])">
            <summary>
            Executes the sqlstatement and fetches the first row of the result into the Into variables
            </summary>
            <param name="dbHelper">Db helper</param>
            <param name="sqlStmt">Sql statements to execute</param>
            <param name="intoVars">parameters list of into variables</param>
            <param name="dbConnection">Database connection to use</param>
            <returns>Status of the operation</returns>	
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PSqlHelper.CloseReader">
            <summary>
            Close the reader
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PSqlHelper.ClearException">
            <summary>
            Clears the exception.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PSqlHelper.Dispose">
            <summary>
            Dispose the object
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PSqlHelper.Dispose(System.Boolean)">
            <summary>
            Dispose the object
            </summary>
            <param name="disposing">true if disposing; false otherwise</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PSqlHelper.Finalize">
            <summary>
            Destructors to calls
            </summary>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.KeyCollection">
            <summary>
            Summary description for KeyCollection.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.KeyCollection.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase)">
            <summary>
            Creates and initializes the collection
            </summary>
            <param name="container">the business object which contains this collection</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.KeyCollection.AddPrimaryKey(System.String,System.String,System.Object[])">
            <summary>
            Add Primary Key for the object
            </summary>
            <param name="tableName">name of the table</param>
            <param name="description">Description of the key</param>
            <param name="keyValues">Array of Key Values</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.KeyCollection.AddKey(System.String,System.Object[])">
            <summary>
            Add Primary Key for the object assuming the base table
            </summary>
            <param name="description">Description of the key</param>
            <param name="keyValues">Array of Key Values</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.KeyCollection.AddKeyForNew(System.String,System.String,System.Object[])">
            <summary>
            Add key for new.
            </summary>
            <param name="tableName">name of the table</param>
            <param name="description">Description of the key</param>
            <param name="keyValues">Array of Key Values</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.KeyCollection.AddKeyForNew(System.String,System.Object[])">
            <summary>
            Add Key for new assuming the base table
            </summary>
            <param name="description">Description of the key</param>
            <param name="keyValues">Array of Key Values</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.KeyCollection.AddKey(System.String,System.String,Phoenix.FrameWork.BusFrame.KeyType,System.Object[])">
            <summary>
             Add key into the list
            </summary>
            <param name="tableName">Table Name</param>
            <param name="description">Description of the key</param>
            <param name="keyType">Key Type</param>		
            <param name="keyValues">Array of Key Values</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.KeyCollection.AddKey(System.Int32,System.String,Phoenix.FrameWork.BusFrame.KeyType,System.Object[])">
            <summary>
            Add key into the list
            </summary>
            <param name="tableIndex">Table Index</param>
            <param name="description">Description of the key</param>
            <param name="keyType">Key Type</param>
            <param name="keyValues">Array of Key Values</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.KeyCollection.GetWhereClause(System.Text.StringBuilder,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Get the where clause for 
            </summary>
            <param name="sqlText"></param>
            <param name="tableIndex"></param>
            <param name="isSelectSql"></param>
            <param name="isPrimaryDb"></param>
            <returns>Returns true if success; otherwise false</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.KeyCollection.GetWhereClause(System.Text.StringBuilder,System.Int32,System.Boolean,System.Boolean,Phoenix.FrameWork.BusFrame.FieldBase)">
            <summary>
            Get the where clause for 
            </summary>
            <param name="sqlText"></param>
            <param name="tableIndex"></param>
            <param name="isSelectSql"></param>
            <param name="isPrimaryDb"></param>
            <param name="rowVersion"></param>
            <returns>Returns true if success; otherwise false</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.KeyCollection.GetValidKeyToUse(System.Int32)">
            <summary>
            Gets a Valid Key definition to use. First key which has all values available
            </summary>
            <param name="tableIndex">Table index</param>
            <returns>Key if found; otherwise null</returns>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.KeyDefinition">
            <summary>
            Defined the Indexes for the table.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.KeyDefinition.#ctor(System.Int32,System.String,Phoenix.FrameWork.BusFrame.KeyType,System.Object[])">
            <summary>
            Initializes and create the Key Definition object
            </summary>
            <param name="tableId">Table id for which this key is defined for</param>
            <param name="description">Description of key</param>
            <param name="keyType"><see cref="P:Phoenix.FrameWork.BusFrame.KeyDefinition.KeyType"/> of the key</param>
            <param name="keyValues">List of object params.</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.KeyDefinition.#ctor(System.String,Phoenix.FrameWork.BusFrame.KeyType,System.Object[])">
            <summary>
            Initializes and create the Key Definition object
            </summary>
            <remarks>
            Assumes Table Id as 0
            </remarks>
            <param name="description">Description of key</param>
            <param name="keyType"><see cref="P:Phoenix.FrameWork.BusFrame.KeyDefinition.KeyType"/> of the key</param>
            <param name="keyValues">List of object params.</param>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.KeyDefinition.TableId">
            <summary>
            Gets the TableId for which this key is associated with.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.KeyDefinition.KeyType">
            <summary>
            Returns the key type.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.KeyDefinition.Description">
            <summary>
            Description  of the key.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.KeyDefinition.KeyList">
            <summary>
            List of key elements
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.KeyDefinition.IsValidKeyToUse">
            <summary>
            Verify the field values and make sure this key is usable.
            </summary>
            <returns>True if the all elements in the key is valid; otherwise false</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.KeyDefinition.Contains(Phoenix.FrameWork.BusFrame.FieldBase)">
            <summary>
            IF Key contains a Field
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.NoDbBigInt">
            <summary>
            Summary description for NoDbBigInt.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.NoDbBigInt.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Creates a Non Db Map. Used for calculate only.
            Sets <see cref="P:Phoenix.FrameWork.BusFrame.FieldBase.IsCalcOnly"/> property to true.
            Sets <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property to false;
            </remarks>
            <param name="xmlName">Xml Name</param>
            <param name="baseRecord">Base Record</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.NoDbBigInt.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Boolean)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Creates a Non Db Map. Used for calculate only.
            Sets <see cref="P:Phoenix.FrameWork.BusFrame.FieldBase.IsCalcOnly"/> property to true.
            </remarks>
            <param name="xmlName">Xml Name</param>
            <param name="baseRecord">Base Record</param>
            <param name="isNullable">Boolen to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.NoDbChar">
            <summary>
            Summary description for NoDbChar.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.NoDbChar.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Int16)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Creates a Non Db Map. Used for calculate only.
            Sets <see cref="P:Phoenix.FrameWork.BusFrame.FieldBase.IsCalcOnly"/> property to true.
            Sets <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property to false;
            </remarks>
            <param name="xmlName">Xml Name</param>
            <param name="baseRecord">Base Record</param>
            <param name="length">Scale of of the decimal</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.NoDbChar.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Int16,System.Boolean)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Creates a Non Db Map. Used for calculate only.
            Sets <see cref="P:Phoenix.FrameWork.BusFrame.FieldBase.IsCalcOnly"/> property to true.
            </remarks>
            <param name="xmlName">Xml Name</param>
            <param name="baseRecord">Base Record</param>
            <param name="length">Scale of of the decimal</param>
            <param name="isNullable">Boolen to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.NoDbDateTime">
            <summary>
            Summary description for NoDbDateTime.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.NoDbDateTime.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Creates a Non Db Map. Used for calculate only.
            Sets <see cref="P:Phoenix.FrameWork.BusFrame.FieldBase.IsCalcOnly"/> property to true.
            Sets <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property to false;
            </remarks>
            <param name="xmlName">Xml Name</param>
            <param name="baseRecord">Base Record</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.NoDbDateTime.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Boolean)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Creates a Non Db Map. Used for calculate only.
            Sets <see cref="P:Phoenix.FrameWork.BusFrame.FieldBase.IsCalcOnly"/> property to true.
            </remarks>
            <param name="xmlName">Xml Name</param>
            <param name="baseRecord">Base Record</param>
            <param name="isNullable">Boolen to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.NoDbDecimal">
            <summary>
            Summary description for NoDbDecimal.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.NoDbDecimal.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Int16,System.Int16)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Creates a Non Db Map. Used for calculate only.
            Sets <see cref="P:Phoenix.FrameWork.BusFrame.FieldBase.IsCalcOnly"/> property to true.
            Sets <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property to false;
            </remarks>
            <param name="xmlName">Xml Name</param>
            <param name="baseRecord">Base Record</param>
            <param name="scale">Scale of of the decimal</param>
            <param name="precision">precision of the decimal</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.NoDbDecimal.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Int16,System.Int16,System.Boolean)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Creates a Non Db Map. Used for calculate only.
            Sets <see cref="P:Phoenix.FrameWork.BusFrame.FieldBase.IsCalcOnly"/> property to true.
            </remarks>
            <param name="xmlName">Xml Name</param>
            <param name="baseRecord">Base Record</param>
            <param name="scale">Scale of of the decimal</param>
            <param name="precision">precision of the decimal</param>
            <param name="isNullable">Boolen to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.NoDbImage">
            <summary>
            Simple No Db Image
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.NoDbImage.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Boolean)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Creates a Non Db Map. Used for calculate only.
            Sets <see cref="P:Phoenix.FrameWork.BusFrame.FieldBase.IsCalcOnly"/> property to true.
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="xmlName">Xml Name</param>
            <param name="isNullable">Boolean to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.NoDbImage.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Creates a Non Db Map. Used for calculate only.
            Sets <see cref="P:Phoenix.FrameWork.BusFrame.FieldBase.IsCalcOnly"/> property to true.
            Sets <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property to false
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="xmlName">Xml Name</param>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.NoDbInt">
            <summary>
            Summary description for NoDbInt.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.NoDbInt.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Creates a Non Db Map. Used for calculate only.
            Sets <see cref="P:Phoenix.FrameWork.BusFrame.FieldBase.IsCalcOnly"/> property to true.
            Sets <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property to false;
            </remarks>
            <param name="xmlName">Xml Name</param>
            <param name="baseRecord">Base Record</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.NoDbInt.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Boolean)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Creates a Non Db Map. Used for calculate only.
            Sets <see cref="P:Phoenix.FrameWork.BusFrame.FieldBase.IsCalcOnly"/> property to true.
            </remarks>
            <param name="xmlName">Xml Name</param>
            <param name="baseRecord">Base Record</param>
            <param name="isNullable">Boolen to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.NoDbNumeric">
            <summary>
            Summary description for NoDbNumeric.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.NoDbNumeric.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Int16,System.Int16,System.Boolean)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Creates a Non Db Map. Used for calculate only.
            Sets <see cref="P:Phoenix.FrameWork.BusFrame.FieldBase.IsCalcOnly"/> property to true.
            </remarks>
            <param name="xmlName">Xml Name</param>
            <param name="baseRecord">Base Record</param>
            <param name="scale">Scale of of the decimal</param>
            <param name="precision">precision of the decimal</param>
            <param name="isNullable">Boolen to set Nullable property</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.NoDbNumeric.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Int16,System.Int16)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Creates a Non Db Map. Used for calculate only.
            Sets <see cref="P:Phoenix.FrameWork.BusFrame.FieldBase.IsCalcOnly"/> property to true.
            Sets <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property to false.
            </remarks>
            <param name="xmlName">Xml Name</param>
            <param name="baseRecord">Base Record</param>
            <param name="scale">Scale of of the decimal</param>
            <param name="precision">precision of the decimal</param>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.NoDbSmallDateTime">
            <summary>
            Summary description for NoDbSmallDateTime.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.NoDbSmallDateTime.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Boolean)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Creates a Non Db Map. Used for calculate only.
            Sets <see cref="P:Phoenix.FrameWork.BusFrame.FieldBase.IsCalcOnly"/> property to true.
            </remarks>
            <param name="xmlName">Xml Name</param>
            <param name="baseRecord">Base Record</param>
            <param name="isNullable">Boolen to set Nullable property</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.NoDbSmallDateTime.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Creates a Non Db Map. Used for calculate only.
            Sets <see cref="P:Phoenix.FrameWork.BusFrame.FieldBase.IsCalcOnly"/> property to true.
            Sets <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property to false.
            </remarks>
            <param name="xmlName">Xml Name</param>
            <param name="baseRecord">Base Record</param>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.NoDbSmallInt">
            <summary>
            Summary description for NoDbSmallInt.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.NoDbSmallInt.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Boolean)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Creates a Non Db Map. Used for calculate only.
            Sets <see cref="P:Phoenix.FrameWork.BusFrame.FieldBase.IsCalcOnly"/> property to true.
            </remarks>
            <param name="xmlName">Xml Name</param>
            <param name="baseRecord">Base Record</param>
            <param name="isNullable">Boolen to set Nullable property</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.NoDbSmallInt.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Creates a Non Db Map. Used for calculate only.
            Sets <see cref="P:Phoenix.FrameWork.BusFrame.FieldBase.IsCalcOnly"/> property to true.
            Sets <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property to false
            </remarks>
            <param name="xmlName">Xml Name</param>
            <param name="baseRecord">Base Record</param>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.NoDbText">
            <summary>
            Summary description for NoDbText.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.NoDbText.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Boolean)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Creates a Non Db Map. Used for calculate only.
            Sets <see cref="P:Phoenix.FrameWork.BusFrame.FieldBase.IsCalcOnly"/> property to true.
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="xmlName">Xml Name</param>
            <param name="isNullable">Boolean to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.NoDbText.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Creates a Non Db Map. Used for calculate only.
            Sets <see cref="P:Phoenix.FrameWork.BusFrame.FieldBase.IsCalcOnly"/> property to true.
            Sets <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property to false
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="xmlName">Xml Name</param>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.NoDbTinyInt">
            <summary>
            Summary description for NoDbTinyInt.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.NoDbTinyInt.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Boolean)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Creates a Non Db Map. Used for calculate only.
            Sets <see cref="P:Phoenix.FrameWork.BusFrame.FieldBase.IsCalcOnly"/> property to true.
            </remarks>
            <param name="xmlName">Xml Name</param>
            <param name="baseRecord">Base Record</param>
            <param name="isNullable">Boolen to set Nullable property</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.NoDbTinyInt.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Creates a Non Db Map. Used for calculate only.
            Sets <see cref="P:Phoenix.FrameWork.BusFrame.FieldBase.IsCalcOnly"/> property to true.
            Sets <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property to true.
            </remarks>
            <param name="xmlName">Xml Name</param>
            <param name="baseRecord">Base Record</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.NoDbUniqueIdentifier.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Boolean)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Creates a Non Db Map. Used for calculate only.
            Sets <see cref="P:Phoenix.FrameWork.BusFrame.FieldBase.IsCalcOnly"/> property to true.
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="xmlName">Xml Name</param>
            <param name="isNullable">Boolean to set <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.NoDbUniqueIdentifier.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Creates a Non Db Map. Used for calculate only.
            Sets <see cref="P:Phoenix.FrameWork.BusFrame.FieldBase.IsCalcOnly"/> property to true.
            Sets <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property to false
            </remarks>
            <param name="baseRecord">Base Record</param>
            <param name="xmlName">Xml Name</param>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.NoDbVarChar">
            <summary>
            Summary description for NoDbVarChar.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.NoDbVarChar.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Int16,System.Boolean)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Creates a Non Db Map. Used for calculate only.
            Sets <see cref="P:Phoenix.FrameWork.BusFrame.FieldBase.IsCalcOnly"/> property to true.
            </remarks>
            <param name="xmlName">Xml Name</param>
            <param name="baseRecord">Base Record</param>
            <param name="length">Scale of of the decimal</param>
            <param name="isNullable">Boolen to set Nullable property</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.NoDbVarChar.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String,System.Int16)">
            <summary>
            Creates and Initialize the type
            </summary>
            <remarks>
            Creates a Non Db Map. Used for calculate only.
            Sets <see cref="P:Phoenix.FrameWork.BusFrame.FieldBase.IsCalcOnly"/> property to true.
            Sets <see cref="P:Phoenix.FrameWork.BusFrame.PBaseType.IsNullable"/> property to false.
            </remarks>
            <param name="xmlName">Xml Name</param>
            <param name="baseRecord">Base Record</param>
            <param name="length">Scale of of the decimal</param>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.PBoolean">
            <summary>
            Phoenix Boolean type
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PBoolean.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PBoolean.#ctor(System.String)">
            <summary>
            Constructor with value to set
            </summary>
            <param name="xmlTag">Value to set</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PBoolean.#ctor(System.String,System.Boolean)">
            <summary>
            constructor with value
            </summary>
            <param name="xmlTag"></param>
            <param name="objValue"></param>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PBoolean.Value">
            <summary>
            Get/Set value of the object
            </summary>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.PCIColumMap">
            <summary>
            Map account type - Account number combination to identify the decryption required or not
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.PCIColumMap.AcctTypeColumnName">
            <summary>
            Encrypted Account Type
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.PCIColumMap.AcctNoColumnName">
            <summary>
            Encrypted Account Number
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PCIColumMap.#ctor(Phoenix.FrameWork.BusFrame.PBaseType,Phoenix.FrameWork.BusFrame.PBaseType)">
            <summary>
            Add new account type and account number combination
            </summary>
            <param name="_acctType"></param>
            <param name="_acctNo"></param>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.PCIColumMapCollection">
            <summary>
            Set All PCI column mapping from Bussiness object
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PCIColumMapCollection.Add(Phoenix.FrameWork.BusFrame.PBaseType,Phoenix.FrameWork.BusFrame.PBaseType)">
            <summary>
            Add Account type, Account Number combination
            </summary>
            <param name="acctType"></param>
            <param name="acctNo"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PCIColumMapCollection.Add(Phoenix.FrameWork.BusFrame.PBaseType)">
            <summary>
            PAN
            </summary>
            <param name="Pan"></param>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.POrderBy">
            <summary>
            Order by class
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.POrderBy.XmlTag">
            <summary>
            Xml Tag of 
            </summary>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.POrderBy.OrderBy">
            <summary>
            Order By Enumeration
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.POrderBy.OrderBy.Ascending">
            <summary>
            Ascending order
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.POrderBy.OrderBy.Descending">
            <summary>
            Descending Order
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.POrderBy.#ctor(Phoenix.FrameWork.BusFrame.FieldBase,Phoenix.FrameWork.BusFrame.POrderBy.OrderBy)">
            <summary>
            Constructor
            </summary>
            <param name="field"></param>
            <param name="order"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.POrderBy.#ctor(Phoenix.FrameWork.BusFrame.FieldBase)">
            <summary>
            Constructor with basic
            </summary>
            <param name="field"></param>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.POrderBy.OrderBySql">
            <summary>
            
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.POrderBy.LoadFromXml(System.Xml.XmlNode,System.Boolean)">
            <summary>
            Load the object from the Xml
            </summary>
            <param name="node"></param>
            <param name="valueSerializedAsAttribute"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.POrderBy.Serialize(System.Xml.XmlWriter,System.Boolean)">
            <summary>
            Serialize the object to the writer
            </summary>
            <param name="xmlWriter"></param>
            <param name="serializeValueAsAttribute"></param>
            <returns></returns>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.PListViewCollection`1">
            <summary>
            POrder Collection
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PListViewCollection`1.#ctor">
            <summary>
            Simple constructor
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PListViewCollection`1.#ctor(System.String)">
            <summary>
            Constructor with GroupName
            </summary>
            <param name="groupName"></param>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PListViewCollection`1.GroupName">
            <summary>
            Group
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PListViewCollection`1.Add(`0[])">
            <summary>
            
            </summary>
            <param name="fields"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PListViewCollection`1.GetKeyForItem(`0)">
            <summary>
            Override to get the key value for the item
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.POrderByCollection">
            <summary>
            Serializable list containing the POrderBy elements
            -- Capable of storing generating the order by for List view SQL
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.POrderByCollection.#ctor">
            <summary>
            Simple Constructor
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.POrderByCollection.Add(Phoenix.FrameWork.BusFrame.FieldBase[])">
            <summary>
            Adds one or more of fields to the list
            </summary>
            <param name="fields"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.POrderByCollection.AppendOrderBySql(System.Text.StringBuilder)">
            <summary>
            Make OrderBy Sql
            </summary>
            <param name="sqlStmt"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.POrderByCollection.LoadFromXml(System.Xml.XmlNode,System.Boolean)">
            <summary>
            Load from XMl
            </summary>
            <param name="node"></param>
            <param name="valueSerializedAsAttribute"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.POrderByCollection.Serialize(System.Xml.XmlWriter,System.Boolean)">
            <summary>
            Serialize to the writer
            </summary>
            <param name="xmlWriter"></param>
            <param name="serializeValueAsAttribute"></param>
            <returns></returns>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.ActionRestInfo">
            <summary>
            Information for BO Action exposed via REST.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.ActionRestInfo.CustomActionName">
            <summary>
            Name of Cuustom Action.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.ActionRestInfo.ActionType">
            <summary>
            Action Type
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.ActionRestInfo.ResponseTypeId">
            <summary>
            ResponseTypeId of Action
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.ActionRestInfo.Description">
            <summary>
            Description of Action
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.ActionRestInfo.Summary">
            <summary>
            Semmary of Action
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.ActionRestInfo.OperationId">
            <summary>
            Invocation Method Name for Action
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.ActionRestInfo.HttpVerb">
            <summary>
            Invocation Verb for Action
            </summary>
            <summary>
            Name assigned to the action which maps to an endpoint on the REST Side
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.ActionRestInfo.EncIdTableName">
            <summary>
            Table Name to which the encId in path corresponds to.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.ActionRestInfo.IsFileResponse">
            <summary>
            Indicates the response if of file type instead of JSON.
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.ActionRestInfo.IsFormDataRequest">
            <summary>
            Indicates if the request if of type form-data
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.ActionRestInfo._parameters">
            <summary>
            Swagger Parameters
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.ActionRestInfo._responses">
            <summary>
            Swagger Parameters
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.ActionRestInfo.Produces">
            <summary>
            Produces list 
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.ActionRestInfo.Consumes">
            <summary>
            Consumes list
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.ActionRestInfo.IsAuditAction">
            <summary>
            Flag to indicate whether action is an audit action
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.ActionRestInfo.IsNotesAction">
            <summary>
            Flag to indicate whether action is notes action
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.ActionRestInfo.PopulateListViewRestArgs">
            <summary>
            Populates the rest arguments for the ListViewMakeSql event
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.ActionRestInfo.ValidateResponseAgainstModel">
            <summary>
            Flag to validate(force) the List View response fields against the model when generating the response.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Phoenix.FrameWork.BusFrame.ActionRestInfo.ValidateResponseAgainstSelectedFields" -->
        <member name="P:Phoenix.FrameWork.BusFrame.ActionRestInfo.CustomActionParamsInList">
            <summary>
            Custom Action Input Param List.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.ActionRestInfo.CustomActionParamsOutList">
            <summary>
            Custom Action OutPut Param List.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.ActionRestInfo.BusPropertiesToSkipInResponse">
            <summary>
            Name of Business Properties to Skip In Response
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.ActionRestInfo.BusPropertiesToSkipInRequest">
            <summary>
            Name of Business Properties to Skip In Request
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.ActionRestInfo.PathHasModuleEncId">
            <summary>
            Adds encId as route parameter after the module name in the path
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.ActionRestInfo.PathHasRecordEncId">
            <summary>
            Adds encId as route parameter at the end of path
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.ActionRestInfo.Path">
            <summary>
            Path if null the Document RootPath will be used.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.ActionRestInfo.AddChildModelAllBusProperties(System.Boolean,Phoenix.FrameWork.BusFrame.FieldRestDecorator,System.String)">
            <summary>
            Method to add response child model fields.
            </summary>
            <param name="isRequest"></param>
            <param name="childModel"></param>
            <param name="tableName"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.ActionRestInfo.AddRequestParameter(System.String,Phoenix.FrameWork.Core.FieldType,System.String,Phoenix.FrameWork.BusFrame.RestParamType,System.Nullable{System.Boolean},System.Int32,System.Decimal,System.Decimal,System.Nullable{System.Boolean},System.String)">
            <summary>
            Method to add parameter to Custom Action input parameter list.
            </summary>
            <param name="paramName"></param>
            <param name="paramType"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.ActionRestInfo.GetJsonFieldName(System.String,System.Boolean)">
            <summary>
            Gets Json field name for the Xml name.
            </summary>
            <param name="xmlFieldName"></param>
            <param name="applyJsonName"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.ActionRestInfo.GetXmlTagName(System.String)">
            <summary>
            Gets Xml Tag name for the Json Field name.
            </summary>
            <param name="jsonFieldName"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.ActionRestInfo.AddBusPropertyAsRequestParameter(Phoenix.FrameWork.BusFrame.PBaseType,System.String,System.String,Phoenix.FrameWork.BusFrame.RestParamType,System.Nullable{System.Boolean},System.Int32,System.Decimal,System.Decimal,System.Nullable{System.Boolean},System.String)">
            <summary>
            Method to add business object property as parameter to Custom Action input parameter list.
            </summary>
            <param name="busObjProperty"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.ActionRestInfo.AddResponseBodyField(System.String,Phoenix.FrameWork.Core.FieldType,System.String,System.String,Phoenix.FrameWork.BusFrame.RestParamType,System.Nullable{System.Boolean},System.Int32,System.Decimal,System.Decimal,System.Nullable{System.Boolean})">
            <summary>
            Method to add parameter to Custom Action output parameter list.
            </summary>
            <param name="paramName"></param>
            <param name="paramType"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.ActionRestInfo.AddBusPropertyAsResponseBodyField(Phoenix.FrameWork.BusFrame.PBaseType,System.String,System.String,Phoenix.FrameWork.BusFrame.RestParamType,System.Nullable{System.Boolean},System.Int32,System.Decimal,System.Decimal,System.Nullable{System.Boolean})">
            <summary>
            Method to add business object property as parameter to Custom Action output parameter list.
            </summary>
            <param name="busObjProperty"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.ActionRestInfo.RemoveBusPropertyFromResponseBody(Phoenix.FrameWork.BusFrame.PBaseType[])">
            <summary>
            Method to remove business object property from response body.
            </summary>
            <param name="busObjProperties"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.ActionRestInfo.RemoveBusPropertyFromRequestBody(Phoenix.FrameWork.BusFrame.PBaseType[])">
            <summary>
            Method to remove business object property from response body.
            </summary>
            <param name="busObjProperties"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.ActionRestInfo.CheckDefinitionName(System.String,System.String)">
            <summary>
            Method to add parameter to Custom Action input parameter list.
            </summary>
            <param name="paramName"></param>
            <param name="paramType"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.ActionRestInfo.IsStandardAction">
            <summary>
            Method to set Data types for a list view Reponse.
            </summary>
            <param name="tagName"></param>
            <param name="fieldType"></param>
            <param name="description"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.ActionRestInfo.GetRequestModelProperties">
            <summary>
            Gets the fields documentation related information for request of an XmAction.
            </summary>
            <param name="xmActionRestInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.ActionRestInfo.GetResponseModelProperties">
            <summary>
            Gets the fields documentation related information for request of an XmAction.
            </summary>
            <param name="xmActionRestInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.RestRequest.AddBodyChildModel(Phoenix.FrameWork.BusFrame.FieldRestDecorator,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Method to add request sub model.
            </summary>
            <param name="parentModel"></param>
            <param name="childModelName"></param>
            <param name="description"></param>
            <param name="isRequired"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.RestRequest.AddBodyChildModelArray(Phoenix.FrameWork.BusFrame.FieldRestDecorator,System.String,System.String)">
            <summary>
            Method to add request sub model of type array
            </summary>
            <param name="parentModel"></param>
            <param name="childModelName"></param>
            <param name="description"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.RestRequest.AddBodyChildModelArray(System.String,System.String)">
            <summary>
            Method to add request sub model of type array
            </summary>
            <param name="childModelName"></param>
            <param name="description"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.RestRequest.AddBodyChildModel(System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Method to add request sub model.
            </summary>
            <param name="childModelName"></param>
            <param name="description"></param>
            <param name="isRequired"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.RestRequest.AddChildModelField(Phoenix.FrameWork.BusFrame.FieldRestDecorator,System.String,Phoenix.FrameWork.Core.FieldType,System.String,System.Nullable{System.Boolean},System.Int32,System.Decimal,System.Decimal)">
            <summary>
            Method to add request child model fields.
            </summary>
            <param name="parentModel"></param>
            <param name="fieldName"></param>
            <param name="fieldType"></param>
            <param name="description"></param>
            <param name="isRequired"></param>
            <param name="maxLength"></param>
            <param name="minValue"></param>
            <param name="maxValue"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.RestRequest.AddChildModelBusProperty(Phoenix.FrameWork.BusFrame.FieldRestDecorator,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Int32,System.Decimal,System.Decimal)">
            <summary>
            Method to add request child model fields.
            </summary>
            <param name="childModel"></param>
            <param name="tableName"></param>
            <param name="xmlTag"></param>
            <param name="jsonName"></param>
            <param name="description"></param>
            <param name="isRequired"></param>
            <param name="maxLength"></param>
            <param name="minValue"></param>
            <param name="maxValue"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.RestRequest.AddChildModelBusProperties(Phoenix.FrameWork.BusFrame.FieldRestDecorator,System.String,System.String[])">
            <summary>
            Method to add request child model fields.
            </summary>
            <param name="childModel"></param>
            <param name="tableName"></param>
            <param name="xmlTags"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.RestRequest.AddChildModelAllBusProperties(Phoenix.FrameWork.BusFrame.FieldRestDecorator,System.String)">
            <summary>
            Method to add response child model fields.
            </summary>
            <param name="childModel"></param>
            <param name="tableName"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.RestRequest.SetBusPropertyRequiredFlag(Phoenix.FrameWork.BusFrame.PBaseType,System.Boolean)">
            <summary>
            Sets the required flag of busisness property rest field.
            </summary>
            <param name="busObjProperty"></param>
            <param name="isRequired"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.RestRequest.SetBusPropertyDescription(Phoenix.FrameWork.BusFrame.PBaseType,System.String)">
            <summary>
            Sets the description of busisness property rest field.
            </summary>
            <param name="busObjProperty"></param>
            <param name="description"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.RestRequest.GetBusPropertyRestField(Phoenix.FrameWork.BusFrame.PBaseType)">
            <summary>
            Gets the rest field associated with the business property.
            </summary>
            <param name="busObjProperty"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.RestReponse.AddBodyChildModel(Phoenix.FrameWork.BusFrame.FieldRestDecorator,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Method to add response sub model.
            </summary>
            <param name="parentModel"></param>
            <param name="childModelName"></param>
            <param name="description"></param>
            <param name="isRequired"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.RestReponse.AddBodyChildModel(System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Method to add response sub model.
            </summary>
            <param name="childModelName"></param>
            <param name="description"></param>
            <param name="isRequired"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.RestReponse.AddBodyChildModelArray(Phoenix.FrameWork.BusFrame.FieldRestDecorator,System.String,System.String)">
            <summary>
            Method to add request sub model of type array
            </summary>
            <param name="parentModel"></param>
            <param name="childModelName"></param>
            <param name="description"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.RestReponse.AddBodyChildModelArray(System.String,System.String)">
            <summary>
            Method to add request sub model of type array
            </summary>
            <param name="childModelName"></param>
            <param name="description"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.RestReponse.AddChildModelField(Phoenix.FrameWork.BusFrame.FieldRestDecorator,System.String,Phoenix.FrameWork.Core.FieldType,System.String,System.Nullable{System.Boolean},System.Int32,System.Decimal,System.Decimal)">
            <summary>
            Method to add response child model fields.
            </summary>
            <param name="childModel"></param>
            <param name="fieldName"></param>
            <param name="fieldType"></param>
            <param name="description"></param>
            <param name="isRequired"></param>
            <param name="maxLength"></param>
            <param name="minValue"></param>
            <param name="maxValue"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.RestReponse.AddChildModelEncIdField(Phoenix.FrameWork.BusFrame.FieldRestDecorator)">
            <summary>
            Add encId Field to child model
            </summary>
            <param name="parentModel"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.RestReponse.AddChildModelBusProperty(Phoenix.FrameWork.BusFrame.FieldRestDecorator,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Int32,System.Decimal,System.Decimal)">
            <summary>
            Method to add reponse child model fields.
            </summary>
            <param name="childModel"></param>
            <param name="tableName"></param>
            <param name="xmlTag"></param>
            <param name="jsonName"></param>
            <param name="description"></param>
            <param name="isRequired"></param>
            <param name="maxLength"></param>
            <param name="minValue"></param>
            <param name="maxValue"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.RestReponse.AddChildModelBusProperties(Phoenix.FrameWork.BusFrame.FieldRestDecorator,System.String,System.String[])">
            <summary>
            Method to add response child model fields.
            </summary>
            <param name="childModel"></param>
            <param name="tableName"></param>
            <param name="xmlTags"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.RestReponse.AddChildModelAllBusProperties(Phoenix.FrameWork.BusFrame.FieldRestDecorator,System.String)">
            <summary>
            Method to add response child model fields.
            </summary>
            <param name="childModel"></param>
            <param name="tableName"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.RestReponse.GetBusPropertyRestField(Phoenix.FrameWork.BusFrame.PBaseType)">
            <summary>
            Gets the rest field associated with the business property.
            </summary>
            <param name="busObjProperty"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.RestReponse.SetBusPropertyDescription(Phoenix.FrameWork.BusFrame.PBaseType,System.String)">
            <summary>
            Sets the description of busisness property rest field.
            </summary>
            <param name="busObjProperty"></param>
            <param name="description"></param>
            <returns></returns>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.RestFieldDbMapExtension">
            <summary>
            Rest Field Extension class for Db Mapping
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.RestFieldDbMapExtension.AddDbMap(Phoenix.FrameWork.BusFrame.FieldRestDecorator,System.String,System.String,System.String)">
            <summary>
            Add Database mapping for the rest model fields
            </summary>
            <param name="field"></param>
            <param name="columnName"></param>
            <param name="tableAlias"></param>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.BusObjectRestExtBase">
            <summary>
            Business Object REST Extension Base Class
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectRestExtBase.CurrentPath">
            <summary>
            The Action Map Name for the Current Action
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectRestExtBase.CreateJsonResponse">
            <summary>
            Flag to indicate whether to create response as Json
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectRestExtBase.RestController">
            <summary>
            Pointer to Controller in Rest API
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectRestExtBase.AddEncIdToResponse">
            <summary>
            Flag to indicate whether to add encId to Json response
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectRestExtBase.SkipInitialization">
            <summary>
            Business Object
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectRestExtBase.Description">
            <summary>
            Description of the Object in Swagger.Info
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectRestExtBase.Title">
            <summary>
            Tile information displayed in Swagger.Info
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectRestExtBase.MenuText">
            <summary>
            Menu Text as displayed in Swagger Menu
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectRestExtBase.PathHasModuleEncId">
            <summary>
            Flag to indicate whether the Rest Path has module encId as part of it's route
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectRestExtBase.PathHasRecordEncId">
            <summary>
            Flag to indicate whether the Rest Path has record encId as part of it's route
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectRestExtBase.RequestObject">
            <summary>
            Request Object of the Rest Call.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectRestExtBase.ResponseResult">
            <summary>
            Response Result of the Rest Call.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectRestExtBase.HeaderReqContext">
            <summary>
            Request Context Object as passed in header
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectRestExtBase.RequestHeaderParams">
            <summary>
            Request Header Params  of the Rest Call.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectRestExtBase.RequestQueryParams">
            <summary>
            Request Query Params  of the Rest Call.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectRestExtBase.NoRecordsFoundResponse">
            <summary>
            Flag to indicate to return no record found response.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectRestExtBase.BusPropertiesFieldNameMap">
            <summary>
            Mapping of Business Properties Names to Json Field Names
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectRestExtBase.ValidateRequestTagsOnly">
            <summary>
            Flag to indicate whether to validate only tags coming in request.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectRestExtBase.RootPath">
            <summary>
            Base REST Path of the Business Object
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectRestExtBase.CurrentModule">
            <summary>
            Gets the Current Module
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectRestExtBase.CurrentAction">
            <summary>
            Gets the Current Action
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.BusObjectRestExtBase.BusPropertiesFieldDescription">
            <summary>
             Business Properties Descriptions For NoDb Fields
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectRestExtBase.Initialize">
            <summary>
            Override method to initailze the extension.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectRestExtBase.SetXmlLoadValues">
            <summary>
            Sets the business properties XmlLoadValue from the Value.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectRestExtBase.MapBusPropertiesToJsonField">
            <summary>
            
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectRestExtBase.AddAction(System.String,Phoenix.FrameWork.BusFrame.XmActionType,System.Int32,System.String,System.String,System.String,Phoenix.FrameWork.BusFrame.HttpVerb,System.String)">
            <summary>
            Add non generic REST action for business object.
            </summary>
            <param name="customActionName"></param>
            <param name="actionType"></param>
            <param name="responseTypeId"></param>
            <param name="description"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectRestExtBase.InitializeAndValidateRequest">
            <summary>
            Method to initialize/validate the rest request
            </summary>
            <param name="requestObject"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectRestExtBase.ModifyResponse">
            <summary>
            Method to modify the Rest Response
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectRestExtBase.OnAfterBusObjDoAction">
            <summary>
            Method to do custom stuff after the business object do action is executed.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectRestExtBase.OnFetchRowDone(System.Data.IDataReader,Newtonsoft.Json.JsonWriter,System.Int32)">
            <summary>
            Override this to handle FetchRow Done
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="rowCount"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectRestExtBase.ModifySingleRecordResponse(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Method to modify the single record response result.
            </summary>
            <param name="resultDict"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectRestExtBase.ModifyListRecordResponse(System.Object)">
            <summary>
            Method to modify the single list record response result.
            </summary>
            <param name="recordObject">record as JRaw object</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectRestExtBase.GetEncIdKeys">
            <summary>
            Gets the Key columns for EncId.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectRestExtBase.GetEncIdDescription(System.String)">
            <summary>
            Get EncId Description.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectRestExtBase.GetEncId(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Gets the generated encId using key column values
            </summary>
            <param name="encIdKeyValues"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectRestExtBase.GetPaths(System.Boolean,System.String)">
            <summary>
            Gets the list of non generic Actions supported vis REST
            </summary>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectRestExtBase.ModifyBusPropertyFieldName(Phoenix.FrameWork.BusFrame.PBaseType,System.String)">
            <summary>
            Method to modify the JSON field name of the business object property
            </summary>
            <param name="busProperty"></param>
            <param name="fieldName"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectRestExtBase.GetJsonFieldName(System.String,System.Boolean)">
            <summary>
            Gets Json field name for the Xml name.
            </summary>
            <param name="xmlFieldName"></param>
            <param name="applyJsonName"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectRestExtBase.GetXmlTagName(System.String)">
            <summary>
            Gets Xml Tag name for the Json Field name.
            </summary>
            <param name="jsonFieldName"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectRestExtBase.GetPath(Phoenix.FrameWork.BusFrame.XmActionType,System.String,System.Int32,System.String,System.Boolean,System.Boolean)">
            <summary>
            Gets the Rest endpoint for a given action type/ response type id / custom action name.
            </summary>
            <param name="actionType"></param>
            <param name="responseTypeId"></param>
            <param name="customActionName"></param>
            <param name="isAuditAction"></param>
            <param name="isNotesAction"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectRestExtBase.AddChildRecordsArrayToListRecord(Newtonsoft.Json.Linq.JRaw,System.Collections.Generic.List{Newtonsoft.Json.Linq.JRaw},System.String)">
            <summary>
            Appends an array of child records( object) to a listView record(object)
            </summary>
            <param name="listRecord"></param>
            <param name="childRecords"></param>
            <param name="propertyName"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.BusObjectRestExtBase.AddChildRecordToListRecord(Newtonsoft.Json.Linq.JRaw,Newtonsoft.Json.Linq.JRaw,System.String)">
            <summary>
            Appends a child record( object) to a listView record(object)
            </summary>
            <param name="listRecord"></param>
            <param name="childRecord"></param>
            <param name="propertyName"></param>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.FieldRestDecorator">
            <summary>
            Rest Decorator For Fields.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.FieldRestDecorator.Name">
            <summary>
            Name of field
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.FieldRestDecorator.Description">
            <summary>
            Description of Field
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.FieldRestDecorator.Required">
            <summary>
            Required flag for field
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.FieldRestDecorator.MaxLength">
            <summary>
            Max length of field
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.FieldRestDecorator.MinValue">
            <summary>
            Minimum value for field
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.FieldRestDecorator.MaxValue">
            <summary>
            Maximum value for field.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.FieldRestDecorator.FieldType">
            <summary>
            Datatype of field
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.FieldRestDecorator.IsResponse">
            <summary>
            Response indicator for field.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.FieldRestDecorator.IsRequest">
            <summary>
            Response indicator for field.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.FieldRestDecorator.ParamType">
            <summary>
            REST Param Type
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.FieldRestDecorator.ArrayItemName">
            <summary>
            Array Item Scheama Type
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.FieldRestDecorator.Properties">
            <summary>
            Properties Value
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FieldRestDecorator.GetTypeFromFieldType">
            <summary>
            Converts FieldType to Type
            </summary>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.FieldRestDecorator.AddProperty(Phoenix.FrameWork.BusFrame.ISwaggerParameter)">
            <summary>
            Add new property to the collection
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.PApiStandardParameters">
            <summary>
            Standard Parameters
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PApiStandardParameters.#ctor(System.Collections.Generic.IDictionary{System.String,Phoenix.FrameWork.BusFrame.ISwaggerParameter})">
            <summary>
            Constructors
            </summary>
            <param name="parameterDictionary"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PApiStandardParameters.#ctor(System.Collections.Generic.IDictionary{System.String,Phoenix.FrameWork.BusFrame.ISwaggerParameter},Phoenix.FrameWork.BusFrame.ActionRestInfo)">
            <summary>
            
            </summary>
            <param name="parameterDictionary"></param>
            <param name="restExtension"></param>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PApiStandardParameters.Parameters">
            <summary>
            Parameter collection
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PApiStandardParameters.AddStandardParameters(Phoenix.FrameWork.BusFrame.PApiStandardParamName[])">
            <summary>
            Add standard parameter
            </summary>
            <param name="paramNames"></param>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.PApiResponse">
            <summary>
            Base Open API Response
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PApiResponse.StatusCode">
            <summary>
            Status Code 
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PApiResponse.Description">
            <summary>
            Description 
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PApiResponse.ResponseSchema">
            <summary>
            Response Schema
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PApiResponse.Name">
            <summary>
            Name of the response
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PStandardResponse.GetResponseInfo">
            <summary>
            Get Response Info
            </summary>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PStandardResponse.GetPagingInfo">
            <summary>
            Paging Information
            </summary>
            <returns></returns>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.SecurityAccess">
            <summary>
            Summary description for SecurityAccess.
            </summary>
        </member>
        <member name="F:Phoenix.FrameWork.BusFrame.SecurityAccess.FullAccess">
            <summary>
            Defines the FULL Access Default
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.SecurityAccess.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
             Initializes and creates a new object.
            </summary>
            <param name="xmlName">Name of the object to create the security</param>
            <param name="userId">User Id</param>
            <param name="userGroupId">User Group Id</param>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.SecurityAccess.ObjectAccess">
            <summary>
            Gets the Security Object.  Loads the necessary object if needed.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.SecurityAccess.FieldSecurity">
            <summary>
            Gets the Field level secyurity.  Loads the necessary objects if needed.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.SecurityAccess.IsEditable">
            <summary>
            Get the information about the users privilege to edit the record.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.SecurityAccess.IsNew">
            <summary>
            Get the information about the users privilege to create new record.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.SecurityAccess.IsView">
            <summary>
            Get the information about the users privilege to View the record.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.SecurityAccess.IsFieldEditable(System.String)">
            <summary>
            Verify whether the user has Edit privilege on the field specified in xmlName
            </summary>
            <param name="xmlName">Xml Tag name of the field</param>
            <returns>Returns true if the user has access; otherwise false</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.SecurityAccess.IsFieldViewable(System.String)">
            <summary>
            Verify whether the user has View privilege on the field specified in xmlName
            </summary>
            <param name="xmlName">Xml Tag name of the field</param>
            <returns>Returns true if the user has viewaccess; otherwise false</returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.SecurityAccess.IsFieldHasAccess(System.String,Phoenix.FrameWork.BusFrame.SecurityAccessTypes)">
            <summary>
            Get the Field Level security for the field specified by the XmlName
            </summary>
            <param name="xmlName">Xml Tag name of the field</param>
            <param name="accessType">Access type to be verified</param>
            <returns>Returns true if the field has access; otherwise false</returns>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.SecurityAccessValue">
            <summary>
            Summary description for SecurityAccessValue.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.SecurityAccessValue.#ctor">
            <summary>
            Initializes and creates the object.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.SecurityAccessValue.Value">
            <summary>
            Get/Sets the Security AccessType Value.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.SecurityAccessValue.IsEditable">
            <summary>
            Gets the IsEditable property.  Returns true if the Access has Editable property.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.SecurityAccessValue.IsNew">
            <summary>
            Gets the IsNew property.  Returns true if the New Access is enabled.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.SecurityAccessValue.IsView">
            <summary>
            Gets IsView property. Returns true if the View permision is allowed.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.SecurityAccessValue.HasAccess(Phoenix.FrameWork.BusFrame.SecurityAccessTypes)">
            <summary>
            Verifies where the current object has the passed Access Premision
            </summary>
            <param name="verifyAccess">Access to be verified.</param>
            <returns>true if the object has access; otherwise false</returns>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.SecurityCache">
            <summary>
            Summary description for SecurityCache.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.SecurityCache.Instance">
            <summary>
            Gets the singleton instance of <see cref="T:Phoenix.FrameWork.BusFrame.SecurityCache"/> object
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.SecurityCache.Initialize(System.Int32,System.Int32)">
            <summary>
            Initialize the security cache
            </summary>
            <param name="userId">user Id for which the security cache is made for</param>
            <param name="userGroupId">group id on which the user belongs to</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.SecurityCache.GetObjectSecurity(System.String)">
            <summary>
            Get the Object Security for the Name of the object specified
            </summary>
            <param name="xmlName">XmlName of the object</param>
            <returns>return security object.</returns>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.SetProperties">
            <summary>
            Set Properties sets the way the OverFlow Errors are handled
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.SetProperties.IgnoreInvalidXmlTags">
            <summary>
            Set/Set to ignore invalid XmlTags
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.SetProperties.SerializeOtherInfo">
            <summary>
            Serialize other Info
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.SetProperties.SerializeObjectState">
            <summary>
            Terminates an query when an overflow  occurs during any operation. 
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.SetProperties.ArithIgnore">
            <summary>
            Terminates an query when an overflow  occurs during any operation. 
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.SetProperties.TruncateText">
            <summary>
            Truncates the String value on overflow
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.SetProperties.DefineIsNull">
            <summary>
            Define isNull when serialize the XML Values, if the string is NULL.
            Default value is true, and a isNull attribute will be added for 
            string elements, where the data is empty string, but not null.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.SetProperties.FullEndTag">
            <summary>
            Add Full end tag for empty elements. Default values is false. And a short end tag will be added for empty elements.
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.SetProperties.SerializeUIProperties">
            <summary>
            Set this value to true to seraialze UI properties on Response
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.SetProperties.SerializeAuditKey">
            <summary>
            Set this value to serialize the Audit Key information
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.SetProperties.ResetToSystemStandard">
            <summary>
            Reset the Properties to current Phoenix System standard.
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.SetProperties.MoveValuesFromThreadToAppStatic">
            <summary>
            Move the thread static variable values to app static variables. 
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.SetProperties.WriteEndElement(System.Xml.XmlWriter)">
            <summary>
            Write End Element
            </summary>
            <param name="xw"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.SetProperties.WriteEndElement(System.Xml.XmlTextWriter)">
            <summary>
            Write End element
            </summary>
            <param name="xw"></param>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.RaiseEvents">
            <summary>
            
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.RaiseEvents.#ctor(System.Boolean)">
            <summary>
            
            </summary>
            <param name="enable"></param>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.RaiseEvents.Enabled">
            <summary>
            Current Value of the events
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.RaiseEvents.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:Phoenix.FrameWork.BusFrame.PBaseCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PBaseCollection.GroupName">
            <summary>
            get/Set the groupName property for the collection
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PBaseCollection.#ctor">
            <summary>
            Variable Collection
            </summary>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PBaseCollection.#ctor(System.String)">
            <summary>
            Define the group name when needed
            </summary>
            <param name="groupName"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PBaseCollection.#ctor(Phoenix.FrameWork.BusFrame.BusObjectBase,System.String)">
            <summary>
            Create a new object; when the container is passed, it will be validated to make sure the field XmlTag is unique across.
            </summary>
            <param name="container">Business object to validate</param>
            <param name="groupName">Group for the serialization</param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PBaseCollection.Add(Phoenix.FrameWork.BusFrame.PBaseType)">
            <summary>
            Add PBaseType
            </summary>
            <param name="valueToAdd"></param>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PBaseCollection.Add(System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="valueToSet"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PBaseCollection.Add(System.Xml.XmlNode,System.Boolean)">
            <summary>
            Add the element from Xml Node
            </summary>
            <param name="node"></param>
            <param name="serializeValueAsAttribute"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PBaseCollection.Add(System.String,System.String)">
            <summary>
            Add string value to base collection
            </summary>
            <param name="name"></param>
            <param name="valueToSet"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PBaseCollection.Add(System.String,System.DateTime)">
            <summary>
            Add Datetime value to the collection
            </summary>
            <param name="name"></param>
            <param name="valueToSet"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PBaseCollection.Add(System.String,System.Boolean)">
            <summary>
            Add boolean value to the collection
            </summary>
            <param name="name"></param>
            <param name="valueToSet"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PBaseCollection.Add(System.String,System.Int16)">
            <summary>
            Add short value to the collection
            </summary>
            <param name="name"></param>
            <param name="valueToSet"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PBaseCollection.Add(System.String,System.Decimal)">
            <summary>
            Add a decimal value to the collection
            </summary>
            <param name="name"></param>
            <param name="valueToSet"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PBaseCollection.PInt(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PBaseCollection.PDateTime(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PBaseCollection.PDecimal(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PBaseCollection.PString(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PBaseCollection.PBoolean(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PBaseCollection.Add(System.String,System.Object)">
            <summary>
            Add any object value to the property
            </summary>
            <param name="name"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PBaseCollection.GetField(System.String)">
            <summary>
            This function gets the field by name;otherwise null;. Will not throw excpetion.
            </summary>
            <param name="keyName"></param>
            <returns></returns>
        </member>
        <member name="P:Phoenix.FrameWork.BusFrame.PBaseCollection.Item(System.String)">
            <summary>
            Indexer for integer
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PBaseCollection.ToArray">
            <summary>
            Returns the PBase Type Array
            </summary>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PBaseCollection.GetKeyForItem(Phoenix.FrameWork.BusFrame.PBaseType)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PBaseCollection.LoadFromXml(System.Xml.XmlNode,System.Boolean)">
            <summary>
            Load from XMl
            </summary>
            <param name="node"></param>
            <param name="valueSerializedAsAttribute"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PBaseCollection.Serialize(System.Xml.XmlWriter,System.Boolean)">
            <summary>
            Base serialize method. 142717 UI_Phase2
            </summary>
            <param name="xmlWriter"></param>
            <param name="serializeValueAsAttribute"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PBaseCollection.Serialize(System.Xml.XmlWriter,System.Boolean,System.Boolean)">
            <summary>
            Serialize to the writer
            </summary>
            <param name="xmlWriter"></param>
            <param name="serializeValueAsAttribute"></param>
            <param name="includeParameterSpecificInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PBaseCollection.SerializeToString">
            <summary>
            Serialize the string
            NOTE: Make sure the Collection has the GroupName
            </summary>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PBaseCollection.CreateFromString(System.String)">
            <summary>
            Create the collection from string
            </summary>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.FrameWork.BusFrame.PBaseCollection.Clone">
            <summary>
            Clone the current object
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
