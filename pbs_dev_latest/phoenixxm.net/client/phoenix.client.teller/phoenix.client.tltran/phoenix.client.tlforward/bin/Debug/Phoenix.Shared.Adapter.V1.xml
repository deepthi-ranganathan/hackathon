<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Phoenix.Shared.Adapter.V1</name>
    </assembly>
    <members>
        <member name="T:Phoenix.Shared.Adapter.V1.AdapterBusObjectBase">
            <summary>
            Adapter business object base
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.AdapterBusObjectBase.#ctor">
            <summary>
            Simple constructor
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.AdapterBusObjectBase.#ctor(Phoenix.Shared.Adapter.V1.AdapterProvider)">
            <summary>
            constructor with provider
            </summary>
            <param name="provider"></param>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterBusObjectBase.BaseObjectName">
            <summary>
            Base Object Bane
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.AdapterBusObjectBase.Serialize">
            <summary>
            Serialize the base objeect
            </summary>
            <returns></returns>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterBusObjectBase.BaseBO">
            <summary>
            base business object
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.AdapterBusObjectBase.LoadFromXml(System.String,System.String)">
            <summary>
            Load the BaseBO from the Xmldata
            </summary>
            <param name="xmlData"></param>
            <param name="actionType">action type</param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.AdapterBusObjectBase.DoAction">
            <summary>
            Perform Action
            </summary>
            <returns></returns>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterBusObjectBase.Provider">
            <summary>
            Return the provider
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.AdapterBusObjectBase.GetStringField(System.String,System.Boolean)">
            <summary>
            Get the string field identified by the fieldTag.
            
            </summary>
            <param name="fieldTag"></param>
            <param name="createNew">a new field will be created if not found</param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.AdapterBusObjectBase.GetIntField(System.String,System.Boolean)">
            <summary>
            Get and Integer field
            </summary>
            <param name="fieldTag"></param>
            <param name="createNew">Create a new field if one not found</param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.AdapterBusObjectBase.GetDecimalField(System.String,System.Boolean)">
            <summary>
            Return the decimal field
            </summary>
            <param name="fieldTag"></param>
            <param name="createNew"></param>
            <returns></returns>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.AdapterCommon">
            <summary>
            Base adapter class, defined to enable Marahslling 
            between the threads
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.AdapterCommon.#ctor">
            <summary>
            simple constructor
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.AdapterCommon.#ctor(Phoenix.Shared.Adapter.V1.AdapterProvider)">
            <summary>
            Constructor with the provider
            </summary>
            <param name="provider"></param>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.AdapterCommon.Initialize(Phoenix.Shared.Adapter.V1.AdapterProvider)">
            <summary>
            Initialize the object
            </summary>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterCommon.AdapterProvider">
            <summary>
            get the adapter provider
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.AdapterCommon.GetResourceFilestring(System.Type,System.String)">
            <summary>
            Get the resource file  string.
            the name of assembly will be identified from the type of object passed in
            the resource name will be created by concatenating the name space and resource name
            (e.g)
                GetResourceFilestring( typeof(ExAcctEdit), "xaml.frmExAcctEdit.xaml")
             will look for the resource with the name as  Phoenix.Shared.Adapter.V1.xaml.frmExAcctEdit.xaml
            </summary>
            <param name="objectType">object type to locate namespace and assembly</param>
            <param name="resName">resource name</param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.AdapterCommon.InitializeLifetimeService">
            <summary>
            Override to set the Lifetime for this
            </summary>
            <returns></returns>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.AdapterDbHelper">
            <summary>
            A simple database helper for the adapter writer
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.AdapterDbHelper.#ctor">
            <summary>
            Simple Constructor
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.AdapterDbHelper.Initialize(System.String,System.String,System.String)">
            <summary>
            Initialize the adapter db helper using the relGroupName and dbName
            </summary>
            <param name="relGroupname"></param>
            <param name="dbDefName"></param>
            <param name="cfgFileName">Configuration file</param>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.AdapterDbHelper.GetConnection(System.String)">
            <summary>
            Get the connection using and set the connection string passed 
            </summary>
            <param name="connectionString"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.AdapterDbHelper.GetCommand(System.Data.IDbConnection)">
            <summary>
            Get the command for the connection provided
            </summary>
            <param name="connection"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.AdapterDbHelper.GetCommand(System.Data.IDbTransaction)">
            <summary>
            get the command for the transaction provided
            </summary>
            <param name="transaction"></param>
            <returns></returns>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterDbHelper.DbPrefix">
            <summary>
            Gets the DbPrefix
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterDbHelper.PhoenixDbName">
            <summary>
            Gets the PhoenixDbName
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterDbHelper.IsPrimaryDbAvailable">
            <summary>
            Gets the IsPrimaryDbAvailable
            </summary>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.ConfigBase">
            <summary>
            Base Class of all Configuration elements
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.ConfigBase.#ctor">
            <summary>
            Simple Constructor
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.ConfigBase.Name">
            <summary>
            Name of the Configuration element.
            </summary>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.OtherInfoCollection">
            <summary>
            Other Info collection
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.OtherInfoCollection.GetKeyForItem(Phoenix.Shared.Adapter.V1.OtherInfo)">
            <summary>
            Implementation to return the key string from the item
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.OtherInfo">
            <summary>
            Parameter Information
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.OtherInfo.#ctor">
            <summary>
            Simle constructor
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.OtherInfo.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="name">Name of the paramter</param>
            <param name="value">value for the parameter</param>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.OtherInfo.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="name">Name of the paramter</param>
            <param name="value">value for the parameter</param>
            <param name="masked">value of the param should be masked when displayed.</param>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.OtherInfo.Value">
            <summary>
            Parameter value
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.OtherInfo.MaskDisplay">
            <summary>
            The value of the param should be masked when displayed.
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.OtherInfo.GetSchema">
            <summary>
            Get schema; return nulls
            </summary>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.OtherInfo.ReadXml(System.Xml.XmlReader)">
            <summary>
            Read the Xml
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.OtherInfo.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Write the Xml
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.AdapterDef">
            <summary>
            Adapter definition
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.AdapterDef.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterDef.DebugLogLevel">
            <summary>
            DebugLogLevel
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterDef.DebugLogFileName">
            <summary>
            Debug Log file name
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterDef.Debug">
            <summary>
            Enable/Disable Debug
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterDef.DbDef">
            <summary>
            Data base definition associated with this adapter
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterDef.JobTimeOut">
            <summary>
            Maximum duration in milli second a job can be run.  If the job didn't completed within the 
            defined duration, the job can be cancelled.
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterDef.MaxWorkerThreads">
            <summary>
            Maximum number of concurrent threads that can execute the 
            job on this machine for this adapter
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterDef.MaxRetries">
            <summary>
            Maximum number of time the job can be executed if previous 
            attempts were aborted/cancelled for that job. 
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterDef.Suspend">
            <summary>
            Make this adapter available/unavailable for polling
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterDef.BaseDirectory">
            <summary>
            Base Directory
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterDef.IdlePollingInterval">
            <summary>
            Polling interval when last call returns end of job in the queue (ms).
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterDef.ActivePollingInterval">
            <summary>
            Polling interval in when the last call returns a job to process (ms).
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterDef.ProviderName">
            <summary>
            Get/Set the provider name 
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterDef.AcctType">
            <summary>
            External account type associted with the adapter
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterDef.Parameters">
            <summary>
            Paramter key-value collection
            </summary>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.AdapterMessage">
            <summary>
            Class structure to store the adapter message
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterMessage.AcctNo">
            <summary>
            Get/Set account number associated with
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterMessage.AcctType">
            <summary>
            Get/Set account type for the message
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterMessage.ConversationId">
            <summary>
            Get/set the conversation id
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterMessage.CreateDtTm">
            <summary>
            Get/Set CreateDtTm
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterMessage.EmplId">
            <summary>
            Get/Set Employee Id of the message
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterMessage.Id">
            <summary>
            Get/Set the unique identified for the message
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterMessage.MessageTypeId">
            <summary>
            Get/Set the message type
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterMessage.Priority">
            <summary>
            Priority of the mesasge
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterMessage.ParentMessageId">
            <summary>
            parent message if if available
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterMessage.ProcessDtTm">
            <summary>
            ProcessDt time for the message
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterMessage.Request">
            <summary>
            Request string
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterMessage.Response">
            <summary>
            Response string
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterMessage.SequenceNo">
            <summary>
            Sequence
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterMessage.ResponseStatus">
            <summary>
            Response status
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterMessage.Status">
            <summary>
            Status of the message
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterMessage.UnlockAfter">
            <summary>
            Unlock timer
            </summary>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.AdapterMessageQueue">
            <summary>
            Class implementation of Message Queue
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.AdapterMessageQueue.DeQueue(System.String,System.Int16,System.Int16,System.DateTime,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Dequeue a message using the parameters passed
            </summary>
            <param name="acctType">account type to filter the message</param>
            <param name="priority">priority to filter</param>
            <param name="messageTypeId">Type of message to filter</param>
            <param name="createDt">By create date</param>
            <param name="lockDuration">number of second the dequeud message has to be locked</param>
            <param name="maxRetryCount">number of retries allowed</param>
            <param name="retCode">Return code</param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.AdapterMessageQueue.EnQueue(Phoenix.Shared.Adapter.V1.IMessage)">
            <summary>
            Add a new message into the queue
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.AdapterMessageQueue.UpdateMsg(System.String,Phoenix.Shared.Adapter.V1.MessgeStatus,Phoenix.Shared.Adapter.V1.HostStatus,System.String,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Update the message in queue
            </summary>
            <param name="messageId"></param>
            <param name="status"></param>
            <param name="hostStatus"></param>
            <param name="response"></param>
            <param name="createNew"></param>
            <param name="maxRetryCount"></param>
            <param name="lockDuration"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.AdapterMessageQueue.UpdateMsg(System.String,Phoenix.Shared.Adapter.V1.MessgeStatus,Phoenix.Shared.Adapter.V1.HostStatus,System.String)">
            <summary>
            Update the message in queue
            </summary>
            <param name="messageId"></param>
            <param name="status"></param>
            <param name="hostStatus"></param>
            <param name="response"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.AdapterMessageQueue.Initialize(Phoenix.Shared.Adapter.V1.IAdapterProvider,System.String)">
            <summary>
            Initialize the message queue
            </summary>
            <param name="provider"></param>
            <param name="connectionString"></param>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.AdapterMsgProcessor">
            <summary>
            Adapter messge process or base class
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.AdapterMsgProcessor.#ctor">
            <summary>
            Basic constructor
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterMsgProcessor.Message">
            <summary>
            Get/Set message information
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.AdapterMsgProcessor.Process">
            <summary>
            Process message 
            </summary>
            <returns></returns>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.AdapterProvider">
            <summary>
            Base class for adapter provider
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterProvider.LogPublisher">
            <summary>
            Log Publisher to use
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.AdapterProvider.InitializeLifetimeService">
            <summary>
            Just for the marshalling
            </summary>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.AdapterProvider.#ctor">
            <summary>
            Simple constructor
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.AdapterProvider.GetPollingAgent">
            <summary>
            get the polling agent.
            Returns the agent "Phoenix.FrameWork.Adapter.AdapterPollingAgent" from "Phoenix.Framework.Adapter" assembly 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.AdapterProvider.GetMessageProcessor">
            <summary>
            Get the message processor
            Returns the message processor "Phoenix.Shared.Adapter.V1" from "Phoenix.Shared.Adapter.V1.AdapterMsgProcessor" assembly
            </summary>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.AdapterProvider.GetMessageQueue">
            <summary>
            Get the message Queue
            </summary>
            <returns></returns>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterProvider.DbHelper">
            <summary>
            Get the DbHelper 
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.AdapterProvider.GetUIService">
            <summary>
            Get the UiService
            Adapter writers need to onverride to return their own service
            </summary>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.AdapterProvider.GetBusinessObject">
            <summary>
            Get the Business object
            Adapter writers need to onverride to return their own Business object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.AdapterProvider.Initialize(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initialize the adapter provider with configuration information
            </summary>
            <param name="configString"></param>
            <param name="connectionString"></param>
            <param name="connectionStringFull"></param>
            <param name="applicationSetting"></param>
            <returns></returns>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterProvider.ConfigString">
            <summary>
            Get the configuration string.
            NOTE: configuration string was set by calling Initialize
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterProvider.ConnectionStringPartial">
            <summary>
            Get the partial connection string.  
            This connection string will not have the user name and password.  The adapter 
            writes needs to use the username and password provided to them
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterProvider.ApplicationSetting">
            <summary>
            Get the application setting
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterProvider.Configuration">
            <summary>
            Get the adapter definition
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterProvider.XmDataService">
            <summary>
            get the Data Service to call the Xm
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterProvider.BusGlobalVars">
            <summary>
            Gets the BusGlobalVars in form of string
            </summary>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.AdapterUIServiceBase">
            <summary>
            Adapter UI service base implementation
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterUIServiceBase.IsNew">
            <summary>
            if the Window is meant for new record creation
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterUIServiceBase.LayOut">
            <summary>
            Layout information
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterUIServiceBase.DataInfo">
            <summary>
            data information
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterUIServiceBase.Actions">
            <summary>
            Action available for the screen
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterUIServiceBase.AcctNo">
            <summary>
            Account Number parameter
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterUIServiceBase.AcctType">
            <summary>
            Account type parameter
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterUIServiceBase.ScreenType">
            <summary>
            screen type parameter
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterUIServiceBase.ToolBarType">
            <summary>
            ToolBar Type 
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterUIServiceBase.RimNo">
            <summary>
            Rimnumber parameter
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterUIServiceBase.ScreenPtid">
            <summary>
            Rimnumber parameter
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterUIServiceBase.ScreenId">
            <summary>
            ScreenId property
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterUIServiceBase.ScreenName">
            <summary>
            ScreenName parameter
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterUIServiceBase.ScreenTitle">
            <summary>
            ScreenTitle
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.AdapterUIServiceBase.MemoType">
            <summary>
            MemoType
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.AdapterUIServiceBase.#ctor">
            <summary>
            Simple constructor
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.AdapterUIServiceBase.#ctor(Phoenix.Shared.Adapter.V1.AdapterProvider)">
            <summary>
            Simple constructor
            </summary>
            <param name="ap"></param>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.AdapterUIServiceBase.LoadFromXml(System.String,System.String)">
            <summary>
            Overridden to load the base object and initialize
            </summary>
            <param name="xmlData"></param>
            <param name="actionType"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.AdapterUIServiceBase.DoAction">
            <summary>
            Perform action
            </summary>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.AdapterUIServiceBase.ProcessActionClicked">
            <summary>
            Custom action handler to process ActionClicked
            </summary>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.AdapterUIServiceBase.ProcessActionClicked(Phoenix.Shared.Adapter.V1.Business.StringType,Phoenix.Shared.Adapter.V1.Business.StringType,Phoenix.Shared.Adapter.V1.Business.StringType)">
            <summary>
            Process ActionClicked with parameters
            </summary>
            <param name="actionName"></param>
            <param name="stateInfo"></param>
            <param name="response"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.AdapterUIServiceBase.ProcessActionSave">
            <summary>
            Custom action handler to process "ActionSave" 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.AdapterUIServiceBase.ProcessActionSave(Phoenix.Shared.Adapter.V1.Business.StringType,Phoenix.Shared.Adapter.V1.Business.StringType,Phoenix.Shared.Adapter.V1.Business.StringType,Phoenix.Shared.Adapter.V1.Business.StringType)">
            <summary>
            Custom action handler to process actionSave with parameters
            </summary>
            <param name="oldState"></param>
            <param name="newState"></param>
            <param name="response"></param>
            <param name="prePostType"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.AdapterUIServiceBase.ProcessValidateField">
            <summary>
            Custom action handler to handle "ValidateField"
            </summary>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.AdapterUIServiceBase.ProcessValidateField(Phoenix.Shared.Adapter.V1.Business.StringType,Phoenix.Shared.Adapter.V1.Business.StringType,Phoenix.Shared.Adapter.V1.Business.StringType,Phoenix.Shared.Adapter.V1.Business.StringType,Phoenix.Shared.Adapter.V1.Business.StringType)">
            <summary>
            Custom action handler to handle "ValidateField"
            </summary>
            <param name="fieldName">name of the field changed</param>
            <param name="xmlTag">xmlTag of the field</param>
            <param name="prevValue">previous value of the field</param>
            <param name="newValue">new value of the field</param>
            <param name="stateInfo">current state info</param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.AdapterUIServiceBase.ProcessGetScreen">
            <summary>
            Custom action handler to get the screen information
            </summary>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.AdapterUIServiceBase.GetScreenProcessor(System.String)">
            <summary>
            Get the screen processor for the screen name provided
            </summary>
            <param name="screenName"></param>
            <returns></returns>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.ApplicationSetting">
            <summary>
            Class to define the application. 
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.ApplicationSetting.AuthenticationWSUrl">
            <summary>
            Authentication Url
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.ApplicationSetting.ReleaseGroupName">
            <summary>
            Release group name
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.ApplicationSetting.ApplicationId">
            <summary>
            Application Id
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.ApplicationSetting.ApplicationWSUrl">
            <summary>
            Application Ws Url
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.ApplicationSetting.DatabaseDefName">
            <summary>
            database definition Name
            </summary>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.Business.BaseTypeCollection">
            <summary>
            Field Base Collection
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.BaseTypeCollection.#ctor(Phoenix.Shared.Adapter.V1.Business.BusObjectBase,System.String)">
            <summary>
            Constructor with business object and the goupName for this collection
            </summary>
            <param name="bo"></param>
            <param name="groupName"></param>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.BaseTypeCollection.Add(Phoenix.Shared.Adapter.V1.Business.IField)">
            <summary>
            Add a new field to thecollection
            </summary>
            <param name="field"></param>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.BaseTypeCollection.GroupName">
            <summary>
            Get the group name to be used when serialized
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.BaseTypeCollection.GetKeyForItem(Phoenix.Shared.Adapter.V1.Business.IField)">
            <summary>
            Overriden to get the key
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.BaseTypeCollection.LoadFromXml(System.Xml.XmlNode,Phoenix.Shared.Adapter.V1.Business.SerializerProperties)">
            <summary>
            Load from XML node
            </summary>
            <param name="node"></param>
            <param name="slp"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.BaseTypeCollection.Serialize(System.Xml.XmlWriter,Phoenix.Shared.Adapter.V1.Business.SerializerProperties)">
            <summary>
            Serialize to the writer
            </summary>
            <param name="xmlWriter"></param>
            <param name="sp"></param>
            <returns></returns>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.Business.IField">
            <summary>
            Interface to define the field
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.IField.BusObject">
            <summary>
            Get/Set the business object associated with this field
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.IField.IsNull">
            <summary>
            Returns true the value is null
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.IField.XmlTag">
            <summary>
            Xml Tag to be used while serializing  this field
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.IField.XmlValue">
            <summary>
            Value string, usable for XmlSerialization
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.IField.GetSqlString">
            <summary>
            Sql Sting usable for building SQL.  
            The value will be converted into SQL format, and will be enclosed with quotes 
            if the data type needs it.
            If the value is null then the string "null" (without quotes will be returned) 
            </summary>
            <returns></returns>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.IField.IsQuoted">
            <summary>
            If the data type needs to be quoted
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.IField.Serialize(System.Xml.XmlWriter,Phoenix.Shared.Adapter.V1.Business.SerializerProperties)">
            <summary>
            Serialize the field 
            </summary>
            <param name="xmlWriter"></param>
            <param name="slProps"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.IField.LoadFromNode(System.Xml.XmlNode,Phoenix.Shared.Adapter.V1.Business.SerializerProperties)">
            <summary>
            Load the field value from the xmlNode passed
            </summary>
            <param name="valueNode"></param>
            <param name="slProps"></param>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.Business.BaseTypeG`1">
            <summary>
            Generic Base implementation
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.BaseTypeG`1._nullValue">
            <summary>
            Null Value for the type
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.BaseTypeG`1._minValue">
            <summary>
            Minimal value for the type
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.BaseTypeG`1._maxValue">
            <summary>
            Maximum value for the type
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.BaseTypeG`1.Value">
            <summary>
            Get/Set the value of the field
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.BaseTypeG`1.PreviousValue">
            <summary>
            Previous value of the field
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.BaseTypeG`1.XmlLoadValue">
            <summary>
            XmlLoad value for the field.  The value loaded while LoadFromNode function was called
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.BaseTypeG`1.GetSqlString">
            <summary>
            SqlString Value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.BaseTypeG`1.LoadStringValue(System.String,System.Boolean)">
            <summary>
            Load the value from the string
            NOTE: Sets the XmlLoadValue to new Value
            </summary>
            <param name="nodeValue"></param>
            <param name="isNull"></param>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.Business.BusObjectBase">
            <summary>
            Business Object Base class
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.BusObjectBase.Params">
            <summary>
            Collection of parameters
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.BusObjectBase.Messages">
            <summary>
            Collection of messages
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.BusObjectBase.OtherInfo">
            <summary>
            Collecttion of other information
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.BusObjectBase.Fields">
            <summary>
            collection of fields
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.BusObjectBase.ObjectState">
            <summary>
            Collection information of object state
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.BusObjectBase.#ctor">
            <summary>
            Simple constructor
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.BusObjectBase.#ctor(System.String)">
            <summary>
            Constructor with the table name
            </summary>
            <param name="tableName"></param>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.BusObjectBase.DoAction">
            <summary>
            Perform action. Does nothing
            </summary>
            <returns></returns>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.BusObjectBase.EnumType">
            <summary>
            Enumeration type
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.BusObjectBase.XmBatchReturnCode">
            <summary>
            Batch Return Code
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.BusObjectBase.XmReturnCode">
            <summary>
            xmReturn Code for the last call
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.BusObjectBase.TableName">
            <summary>
            Table name for 
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.BusObjectBase.SerializeTypeInfo">
            <summary>
            Serialize type info, if you need to send the serialization.
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.BusObjectBase.ListNext">
            <summary>
            List the next number of rows defined
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.BusObjectBase.ListStartFrom">
            <summary>
            list the rows starting from
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.BusObjectBase.SelectAllFields">
            <summary>
            Select Allfield for select
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.BusObjectBase.CustomActionName">
            <summary>
            Custom action name for special processing
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.BusObjectBase.AuditKey">
            <summary>
            Audit key to link
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.BusObjectBase.IsListMoreRecords">
            <summary>
            True if the list has more record to fetch
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.BusObjectBase.OnLoadFromXml(System.String)">
            <summary>
            Load the the object from xml data string
            </summary>
            <param name="xmlData"></param>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.BusObjectBase.OnLoadFromXml(System.Xml.XmlNode,Phoenix.Shared.Adapter.V1.Business.SerializerProperties)">
            <summary>
            Loand Xml data from noe element
            </summary>
            <param name="xmlElement"></param>
            <param name="sp"></param>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.BusObjectBase.OnLoadNodeToObject(System.Xml.XmlNode,Phoenix.Shared.Adapter.V1.Business.SerializerProperties)">
            <summary>
            Load the noe to object
            this will be called after the attributes are loaded into object
            </summary>
            <param name="xmlElement"></param>
            <param name="slProps"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.BusObjectBase.ToString(System.Boolean)">
            <summary>
            Create an Xml Representation of the object
            </summary>
            <param name="isResponse"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.BusObjectBase.GetHashCode">
            <summary>
            Create/return a hash code for this object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.BusObjectBase.Serialize(System.Xml.XmlWriter,Phoenix.Shared.Adapter.V1.Business.SerializerProperties)">
            <summary>
            Serialize the current object into xmlWriter
            </summary>
            <param name="xmlWriter">Xml Writer to serialilze</param>
            <param name="sp">serialization properties</param>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.BusObjectBase.LoadActionType(System.Xml.XmlNode)">
            <summary>
            Load the action type
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.BusObjectBase.ResponseTypeId">
            <summary>
            Get/Set the ResponseType Id
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.BusObjectBase.ActionType">
            <summary>
            Get/Set Action type for the call
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.BusObjectBase.ListViewWriter">
            <summary>
            ListView Writer to use for listview serialization
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.BusObjectBase.ObjectStatus">
            <summary>
            ORecord Status of the call
            </summary>
        </member>
        <member name="E:Phoenix.Shared.Adapter.V1.Business.BusObjectBase.PropertyChanged">
            <summary>
            Property changed event
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.BusObjectBase.GetFieldByXml(System.String)">
            <summary>
            Get the Field idntified by the xmlTag
            </summary>
            <param name="xmlTag"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.BusObjectBase.GetStringField(System.String,System.Boolean)">
            <summary>
            Get the string field identified by the fieldTag.
            
            </summary>
            <param name="fieldTag"></param>
            <param name="createNew">a new field will be created if not found</param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.BusObjectBase.GetIntField(System.String,System.Boolean)">
            <summary>
            Get and Integer field
            </summary>
            <param name="fieldTag"></param>
            <param name="createNew">Create a new field if one not found</param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.BusObjectBase.GetDecimalField(System.String,System.Boolean)">
            <summary>
            Get decimal field from the fields collection
            </summary>
            <param name="fieldTag"></param>
            <param name="createNew"></param>
            <returns></returns>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.Business.PXmlWriter">
            <summary>
            XmlWriter class 
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.PXmlWriter.IsOpen">
            <summary>
            Returns whether the writer is open or not
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.PXmlWriter.#ctor">
            <summary>
            Simple Constructor
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.PXmlWriter.#ctor(System.Text.Encoding)">
            <summary>
            Simple Constructor
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.PXmlWriter.StringWriter">
            <summary>
            Get the StringWriter of the object
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.PXmlWriter.XmlWriter">
            <summary>
            Get the Xml Writer of the object
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.PXmlWriter.Open">
            <summary>
            Opens a closed writer
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.PXmlWriter.Open(System.Text.Encoding)">
            <summary>
            Opens a closed writer
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.PXmlWriter.Close">
            <summary>
            Close the internal streams
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.PXmlWriter.ToString">
            <summary>
            Return the string value of the object
            </summary>
            <returns>String</returns>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.Business.CustomActions">
            <summary>
            Custom Action names
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.CustomActions.GetScreen">
            <summary>
            Custom action name to get screen
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.CustomActions.ActionClicked">
            <summary>
            Custom action name to process action clicked
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.CustomActions.ValidateField">
            <summary>
            Custom action name to process validate field
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.CustomActions.ActionSave">
            <summary>
            Custom action name to process save button click
            </summary>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.Business.DateType">
            <summary>
            Class to handle the Date/Time datatype
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.DateType.#ctor">
            <summary>
            Simple constructor
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.DateType.#ctor(System.String)">
            <summary>
            Constructor with XmlTag definition
            </summary>
            <param name="xmlTag"></param>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.DateType.#ctor(System.String,System.DateTime)">
            <summary>
            Constructor with Xmltag and Value information
            </summary>
            <param name="xmlTag"></param>
            <param name="value"></param>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.DateType.IsNull">
            <summary>
            Returns true if the value is null.
            (NOTE: the value null id defined as DateTime.MinValue
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.DateType.XmlValue">
            <summary>
            Get the Xml formatted string value
            empty string will be returned if the value is null
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.DateType.LoadStringValue(System.String,System.Boolean)">
            <summary>
            Load the string value into DateTime
            </summary>
            <param name="nodeValue"></param>
            <param name="isNull"></param>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.Business.DecimalType">
            <summary>
            Decimaltype to handle the Decimal data type
            
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.DecimalType.#cctor">
            <summary>
            static initialization of the properties
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.DecimalType.#ctor">
            <summary>
            simple consturctor, setst the FieldType to Decimal
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.DecimalType.#ctor(System.String)">
            <summary>
            constructor with xmltag to set the Xmltag name
            </summary>
            <param name="xmlTag"></param>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.DecimalType.#ctor(System.String,System.Decimal)">
            <summary>
            Constructor with info for Xmltag and Value 
            </summary>
            <param name="xmlTag"></param>
            <param name="value"></param>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.DecimalType.IsNull">
            <summary>
            Return null if the value equals the nullValue
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.DecimalType.XmlValue">
            <summary>
            XmlValue
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.DecimalType.LoadStringValue(System.String,System.Boolean)">
            <summary>
            Load the string value into value
            </summary>
            <param name="nodeValue"></param>
            <param name="isNull"></param>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.Business.XmEnumerationType">
            <summary>
            XmEnumeration type indicates the type of Enumeration Can be used in 
            conjunction with XmActionType
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.XmEnumerationType.None">
            <summary>
            Nothing defined
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.XmEnumerationType.EnumAll">
            <summary>
            Enumerate All possible
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.XmEnumerationType.EnumSelective">
            <summary>
            Enumerate only the indicated fiedl
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.XmEnumerationType.EnumFKValues">
            <summary>
            Enumerate Foreign Key Values
            </summary>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.Business.XmActionType">
            <summary>
            Defines the list of Actions that can be performed on a Phoenix Business Object
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.XmActionType.None">
            <summary>
            No Action Defined
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.XmActionType.Delete">
            <summary>
            Delete the Record
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.XmActionType.New">
            <summary>
            Create a new record
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.XmActionType.Select">
            <summary>
            Select the data into the record
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.XmActionType.Update">
            <summary>
            Update the data specified in the record
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.XmActionType.EnumOnly">
            <summary>
            Enumerate Only
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.XmActionType.ListView">
            <summary>
            List the data relevent to this object
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.XmActionType.Default">
            <summary>
            Default the data based on the parameters.
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.XmActionType.Custom">
            <summary>
            Do a Custom Action defined in the object
            </summary>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.Business.PNotes">
            <summary>
            Notes Serialization.  This is reserver for future.  Doesn't have any implementation
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.PNotes.LoadFromString(System.String)">
            <summary>
            Reserved for future.  No current implementation
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.Business.RecordStatus">
            <summary>
            Defined a values that indicate the record object status.
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.RecordStatus.None">
            <summary>
            Object is created but not initalized.
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.RecordStatus.Initialized">
            <summary>
            Initialized with field details
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.RecordStatus.LoadedXml">
            <summary>
            Field values are loaded from xml
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.RecordStatus.NeedParameter">
            <summary>
            This record can't be processed, because it needs additional parameters
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.RecordStatus.DataFetched">
            <summary>
            Data Fetched from the Database
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.RecordStatus.Success">
            <summary>
            Process was success
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.RecordStatus.Failure">
            <summary>
            Process action failed
            </summary>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.Business.SetProperties">
            <summary>
            Set Properties class used to pass properties for 
            current usage
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.SetProperties.DefineIsNull">
            <summary>
            If defined the null attributes will be returned when the objects 
            are serilised
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.SetProperties.FullEndTag">
            <summary>
            Add Full end tag for empty elements. Default values is false. And a short end tag will be added for empty elements.
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.SetProperties.WriteEndElement(System.Xml.XmlWriter)">
            <summary>
            Write End Element
            </summary>
            <param name="xw"></param>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.SetProperties.WriteEndElement(System.Xml.XmlTextWriter)">
            <summary>
            Write End element
            </summary>
            <param name="xw"></param>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.Business.FieldType">
            <summary>
            specifies the types for the Business object fields.
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.FieldType.Binary">
            <summary>
            Binary Data Type
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.FieldType.Bit">
            <summary>
            Bit Data Type
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.FieldType.Char">
            <summary>
            Char Data Type represents 
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.FieldType.DateTime">
            <summary>
            Date Time Data Type  
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.FieldType.Decimal">
            <summary>
            Decimal Data Type 
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.FieldType.Float">
            <summary>
            Float Data Type
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.FieldType.Image">
            <summary>
            Image Data Type 
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.FieldType.Int">
            <summary>
            Integer Datatype 
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.FieldType.Numeric">
            <summary>
            Numeric datatype 
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.FieldType.SmallDateTime">
            <summary>
            Datetime Datatype 
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.FieldType.SmallInt">
            <summary>
            SmallInt Datatype 
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.FieldType.Text">
            <summary>
            Text data type 
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.FieldType.TinyInt">
            <summary>
            TinyInt data type 
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.FieldType.VarBinary">
            <summary>
            Var binary data type.
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.FieldType.VarChar">
            <summary>
            varchar data type 
            </summary>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.Business.PDialogResult">
            <summary>
            Result of the Message Box
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.PDialogResult.None">
            <summary>
            Nothing is returned from the dialog box. This means that the modal dialog continues running.
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.PDialogResult.OK">
            <summary>
            The dialog box return value is OK (usually sent from a button labeled OK).
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.PDialogResult.Cancel">
            <summary>
            The dialog box return value is Cancel (usually sent from a button labeled Cancel).
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.PDialogResult.Abort">
            <summary>
            The dialog box return value is Abort (usually sent from a button labeled Abort).
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.PDialogResult.Retry">
            <summary>
            The dialog box return value is Retry (usually sent from a button labeled Retry).
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.PDialogResult.Ignore">
            <summary>
            The dialog box return value is Ignore (usually sent from a button labeled Ignore).
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.PDialogResult.Yes">
            <summary>
            The dialog box return value is Yes (usually sent from a button labeled Yes).
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.PDialogResult.No">
            <summary>
            The dialog box return value is No (usually sent from a button labeled No).
            </summary>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.Business.PValidationResult">
            <summary>
            Validation result enumeration
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.PValidationResult.Ok">
            <summary>
            Validation is success
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.PValidationResult.Cancel">
            <summary>
            validation is not success
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.PValidationResult.Retry">
            <summary>
            Retry the validation 
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.PValidationResult.OkRefresh">
            <summary>
            The validation is Ok, but refresh of data is needed
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.PValidationResult.CancelRefresh">
            <summary>
            The validation is not sucesss, and refresh of data is needed
            </summary>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.Business.PMessageBoxButtons">
            <summary>
            Messgae Box Buttons
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.PMessageBoxButtons.OK">
            <summary>
            OK
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.PMessageBoxButtons.OKCancel">
            <summary>
            Ok + Cancel
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.PMessageBoxButtons.AbortRetryIgnore">
            <summary>
            Abort + Retry + Ignore
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.PMessageBoxButtons.YesNoCancel">
            <summary>
            Yes + No + Cancel
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.PMessageBoxButtons.YesNo">
            <summary>
            Yes + No
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.PMessageBoxButtons.RetryCancel">
            <summary>
            Retry + Cancel
            </summary>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.Business.EnumValue">
            <summary>
            Summary description for EnumValue.
            </summary>
            
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.EnumValue.AllValue">
            <summary>
            Returns All Value for Enumeration
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.EnumValue.NullValue">
            <summary>
            Returns the Null Value equivalent for Enumerations
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.EnumValue.#ctor(System.String,System.String)">
            <summary>
            Initializes a new <see cref="T:Phoenix.Shared.Adapter.V1.Business.EnumValue"/> Object
            </summary>
            <remarks>
            The codeValue will be trimmed before using. 
            </remarks>
            <param name="codeValue">code value for the constraint</param>
            <param name="description">Description value for the constraint</param>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.EnumValue.Description">
            <summary>
            Get the description value
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.EnumValue.FullDescription">
            <summary>
            Get the Full description if the description has more info
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.EnumValue.CodeValue">
            <summary>
            Get the code Value information
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.EnumValue.CombinedValue">
            <summary>
            Gets the concatenated value of <see cref="P:Phoenix.Shared.Adapter.V1.Business.EnumValue.CodeValue"/> and <see cref="P:Phoenix.Shared.Adapter.V1.Business.EnumValue.Description"/>
            </summary>
            <remarks>
            The code value  and description value is concatenated using " - ".
            </remarks>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.EnumValue.#ctor(System.Object,System.String)">
            <summary>
            Constructor with codevalue and description
            </summary>
            <param name="codeValue"></param>
            <param name="description"></param>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.EnumValue.Seperator">
            <summary>
            Seperator used when the CodeValue and Description are combined in ToString
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.EnumValue.ToString">
            <summary>
            Creates the CodeValue+Description in the String Format
            </summary>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.EnumValue.Serialize(System.Xml.XmlWriter,System.Boolean)">
            <summary>
            Serialize information
            </summary>
            <param name="xmlWriter"></param>
            <param name="serialiseValueAsAttributes"></param>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.Business.EnumValueCollection">
            <summary>
            Defines the collection for EnumValue.
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.EnumValueCollection.Deserialize(System.Xml.XmlNode,System.Boolean)">
            <summary>
            Deserialize the xml node into the collection.
            </summary>
            <param name="valueNode"></param>
            <param name="valueSerializedAsAttribute">Value was serialized as attributes</param>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.EnumValueCollection.Serialize(System.Xml.XmlWriter,System.Boolean)">
            <summary>
            Serializes the list into Xml Element.
            </summary>
            <param name="xmlWriter">Xml writer to be used to write the serizlised data</param>
            <param name="serialiseValueAsAttributes">Serialize value as attributes</param>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.EnumValueCollection.AddKey(System.Object,System.String)">
            <summary>
            Adds the object in to collection
            </summary>
            <param name="codeValue">code value for the enum List</param>
            <param name="description">description value for the enum List</param>
            <returns>returns <see cref="T:System.Int32">index</see> value in the internal collection. </returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.EnumValueCollection.Add(Phoenix.Shared.Adapter.V1.Business.EnumValue)">
            <summary>
            Adds the object in to collection
            </summary>
            <param name="enumObject">Enumeration Object to add to collection</param>
            <returns>returns <see cref="T:System.Int32">index</see> value in the internal collection. </returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.EnumValueCollection.FindEnumValueByDesc(System.String)">
            <summary>
            Find the enumeration value using the description
            </summary>
            <param name="description"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.EnumValueCollection.FindEnumValueByCode(System.String)">
            <summary>
            Find the enum using the code value passed
            </summary>
            <param name="codeValue"></param>
            <returns></returns>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.Business.FieldBase">
            <summary>
            Base clas for all fields
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.FieldBase._isQuoted">
            <summary>
            Set this flag if the field value needs to enclosed 
            with the quotes
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.FieldBase.XmlTag">
            <summary>
            Xml tag name used for serialization
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.FieldBase.IsEnumOutput">
            <summary>
            Get/set flag for requesing enum output
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.FieldBase.IsQuoted">
            <summary>
            return true if the filed needs to enclosed with quotes when making SQL 
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.FieldBase.FieldType">
            <summary>
            Get the field type of the field
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.FieldBase.Selected">
            <summary>
            Set this flag when the selective select is used
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.FieldBase.IsNull">
            <summary>
            IsNull field.
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.FieldBase.GetSqlString">
            <summary>
            Get the Sql string
            </summary>
            <returns></returns>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.FieldBase.StringValue">
            <summary>
            get the string value
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.FieldBase.XmlValue">
            <summary>
            Get the XmlValue for the field
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.FieldBase.EnumValues">
            <summary>
            Get the enumvalue collection
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.FieldBase.BusObject">
            <summary>
            Business object associated with this field
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.FieldBase.Serialize(System.Xml.XmlWriter,Phoenix.Shared.Adapter.V1.Business.SerializerProperties)">
            <summary>
            Serialize the type
            </summary>
            <param name="xmlWriter"></param>
            <param name="sp">Serialization properties</param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.FieldBase.SerializeValue(System.Xml.XmlWriter,System.Boolean)">
            <summary>
            Serialize the value
            </summary>
            <param name="xmlWriter"></param>
            <param name="serializeValueAsAttribute"></param>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.FieldBase.LoadFromNode(System.Xml.XmlNode,Phoenix.Shared.Adapter.V1.Business.SerializerProperties)">
            <summary>
            Load the field value from Xml Node
            </summary>
            <param name="valueNode">Xml Node containingthe field data.</param>
            <param name="slProps">Serialization properties</param>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.FieldBase.LoadStringValue(System.String,System.Boolean)">
            <summary>
            Loads the String value into the field
            </summary>
            <param name="nodeValue">String value to be loaded</param>
            <param name="isNull">True if the value is null.</param>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.FieldBase.CreateAndLoadXml(System.Xml.XmlNode,Phoenix.Shared.Adapter.V1.Business.SerializerProperties)">
            <summary>
            create the object and load xml. used for generic object
            </summary>
            <param name="valueNode"></param>
            <param name="slProps"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.FieldBase.GetStringValue">
            <summary>
            Get String Value
            </summary>
            <returns></returns>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.Business.IntType">
            <summary>
            Integer Typs
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.IntType.#ctor">
            <summary>
            Simple contstructor
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.IntType.#ctor(System.String)">
            <summary>
            Constructor with XmlTag
            </summary>
            <param name="xmlTag"></param>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.IntType.#ctor(System.String,System.Int32)">
            <summary>
            Constructor with xmltag and value
            </summary>
            <param name="xmlTag"></param>
            <param name="value"></param>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.IntType.IsNull">
            <summary>
            return true if the value is null
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.IntType.XmlValue">
            <summary>
            Returns string value that can be used in xml serialization
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.IntType.LoadStringValue(System.String,System.Boolean)">
            <summary>
            Load string value into the object
            </summary>
            <param name="nodeValue"></param>
            <param name="isNull"></param>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.Business.PMessage">
             <summary>
            
             </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.PMessage.Buttons">
            <summary>
            Message Box Buttons
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.PMessage.Response">
            <summary>
            Response for the message
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.PMessage.XmlTag">
            <summary>
            XmlTag for the corresponding field
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.PMessage.Id">
            <summary>
            Error Id if applicable
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.PMessage.Text">
            <summary>
            Get/Set Error Text
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.PMessage.Severity">
            <summary>
            ErrorType
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.PMessage.MessageType">
            <summary>
            Message Type indicating type of the message
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.PMessage.#ctor(System.String,System.Int32,System.String,Phoenix.Shared.Adapter.V1.Business.MLErrorLevel)">
            <summary>
            Default Constructor
            </summary>
            <param name="xmlTag"></param>
            <param name="errorId"></param>
            <param name="errorText"></param>
            <param name="severity"></param>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.PMessage.#ctor(System.String,System.Int32,System.String,Phoenix.Shared.Adapter.V1.Business.MLErrorLevel,Phoenix.Shared.Adapter.V1.Business.MessageType)">
            <summary>
            Default Constructor
            </summary>
            <param name="xmlTag">Xml Tag refering to the field</param>
            <param name="errorId">Error Id</param>
            <param name="errorText">Error text</param>
            <param name="severity">Severity</param>
            <param name="messageType">Message type</param>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.PMessage.#ctor(System.Xml.XmlNode)">
             <summary>
            
             </summary>
             <param name="xmlNode"></param>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.PMessage.#ctor(System.String,System.Int32,System.String,Phoenix.Shared.Adapter.V1.Business.MLErrorLevel,System.String)">
            <summary>
            Default Constructor
            </summary>
            <param name="xmlTag">Xml Tag refering to the field</param>
            <param name="errorId">Error Id</param>
            <param name="errorText">Error text</param>
            <param name="severity">Severity</param>
            <param name="trace">Trace Information</param>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.PMessage.#ctor(System.String,System.Int32,System.String,Phoenix.Shared.Adapter.V1.Business.MLErrorLevel,System.String,Phoenix.Shared.Adapter.V1.Business.MessageType)">
            <summary>
            Default Constructor
            </summary>
            <param name="xmlTag">Xml Tag refering to the field</param>
            <param name="errorId">Error Id</param>
            <param name="errorText">Error text</param>
            <param name="severity">Severity</param>
            <param name="trace">Trace Information</param>
            <param name="messageType">Message type</param>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.PMessage.Serialize(System.Xml.XmlWriter,System.Boolean)">
            <summary>
            Serialize the Data into XMl writer passed
            </summary>
            <param name="xmlWriter">Xml writer</param>
            <param name="valueSerializedAsAttributes">true to serialize  the value as attributes; false otherwise</param>
            <returns></returns>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.PMessage.Trace">
            <summary>
            Trace Information if available
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.PMessage.LoadFromNode(System.Xml.XmlNode,System.Boolean)">
            <summary>
            Load the PMessage class from the Xml Node passed
            </summary>
            <param name="valueNode">Node value to load from</param>
            <param name="showNullWarning">Not USED</param>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.Business.PMessageCollection">
            <summary>
            Error Collection
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.PMessageCollection.Add(Phoenix.Shared.Adapter.V1.Business.PMessage)">
            <summary>
            Add Message Object
            </summary>
            <param name="msgObject"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.PMessageCollection.AddError(Phoenix.Shared.Adapter.V1.Business.IField,System.Int32,System.String,Phoenix.Shared.Adapter.V1.Business.MessageType)">
            <summary>
            Add error to the collection
            </summary>
            <param name="field"></param>
            <param name="errorId"></param>
            <param name="errorText"></param>
            <param name="messageType"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.PMessageCollection.AddError(Phoenix.Shared.Adapter.V1.Business.IField,System.Int32,System.String)">
            <summary>
            Add Error to the collection
            </summary>
            <param name="field">field to ge tthe </param>
            <param name="errorId">Error Id</param>
            <param name="errorText">Error text</param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.PMessageCollection.AddError(Phoenix.Shared.Adapter.V1.Business.IField,System.String)">
            <summary>
            Add Error
            </summary>
            <param name="field">field to ge tthe </param>
            <param name="errorText">Error text</param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.PMessageCollection.AddWarning(Phoenix.Shared.Adapter.V1.Business.IField,System.Int32,System.String)">
            <summary>
            Add Warning
            </summary>
            <param name="field">field corresponding to the error</param>
            <param name="errorId">warning Id</param>
            <param name="errorText">warning Text</param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.PMessageCollection.AddWarning(Phoenix.Shared.Adapter.V1.Business.IField,System.Int32,System.String,Phoenix.Shared.Adapter.V1.Business.MessageType)">
            <summary>
            Add warning
            </summary>
            <param name="field">field corresponding to the error</param>
            <param name="errorId">warning Id</param>
            <param name="errorText">warning Text</param>
            <param name="messageType">Message Tyoe</param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.PMessageCollection.AddWarning(Phoenix.Shared.Adapter.V1.Business.IField,System.String)">
            <summary>
            Add Warning
            </summary>
            <param name="field">field corresponding to the error</param>
            <param name="errorText">warning Text</param>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.PMessageCollection.ErrorCount">
            <summary>
            Get the number of Errors
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.PMessageCollection.WarningCount">
            <summary>
            Get the number of informations
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.PMessageCollection.Serialize(System.Xml.XmlWriter,System.Boolean)">
             <summary>
            
             </summary>
             <param name="xmlWriter"></param>
             <param name="valueSerializedAsAttributes"></param>
             <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.PMessageCollection.LoadFromNode(System.Xml.XmlNode,Phoenix.Shared.Adapter.V1.Business.SerializerProperties)">
             <summary>
            Load from node
             </summary>
             <param name="valueNode"></param>
             <param name="slp"></param>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.PMessageCollection.Clear">
            <summary>
            Clear the collection and reset the counters
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.PMessageCollection.GetMessageById(System.Int32)">
            <summary>
            Get the message identified by the messageId
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.Business.MLErrorLevel">
            <summary>
            Ml error level enumeration
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.MLErrorLevel.Error">
            <summary>
            Error Level - Error indicates this error is being generated due to real problem
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.MLErrorLevel.Warning">
            <summary>
            Error Level - Warning indicates this error is just warning.  Not Critical to stop the application.
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.MLErrorLevel.None">
            <summary>
            No Error 
            </summary>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.Business.MessageType">
            <summary>
            MessageType
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.MessageType.Stop">
            <summary>
            Stop
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.MessageType.Error">
            <summary>
            Error
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.MessageType.Question">
            <summary>
            Question
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.MessageType.Message">
            <summary>
            Message
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.MessageType.Debug">
            <summary>
            Debug
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.MessageType.Warning">
            <summary>
            Warning
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.MessageType.SQLError">
            <summary>
            SQLError
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.MessageType.NullTest">
            <summary>
            NullTest
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.MessageType.Duplicate">
            <summary>
            Duplicate
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.MessageType.NoChanges">
            <summary>
            NoChanges
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.MessageType.UnsavedChanges">
            <summary>
            UnsavedChanges
            </summary>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.Business.SerializerProperties">
            <summary>
            Serializer properties to be passed for serialization
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.SerializerProperties.SerializeObjectState">
            <summary>
            Serialize object state
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.SerializerProperties.SerializeOtherInfo">
            <summary>
            Serialize Other information
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.SerializerProperties.IsResponse">
            <summary>
            Get/Set isResponse indicator
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.SerializerProperties.SelectAllFields">
            <summary>
            Get/Select Select AllFields
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.SerializerProperties.SerializeValueAsAttribute">
            <summary>
            Get/Set Serialize value as attribute property
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.SerializerProperties.IsValidateObjectId">
            <summary>
            Get/Set if the load need to validate the object id
            </summary>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.Business.StringConstants">
            <summary>
            Summary description for StringConstants.
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.RECORD">
            <summary>
            XAPI RECORD  [RECORD]
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.RESPONSE">
            <summary>
            XAPI RESPONSE Nodes [RESPONSE]
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.SEQUENCE">
            <summary>
            Sequence  [Sequence]
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.REFERENCE">
            <summary>
            Reference Number [ReferenceNo]
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.RETURN_CODE">
            <summary>
            REturn Code [ReturnCode]
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.OVRD_INFO1">
            <summary>
            Override Info 1 [OvrdInfo1]
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.OVRD_INFO2">
            <summary>
            Override Info 2	[OvrdInfo2] 
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.SQL_ERROR">
            <summary>
            SQL Error [SQL]
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.XAPI_RESPONSE">
            <summary>
            Xapi Response [XAPI_RESPONSE]
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.HRESULT">
            <summary>
            HRESULt [HRESULT]
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.NAME">
            <summary>
            name attribute [name]
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.VALUE">
            <summary>
            value attribute [value]
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.nRC">
            <summary>
            nRC Return Code [Rc]
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.PARAMETERS">
            <summary>
            Parameter name [_PARAMETERS_]
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.PARAM">
            <summary>
            Parameter name [ _param]
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.FILTER">
            <summary>
            Filter element name [_filter]
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.FILTER_OPERATOR">
            <summary>
            Filter opertaor [operator]
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.OBJECT_ID">
            <summary>
            Object Id [objectId]
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.ENUM_TYPE">
            <summary>
            Enumeration Type [enumType]
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.ACTION_ALL_FIELDS">
            <summary>
            Select All Field Attribute
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.SELECTED_FIELD">
            <summary>
            Selected Field attribute
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.CUSTOM_ACTION">
            <summary>
            Custom Action  [customAction]
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.VALUE_AS_ATTRIBUTES">
            <summary>
            Serialize value as attributes
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.DEFAULT_AS">
            <summary>
            Defaults As attribute [defaultAs]
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.DEFAULT_FROM">
            <summary>
            Default from attribute [defaultFrom]
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.ENUMERATE">
            <summary>
            Enumerate value [enumerate]
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.FOREIGN_KEY_VALUE">
            <summary>
            Foreign Key value [fkValue]
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.IS_NULL">
            <summary>
            Is Null Value [isNull]
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.CONSTRAINT">
            <summary>
            Constraint [Constraint]
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.TRUE_VALUE">
            <summary>
            True Value [1]
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.FALSE_VALUE">
            <summary>
            False Value [0]
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.OPTION">
            <summary>
            Constraint Option [Option]
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.CODE_VALUE">
            <summary>
            Code value for the constraints [code]
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.DESCRIPTION_VALUE">
            <summary>
            Description value for the constraints [desc]
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.XM_DB_STATUS">
            <summary>
            Xm Db Copy Status [XmDbStatus]
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.PRIM_DB_AVAIL">
            <summary>
            Primary Db Available[PrimDbAvailable]
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.RIM_NO">
            <summary>
            Rim Number [RimNo]
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.LOGON_INFO">
            <summary>
            Logon Info [LOGON_INFO]
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.DEBUG_INFO">
            <summary>
            Debug Info Tag [DEBUG_INFO]
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.ERROR">
            <summary>
            Error Message GROUP: [ERROR]
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.MESSAGE">
            <summary>
            Message Tag [Message]
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.TRACE">
            <summary>
            Trace Tav [Trace]
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.LEVEL">
            <summary>
            Level Tag [Level]
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.ID">
            <summary>
            Id Tag [Id]
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.MsgId">
            <summary>
            MessageId  [MsgId]
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.MsgSeverityType">
            <summary>
            MsgSeverityType [MsgId]
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.MsgSeverity">
            <summary>
            MsgSeverity  [MsgId]
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.MsgText">
            <summary>
            MsgSeverity  [MsgId]
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.XmlTag">
            <summary>
            MsgSeverity  [MsgId]
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.CDataOutput">
            <summary>
            CData Output
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.SERVICE_INFO">
            <summary>
            Service Info Group
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.USER_INFO">
            <summary>
            User Info Group
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.AuthToken">
            <summary>
            Auth Token
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.CARD_INFO">
            <summary>
            CARD_INFO group
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.UPDATE">
            <summary>
            UPDATE group
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.MONETARY">
            <summary>
            MONETARY Group
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.INQUIRY">
            <summary>
            INQUIRY Group
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.DB_ACTION">
            <summary>
            DB_ACTIOn Group
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.RAW_SQL">
            <summary>
            Raw SQL Group
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.XAPI">
            <summary>
            XAPI Group
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.OTHER_INFO">
            <summary>
            String constant for OTHER_INFO
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.SerializeFieldsOnCustomAction">
            <summary>
            Serialize fields on Custom action
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.RelGroup">
            <summary>
            Release Group
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.DbName">
            <summary>
            Database Definition Name
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.ModuleName">
            <summary>
            Module Name
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.PHOENIX_PROPERTIES">
            <summary>
            Field Property attribute: Hex number
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.FIELD_TYPE">
            <summary>
            Field Type attribute
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.ALLOWED_LENGTH">
            <summary>
            Allowed Length
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.VIEW_STATE">
            <summary>
            Allowed Length
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.OUTPUT_TYPEID">
            <summary>
            OutputTypeId element
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.LIST_STARTFROM">
            <summary>
            list From Attribute
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.LIST_NEXT">
            <summary>
            list Count Attribute
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.LIST_MORE">
            <summary>
            Atribute to indicate the list has more result
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.AUDIT_KEY">
            <summary>
            Atribute to indicate the list has more result
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.MsgButtons">
            <summary>
            element name to indicate buttons for the message
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Business.StringConstants.MsgResponse">
            <summary>
            element name to indicate response for the message
            </summary>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.Business.StringType">
            <summary>
            Class implementation to handle the char, varcha, text datatype
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.StringType.#ctor">
            <summary>
            Simple constructor
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.StringType.#ctor(System.String)">
            <summary>
            Constructor with XmlTag
            </summary>
            <param name="xmlTag"></param>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.StringType.#ctor(System.String,System.String)">
            <summary>
            Constructor with XmlTag and Value
            </summary>
            <param name="xmlTag"></param>
            <param name="value"></param>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.StringType.IsNull">
            <summary>
            REturn true if the value is null
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.StringType.XmlValue">
            <summary>
            Returns the the XmlValue;
            Returns string.Empty if the string is null
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.StringType.SqlEscape(System.String)">
            <summary>
            SqlEscapes the string.  Replaces the double quotes(") with two double quotes("")
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.StringType.GetSqlString">
            <summary>
            Return Sql string. enclosed in double quotes
            </summary>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.StringType.LoadStringValue(System.String,System.Boolean)">
            <summary>
            Load the string value to the object
            </summary>
            <param name="nodeValue"></param>
            <param name="isNull"></param>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.StringType.IntValue">
            <summary>
            Get the integer value. If the string is not 
            have a valid integer value then the returns int.MinValue
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.StringType.DateValue">
            <summary>
            Returns the date value
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.Business.StringType.DecimalValue">
            <summary>
            Returns the decimal value
            </summary>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.Business.XmlType">
            <summary>
            Xml Type to be serializes the string as xml Node
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.XmlType.#ctor(System.String)">
            <summary>
            Constructor with XmlTag
            </summary>
            <param name="xmlTag"></param>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.XmlType.#ctor(System.String,System.String)">
            <summary>
            Constructor with XmlTag and Value
            </summary>
            <param name="xmlTag"></param>
            <param name="value"></param>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Business.XmlType.SerializeValue(System.Xml.XmlWriter,System.Boolean)">
            <summary>
            Serialize Value
            </summary>
            <param name="xmlWriter"></param>
            <param name="serializeValueAsAttribute"></param>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.CDS.XmDataService">
            <summary>
            Xm Data service to provide access to XM
            This is a short cut to call the xmProcessor than calling XM Web services
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.CDS.XmDataService.#ctor(Phoenix.Shared.Adapter.V1.IAdapterProvider)">
            <summary>
            Constructor
            </summary>
            <param name="ap"></param>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.CDS.XmDataService.ProcessRequest(Phoenix.Shared.Adapter.V1.Business.BusObjectBase)">
            <summary>
            Process Request using Business Object
            </summary>
            <param name="busObject"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.CDS.XmDataService.ProcessRequest(Phoenix.Shared.Adapter.V1.Business.BusObjectBase,Phoenix.Shared.Adapter.V1.Business.SerializerProperties)">
            <summary>
            process Request  using business object and serialiser property
            </summary>
            <param name="busObject"></param>
            <param name="sp"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.CDS.XmDataService.CallXmProcessor(System.String)">
            <summary>
            Call xmlProcess with Xml request
            </summary>
            <param name="xmlRequest"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.CDS.XmDataService.ProcessCustomAction(Phoenix.Shared.Adapter.V1.Business.BusObjectBase,System.String,Phoenix.Shared.Adapter.V1.Business.IField[])">
            <summary>
            Process a custom action
            </summary>
            <param name="busObject"></param>
            <param name="customActionName"></param>
            <param name="paremeterList"></param>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.CDS.XmDataService.GetListView(System.String)">
            <summary>
            Get a listview
            </summary>
            <param name="xmlRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.CDS.XmDataService.Response">
            <summary>
            Get the CDS Response infor
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.CDS.XmDataService.ProcessResult(Phoenix.Shared.Adapter.V1.Business.BusObjectBase,System.String,Phoenix.Shared.Adapter.V1.Business.SerializerProperties)">
            <summary>
            Process the xmlResponse data and load into into the businessObject
            </summary>
            <param name="busObject"></param>
            <param name="xmlResponse">response received from XmProcessor</param>
            <param name="sp">SerializerProperties, if null then defaulted</param>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.CDS.XmDataService.XmDbStatus">
            <summary>
            Xm Db Status = Copy Status of the object
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.CDS.XmDataService.XmDbStatus.Day">
            <summary>
            Day mode:  All calls will be routed to Phoenix Database
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.CDS.XmDataService.XmDbStatus.CopyOver">
            <summary>
            Copy Over Mode: Data is being copied to XM Database
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.CDS.XmDataService.XmDbStatus.Nightly">
            <summary>
            Nightly Mode: Only XM Database is used. 
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.CDS.XmDataService.XmDbStatus.CopyBack">
            <summary>
            Copy Back Mode: Data is being copied back to Phoenix Database
            </summary>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.CDS.XmDataService.CDSResponse">
             <summary>
            
             </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.CDS.XmDataService.CDSResponse.RecResponse">
             <summary>
            
             </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.CDS.XmDataService.CDSResponse.RC">
            <summary>
            Batch Returnc Code
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.CDS.XmDataService.CDSResponse.HRESULT">
            <summary>
            HRESULT
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.CDS.XmDataService.CDSResponse.Message">
            <summary>
            Message Received in response. May be null
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.CDS.XmDataService.CDSResponse.XmDbStatus">
            <summary>
            Copy Status from XP_CONTROL
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.CDS.XmDataService.CDSResponse.IsPrimDbAvailable">
            <summary>
            True if XP_CONTROL.PRIm_DB_AVAIL = "Y"
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.CDS.XmDataService.CDSResponse.SqlError">
            <summary>
            Sql Error Returned from in the call
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.CDS.XmDataService.CDSResponse.ErrorText">
            <summary>
            ErrorText Returned
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.CDS.XmDataService.CDSResponse.ErrorLevel">
             <summary>
            
             </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.CDS.XmDataService.CDSResponse.ErrorTrace">
             <summary>
            
             </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.CDS.XmDataService.CDSResponse.CodeErrorId">
             <summary>
            
             </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.CDS.XmDataService.CDSResponse.IsValidResponse">
             <summary>
            
             </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.CDS.XmDataService.CDSResponse.#ctor(System.Xml.XmlNode)">
             <summary>
            
             </summary>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.CDS.XmDataService.RecordResponse">
             <summary>
            
             </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.CDS.XmDataService.RecordResponse.ReturnCode">
             <summary>
            
             </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.CDS.XmDataService.RecordResponse.SequenceNo">
             <summary>
            
             </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.CDS.XmDataService.RecordResponse.ReferenceNo">
             <summary>
            
             </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.CDS.XmDataService.RecordResponse.OvrdInfo1">
             <summary>
            
             </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.CDS.XmDataService.RecordResponse.OvrdInfo2">
             <summary>
            
             </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.CDS.XmDataService.RecordResponse.#ctor(System.Xml.XmlNode)">
             <summary>
            
             </summary>
             <param name="node"></param>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.CDS.XmDataService.RecordResponse.IsValidResponse">
             <summary>
            
             </summary>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.CDS.XmlNodeHelper">
            <summary>
            XmlNodeHelper is a utility function which can be used to access the Xml node elements.
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.CDS.XmlNodeHelper.#ctor">
            <summary>
            Simple Constructor
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.CDS.XmlNodeHelper.GetChildValueString(System.Xml.XmlNode,System.String)">
            <summary>
            Finds the child node of childName and returns the string value.
            </summary>
            <remarks>
            If child node is not found then throws an <see cref="T:Phoenix.Shared.Adapter.V1.CDS.XmlNodeNotFoundException"/>
            </remarks>
            <param name="node">Xml Node to be used</param>
            <param name="childName">name of the child</param>
            <returns>string value</returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.CDS.XmlNodeHelper.GetChildValueShort(System.Xml.XmlNode,System.String)">
            <summary>
            Finds the child node of childName and returns the short value.
            </summary>
            <remarks>
            If child node is not found then throws an <see cref="T:Phoenix.Shared.Adapter.V1.CDS.XmlNodeNotFoundException"/>
            </remarks>
            <param name="node">Xml Node to be used</param>
            <param name="childName">name of the child</param>
            <returns>short value</returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.CDS.XmlNodeHelper.GetChildValueInt(System.Xml.XmlNode,System.String)">
            <summary>
            Finds the child node of childName and returns the int value.
            </summary>
            <remarks>
            If child node is not found then throws an <see cref="T:Phoenix.Shared.Adapter.V1.CDS.XmlNodeNotFoundException"/>
            </remarks>
            <param name="node">Xml Node to be used</param>
            <param name="childName">name of the child</param>
            <returns>int value</returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.CDS.XmlNodeHelper.GetChildValueLong(System.Xml.XmlNode,System.String)">
            <summary>
            Finds the child node of childName and returns the long value.
            </summary>
            <remarks>
            If child node is not found then throws an <see cref="T:Phoenix.Shared.Adapter.V1.CDS.XmlNodeNotFoundException"/>
            </remarks>
            <param name="node">Xml Node to be used</param>
            <param name="childName">name of the child</param>
            <returns>long value</returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.CDS.XmlNodeHelper.GetChildValueByte(System.Xml.XmlNode,System.String)">
            <summary>
            Finds the child node of childName and returns the byte value.
            </summary>
            <remarks>
            If child node is not found then throws an <see cref="T:Phoenix.Shared.Adapter.V1.CDS.XmlNodeNotFoundException"/>
            </remarks>
            <param name="node">Xml Node to be used</param>
            <param name="childName">name of the child</param>
            <returns>byte value</returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.CDS.XmlNodeHelper.GetChildValueChar(System.Xml.XmlNode,System.String)">
            <summary>
            Finds the child node of childName and returns the char value.
            </summary>
            <remarks>
            If child node is not found then throws an <see cref="T:Phoenix.Shared.Adapter.V1.CDS.XmlNodeNotFoundException"/>
            </remarks>
            <param name="node">Xml Node to be used</param>
            <param name="childName">name of the child</param>
            <returns>char value</returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.CDS.XmlNodeHelper.GetChildValueDateTime(System.Xml.XmlNode,System.String)">
            <summary>
            Finds the child node of childName and returns the DateTime value.
            </summary>
            <remarks>
            If child node is not found then throws an <see cref="T:Phoenix.Shared.Adapter.V1.CDS.XmlNodeNotFoundException"/>
            </remarks>
            <param name="node">Xml Node to be used</param>
            <param name="childName">name of the child</param>
            <returns>DateTime value</returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.CDS.XmlNodeHelper.GetChildValueDecimal(System.Xml.XmlNode,System.String)">
            <summary>
            Finds the child node of childName and returns the decimal value.
            </summary>
            <remarks>
            If child node is not found then throws an <see cref="T:Phoenix.Shared.Adapter.V1.CDS.XmlNodeNotFoundException"/>
            </remarks>
            <param name="node">Xml Node to be used</param>
            <param name="childName">name of the child</param>
            <returns>decimal value</returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.CDS.XmlNodeHelper.GetChildValueDouble(System.Xml.XmlNode,System.String)">
            <summary>
            Finds the child node of childName and returns the double value.
            </summary>
            <remarks>
            If child node is not found then throws an <see cref="T:Phoenix.Shared.Adapter.V1.CDS.XmlNodeNotFoundException"/>
            </remarks>
            <param name="node">Xml Node to be used</param>
            <param name="childName">name of the child</param>
            <returns>double value</returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.CDS.XmlNodeHelper.GetChildValueString(System.Xml.XmlNode,System.String,System.String)">
            <summary>
            Finds the child node of childName and returns the string value.
            </summary>
            <remarks>
            If child node is not found then returns default value.
            </remarks>
            <param name="node">Xml Node to be used</param>
            <param name="childName">name of the child</param>
            <param name="defaultValue">default value to be used</param>
            <returns>string value</returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.CDS.XmlNodeHelper.GetChildValueShort(System.Xml.XmlNode,System.String,System.Int16)">
            <summary>
            Finds the child node of childName and returns the short value.
            </summary>
            <remarks>
            If child node is not found then returns default value.
            </remarks>
            <param name="node">Xml Node to be used</param>
            <param name="childName">name of the child</param>
            <param name="defaultValue">default value to be used</param>
            <returns>short value</returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.CDS.XmlNodeHelper.GetChildValueInt(System.Xml.XmlNode,System.String,System.Int32)">
            <summary>
            Finds the child node of childName and returns the int value.
            </summary>
            <remarks>
            If child node is not found then returns default value.
            </remarks>
            <param name="node">Xml Node to be used</param>
            <param name="childName">name of the child</param>
            <param name="defaultValue">default value to be used</param>
            <returns>int value</returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.CDS.XmlNodeHelper.GetChildValueLong(System.Xml.XmlNode,System.String,System.Int64)">
            <summary>
            Finds the child node of childName and returns the long value.
            </summary>
            <remarks>
            If child node is not found then returns default value.
            </remarks>
            <param name="node">Xml Node to be used</param>
            <param name="childName">name of the child</param>
            <param name="defaultValue">default value to be used</param>
            <returns>long value</returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.CDS.XmlNodeHelper.GetChildValueByte(System.Xml.XmlNode,System.String,System.Byte)">
            <summary>
            Finds the child node of childName and returns the byte value.
            </summary>
            <remarks>
            If child node is not found then returns default value.
            </remarks>
            <param name="node">Xml Node to be used</param>
            <param name="childName">name of the child</param>
            <param name="defaultValue">default value to be used</param>
            <returns>byte value</returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.CDS.XmlNodeHelper.GetChildValueChar(System.Xml.XmlNode,System.String,System.Char)">
            <summary>
            Finds the child node of childName and returns the char value.
            </summary>
            <remarks>
            If child node is not found then returns default value.
            </remarks>
            <param name="node">Xml Node to be used</param>
            <param name="childName">name of the child</param>
            <param name="defaultValue">default value to be used</param>
            <returns>char value</returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.CDS.XmlNodeHelper.GetChildValueDateTime(System.Xml.XmlNode,System.String,System.DateTime)">
            <summary>
            Finds the child node of childName and returns the DateTime value.
            </summary>
            <remarks>
            If child node is not found then returns default value.
            </remarks>
            <param name="node">Xml Node to be used</param>
            <param name="childName">name of the child</param>
            <param name="defaultValue">default value to be used</param>
            <returns>DateTime value</returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.CDS.XmlNodeHelper.GetChildValueDecimal(System.Xml.XmlNode,System.String,System.Decimal)">
            <summary>
            Finds the child node of childName and returns the decimal value.
            </summary>
            <remarks>
            If child node is not found then returns default value.
            </remarks>
            <param name="node">Xml Node to be used</param>
            <param name="childName">name of the child</param>
            <param name="defaultValue">default value to be used</param>
            <returns>decimal value</returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.CDS.XmlNodeHelper.GetChildValueDouble(System.Xml.XmlNode,System.String,System.Double)">
            <summary>
            Finds the child node of childName and returns the double value.
            </summary>
            <remarks>
            If child node is not found then returns default value.
            </remarks>
            <param name="node">Xml Node to be used</param>
            <param name="childName">name of the child</param>
            <param name="defaultValue">default value to be used</param>
            <returns>double value</returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.CDS.XmlNodeHelper.GetElementValueString(System.Xml.XmlNode)">
            <summary>
            Get the value out of the current <see cref="T:System.Xml.XmlNode"/>
            </summary>
            <param name="node">Xml node to get the value out</param>
            <returns>string value of the node</returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.CDS.XmlNodeHelper.GetElementValueShort(System.Xml.XmlNode)">
            <summary>
            Get the value out of the current <see cref="T:System.Xml.XmlNode"/>
            </summary>
            <param name="node">Xml node to get the value out</param>
            <returns>short value of the node</returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.CDS.XmlNodeHelper.GetElementValueInt(System.Xml.XmlNode)">
            <summary>
            Get the value out of the current <see cref="T:System.Xml.XmlNode"/>
            </summary>
            <param name="node">Xml node to get the value out</param>
            <returns>int value of the node</returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.CDS.XmlNodeHelper.GetElementValueLong(System.Xml.XmlNode)">
            <summary>
            Get the value out of the current <see cref="T:System.Xml.XmlNode"/>
            </summary>
            <param name="node">Xml node to get the value out</param>
            <returns>long value of the node</returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.CDS.XmlNodeHelper.GetElementValueByte(System.Xml.XmlNode)">
            <summary>
            Get the value out of the current <see cref="T:System.Xml.XmlNode"/>
            </summary>
            <param name="node">Xml node to get the value out</param>
            <returns>byte value of the node</returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.CDS.XmlNodeHelper.GetElementValueChar(System.Xml.XmlNode)">
            <summary>
            Get the value out of the current <see cref="T:System.Xml.XmlNode"/>
            </summary>
            <param name="node">Xml node to get the value out</param>
            <returns>char value of the node</returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.CDS.XmlNodeHelper.GetElementValueDateTime(System.Xml.XmlNode)">
            <summary>
            Get the value out of the current <see cref="T:System.Xml.XmlNode"/>
            </summary>
            <param name="node">Xml node to get the value out</param>
            <returns>DateTime value of the node</returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.CDS.XmlNodeHelper.GetElementValueDecimal(System.Xml.XmlNode)">
            <summary>
            Get the value out of the current <see cref="T:System.Xml.XmlNode"/>
            </summary>
            <param name="node">Xml node to get the value out</param>
            <returns>decimal value of the node</returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.CDS.XmlNodeHelper.GetElementValueDouble(System.Xml.XmlNode)">
            <summary>
            Get the value out of the current <see cref="T:System.Xml.XmlNode"/>
            </summary>
            <param name="node">Xml node to get the value out</param>
            <returns>double value of the node</returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.CDS.XmlNodeHelper.GetElementValueShort(System.Xml.XmlNode,System.Int16)">
            <summary>
            Get the value out of the current <see cref="T:System.Xml.XmlNode"/>
            </summary>
            <remarks>
            If node value is invalid then returns default value.
            </remarks>
            <param name="node">Xml Node to be used</param>
            <param name="defaultValue">default value to be used</param>
            <returns>short value of the node</returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.CDS.XmlNodeHelper.GetElementValueInt(System.Xml.XmlNode,System.Int32)">
            <summary>
            Get the value out of the current <see cref="T:System.Xml.XmlNode"/>
            </summary>
            <remarks>
            If node value is invalid then returns default value.
            </remarks>
            <param name="node">Xml Node to be used</param>
            <param name="defaultValue">default value to be used</param>
            <returns>int value of the node</returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.CDS.XmlNodeHelper.GetElementValueLong(System.Xml.XmlNode,System.Int64)">
            <summary>
            Get the value out of the current <see cref="T:System.Xml.XmlNode"/>
            </summary>
            <remarks>
            If node value is invalid then returns default value.
            </remarks>
            <param name="node">Xml Node to be used</param>
            <param name="defaultValue">default value to be used</param>
            <returns>long value of the node</returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.CDS.XmlNodeHelper.GetElementValueByte(System.Xml.XmlNode,System.Byte)">
            <summary>
            Get the value out of the current <see cref="T:System.Xml.XmlNode"/>
            </summary>
            <remarks>
            If node value is invalid then returns default value.
            </remarks>
            <param name="node">Xml Node to be used</param>
            <param name="defaultValue">default value to be used</param>
            <returns>byte value of the node</returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.CDS.XmlNodeHelper.GetElementValueChar(System.Xml.XmlNode,System.Char)">
            <summary>
            Get the value out of the current <see cref="T:System.Xml.XmlNode"/>
            </summary>
            <remarks>
            If node value is invalid then returns default value.
            </remarks>
            <param name="node">Xml Node to be used</param>
            <param name="defaultValue">default value to be used</param>
            <returns>char value of the node</returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.CDS.XmlNodeHelper.GetElementValueDateTime(System.Xml.XmlNode,System.DateTime)">
            <summary>
            Get the value out of the current <see cref="T:System.Xml.XmlNode"/>
            </summary>
            <remarks>
            If node value is invalid then returns default value.
            </remarks>
            <param name="node">Xml Node to be used</param>
            <param name="defaultValue">default value to be used</param>
            <returns>DateTime value of the node</returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.CDS.XmlNodeHelper.GetElementValueDecimal(System.Xml.XmlNode,System.Decimal)">
            <summary>
            Get the value out of the current <see cref="T:System.Xml.XmlNode"/>
            </summary>
            <remarks>
            If node value is invalid then returns default value.
            </remarks>
            <param name="node">Xml Node to be used</param>
            <param name="defaultValue">default value to be used</param>
            <returns>decimal value of the node</returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.CDS.XmlNodeHelper.GetElementValueDouble(System.Xml.XmlNode,System.Double)">
            <summary>
            Get the value out of the current <see cref="T:System.Xml.XmlNode"/>
            </summary>
            <remarks>
            If node value is invalid then returns default value.
            </remarks>
            <param name="node">Xml Node to be used</param>
            <param name="defaultValue">default value to be used</param>
            <returns>double value of the node</returns>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.CDS.XmlNodeNotFoundException">
            <summary>
            Xml Node not found Exception
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.CDS.XmlNodeNotFoundException.#ctor(System.String)">
            <summary>
            Create the node not found exception with node name
            </summary>
            <param name="nodeName"></param>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.Dbg">
            <summary>
            Internal Debug Uitlity class
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.Dbg._lp">
            <summary>
            THIS STATIC IS AN OVERRIDE FOR Log publisher
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Dbg.Initialize(Phoenix.Shared.Adapter.V1.AdapterProvider)">
            <summary>
            Initialize the debug provider for the adapter
            </summary>
            <param name="ap"></param>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Dbg.T(System.Int32,System.String)">
            <summary>
            Debug Log with the debug detail information
            </summary>
            <param name="debugLevel"></param>
            <param name="message"></param>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Dbg.T(System.String)">
            <summary>
            Debug log 
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.Dbg.WriteCurrentLoadedAssemblies">
            <summary>
            Write loaded assemblies to the log
            </summary>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.ExAcctEdit">
            <summary>
            ExAccount Edit screen processor for the Phoenix Base
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.ExAcctEdit.#ctor(Phoenix.Shared.Adapter.V1.AdapterUIServiceBase)">
            <summary>
            Simple constructor
            </summary>
            <param name="service"></param>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.ExAcctEdit.BaseBO">
            <summary>
            base business object, UI Service object as received
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.ExAcctEdit.UIService">
            <summary>
            UI Service 
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.ExAcctEdit.ProcessActionClicked(Phoenix.Shared.Adapter.V1.Business.StringType,Phoenix.Shared.Adapter.V1.Business.StringType,Phoenix.Shared.Adapter.V1.Business.StringType)">
            <summary>
            Handle the ActionClicked customaction
            </summary>
            <param name="actionName"></param>
            <param name="stateInfo"></param>
            <param name="response"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.ExAcctEdit.ProcessGetScreen">
            <summary>
            GetScreen Custom action handler
            </summary>
            <returns></returns>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.ExAcctEdit.ExAcct">
            <summary>
            ExAcct to be used by the form. Must be overridden
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.ExAcctEdit.SetScreenDataInfo">
            <summary>
            Set the Screen Data
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.ExAcctEdit.SetScreenLayoutInfo">
            <summary>
            Set the Screen Layout
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.ExAcctEdit.ProcessValidateField(Phoenix.Shared.Adapter.V1.Business.StringType,Phoenix.Shared.Adapter.V1.Business.StringType,Phoenix.Shared.Adapter.V1.Business.StringType,Phoenix.Shared.Adapter.V1.Business.StringType,Phoenix.Shared.Adapter.V1.Business.StringType)">
            <summary>
            Validate field handler
            </summary>
            <param name="fieldName"></param>
            <param name="xmlTag"></param>
            <param name="prevValue"></param>
            <param name="newValue"></param>
            <param name="stateInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.ExAcctEdit.AddCustomLayout(System.String)">
            <summary>
            Add custom layout to the data
            </summary>
            <param name="customXaml"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.ExAcctEdit.ProcessActionSave(Phoenix.Shared.Adapter.V1.Business.StringType,Phoenix.Shared.Adapter.V1.Business.StringType,Phoenix.Shared.Adapter.V1.Business.StringType,Phoenix.Shared.Adapter.V1.Business.StringType)">
            <summary>
            Save handler
            </summary>
            <param name="oldState"></param>
            <param name="newState"></param>
            <param name="response"></param>
            <param name="prePostType"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.ExAcctEdit.FetchNewEditData(System.Boolean)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.ExAcctEdit.PreSaveValidation(System.String@,System.String@)">
            <summary>
            
            </summary>
            <param name="response"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.ExAcctEdit.SetScreenNames(System.String@,System.String@)">
            <summary>
            
            </summary>
            <param name="displayScreenName"></param>
            <param name="historyScreenName"></param>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.ExAcctEdit.SetPreviousHostData(Phoenix.Shared.Adapter.V1.Business.StringType)">
            <summary>
            
            </summary>
            <param name="oldState"></param>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.ExAcctEdit.LoadFromToMessages(Phoenix.Shared.Adapter.V1.Business.BusObjectBase,System.Boolean,System.String@)">
            <summary>
            
            </summary>
            <param name="busObj"></param>
            <param name="loadToMessage"></param>
            <param name="messageString"></param>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.ExAcctEdit.ProcessHostDataValidation(Phoenix.Shared.Adapter.V1.Business.PValidationResult)">
            <summary>
            
            </summary>
            <param name="baseResult"></param>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.ExAcctEdit.PrePostType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.ExAcctEdit.PrePostType.PreSave">
            <summary>
            PreSave
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.ExAcctEdit.PrePostType.Save">
            <summary>
            Save
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.ExAcctEdit.PrePostType.PostSave">
            <summary>
            PostSave
            </summary>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.IAdapter">
            <summary>
            Adapter interface
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.IAdapter.Serialize">
            <summary>
            Serialize the 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.IAdapter.LoadFromXml(System.String,System.String)">
            <summary>
            Load the adapter information fromthe XmlData
            </summary>
            <param name="xmlData"></param>
            <param name="actionType">string action type</param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.IAdapter.DoAction">
            <summary>
            Perform the action.  Called from processor
            </summary>
            <returns></returns>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.IAdapter.Provider">
            <summary>
            Get the Provider for the adapter
            </summary>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.IPollingAgent">
            <summary>
            Polling agent interface
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.IPollingAgent.Initialize(Phoenix.Shared.Adapter.V1.AdapterProvider)">
            <summary>
            Initialized the Polling agent
            </summary>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.IPollingAgent.InitConnectionString(System.String)">
            <summary>
            Initialize the connection string
            </summary>
            <param name="connectionString"></param>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.IPollingAgent.GetNextMsgProcessor">
            <summary>
            Get the next message processor
            </summary>
            <returns></returns>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.IAdapterUIService">
            <summary>
            UI Service interface
            There is no extension at this time.  
            </summary>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.IAdapterProvider">
            <summary>
            Adapterprovider interface
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.IAdapterProvider.GetPollingAgent">
            <summary>
            Get the Polling agent
            </summary>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.IAdapterProvider.GetUIService">
            <summary>
            get the UiService
            </summary>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.IAdapterProvider.GetMessageProcessor">
            <summary>
            get the message processor
            </summary>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.IAdapterProvider.GetBusinessObject">
            <summary>
            get the Business object
            </summary>
            <returns></returns>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.IAdapterProvider.XmDataService">
            <summary>
            Get/Set the XmdataService
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.IAdapterProvider.ConfigString">
            <summary>
            Get the configuration string
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.IAdapterProvider.Initialize(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Innitialize the adapter provider
            </summary>
            <param name="adapterDef"></param>
            <param name="connectionString"></param>
            <param name="connectionStringFull"></param>
            <param name="appSetting"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.IAdapterProvider.GetMessageQueue">
            <summary>
            get the Message Queue
            </summary>
            <returns></returns>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.IMessage">
            <summary>
            IMessage
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.IMessage.AcctType">
            <summary>
            Account Type
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.IMessage.AcctNo">
            <summary>
            Account Number of the message
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.IMessage.ConversationId">
            <summary>
            ConversationId start with 0
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.IMessage.CreateDtTm">
            <summary>
            Create date/time o
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.IMessage.EmplId">
            <summary>
            Employee Id who created the message
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.IMessage.Id">
            <summary>
            Unique Identified of the message
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.IMessage.MessageTypeId">
            <summary>
            Tyoe of the message
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.IMessage.Priority">
            <summary>
            Priority of the message
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.IMessage.ParentMessageId">
            <summary>
            Parent message id, if this is spawned from
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.IMessage.ProcessDtTm">
            <summary>
            Process date time of this message
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.IMessage.Request">
            <summary>
            Request String
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.IMessage.Response">
            <summary>
            response string
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.IMessage.ResponseStatus">
            <summary>
            Response Status
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.IMessage.SequenceNo">
            <summary>
            Sequence No
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.IMessage.Status">
            <summary>
            Status of the message
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.IMessage.UnlockAfter">
            <summary>
            The message will be unlocked after this time
            </summary>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.IMessageQueue">
            <summary>
            Message queue interface 
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.IMessageQueue.DeQueue(System.String,System.Int16,System.Int16,System.DateTime,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Get the next message
            </summary>
            <param name="acctType"></param>
            <param name="priority"></param>
            <param name="messageTypeId"></param>
            <param name="createDt"></param>
            <param name="lockDuration"></param>
            <param name="maxRetryCount"></param>
            <param name="retCode"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.IMessageQueue.EnQueue(Phoenix.Shared.Adapter.V1.IMessage)">
            <summary>
            add this into the queue
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.IMessageQueue.UpdateMsg(System.String,Phoenix.Shared.Adapter.V1.MessgeStatus,Phoenix.Shared.Adapter.V1.HostStatus,System.String)">
            <summary>
            Update the message
            </summary>
            <param name="messageId"></param>
            <param name="status"></param>
            <param name="hostStatus"></param>
            <param name="response"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.IMessageQueue.UpdateMsg(System.String,Phoenix.Shared.Adapter.V1.MessgeStatus,Phoenix.Shared.Adapter.V1.HostStatus,System.String,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Update the message
            </summary>
            <param name="messageId"></param>
            <param name="status"></param>
            <param name="hostStatus"></param>
            <param name="response"></param>
            <param name="createNew"></param>
            <param name="maxRetryCount"></param>
            <param name="lockDuration"></param>
            <returns></returns>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.IXmDataService">
            <summary>
            Xmdata Service to Call the Xm within the call
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.IXmDataService.CallXm(System.String)">
            <summary>
            Call Xm to perform the action defined in the request
            NOTE this will be in a seperate transaction.
            </summary>
            <param name="xmlRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.IMessageProcessor">
            <summary>
            Message processor
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.IMessageProcessor.Initialize(Phoenix.Shared.Adapter.V1.AdapterProvider)">
            <summary>
            Initialize the message processor
            </summary>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.IMessageProcessor.Message">
            <summary>
            get/set the message associated for  the processor
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.IMessageProcessor.Process">
            <summary>
            Process the message
            </summary>
            <returns></returns>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.IAdapterDbHelper">
            <summary>
            adapter DbHelper
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.IAdapterDbHelper.Initialize(System.String,System.String,System.String)">
            <summary>
            Initialize
            </summary>
            <param name="relGroupname"></param>
            <param name="dbDefName"></param>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.IAdapterDbHelper.GetConnection(System.String)">
            <summary>
            get the connection
            </summary>
            <param name="connectionString"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.IAdapterDbHelper.GetCommand(System.Data.IDbConnection)">
            <summary>
            Get Command
            </summary>
            <param name="connection"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.IAdapterDbHelper.GetCommand(System.Data.IDbTransaction)">
            <summary>
            Get Command
            </summary>
            <param name="transaction"></param>
            <returns></returns>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.IAdapterDbHelper.DbPrefix">
            <summary>
            Gets the DbPrefix
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.IAdapterDbHelper.PhoenixDbName">
            <summary>
            Gets the PhoenixDbName
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.IAdapterDbHelper.IsPrimaryDbAvailable">
            <summary>
            Gets the IsPrimaryDbAvailable
            </summary>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.PScreenType">
            <summary>
            Phoenix common screen types.  Initialize Action manager with the default actions.
            The programmers should override OnAction methods
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.PScreenType.List">
            <summary>
             List view window.  Close, Edit, New actions will be available by default
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.PScreenType.ListWithSave">
            <summary>
            Editable List view window. Close and Save actions will be available by default
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.PScreenType.Editable">
            <summary>
            Editable Window.  Close, Save action will be available
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.PScreenType.EditableWithAddNext">
            <summary>
            Edit window with AddNext. Close, Save, AddNext actions will be available
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.PScreenType.Display">
            <summary>
            Display Window takes control. Still Close action will be provided.  This is the Default
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.PScreenType.None">
            <summary>
            Display None
            </summary>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.AppToolBarType">
            <summary>
            ToolBar Type
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.AppToolBarType.Dialog">
            <summary>
            Current window displayed is a dialog box
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.AppToolBarType.None">
            <summary>
            None, or Not Defined
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.AppToolBarType.Acct">
            <summary>
            Account reated window
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.AppToolBarType.StartUp">
            <summary>
             Start up window
             </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.AppToolBarType.Edit">
            <summary>
            Edit Window
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.AppToolBarType.Display">
            <summary>
            display window
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.AppToolBarType.NoEdit">
            <summary>
            No Edit window
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.AppToolBarType.DisplayAndImage">
            <summary>
            Display window and Image
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.AppToolBarType.Notes">
            <summary>
            Enable Notes for this window
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.AppToolBarType.NotesEdit">
            <summary>
            Enable Notes Edit for this window
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.AppToolBarType.PrevWindowView">
            <summary>
            Need previous window view
            </summary>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.IScreenProcessor">
            <summary>
            Screen process interface 
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.IScreenProcessor.ProcessActionClicked(Phoenix.Shared.Adapter.V1.Business.StringType,Phoenix.Shared.Adapter.V1.Business.StringType,Phoenix.Shared.Adapter.V1.Business.StringType)">
            <summary>
            Method to handle "ActionClicked" custom action
            </summary>
            <param name="actionName"></param>
            <param name="stateInfo"></param>
            <param name="response"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.IScreenProcessor.ProcessGetScreen">
            <summary>
            Method to handle GetScreen custom action
            </summary>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.IScreenProcessor.ProcessValidateField(Phoenix.Shared.Adapter.V1.Business.StringType,Phoenix.Shared.Adapter.V1.Business.StringType,Phoenix.Shared.Adapter.V1.Business.StringType,Phoenix.Shared.Adapter.V1.Business.StringType,Phoenix.Shared.Adapter.V1.Business.StringType)">
            <summary>
            method to process "ValidateField" custom action
            </summary>
            <param name="fieldName"></param>
            <param name="xmlTag"></param>
            <param name="prevValue"></param>
            <param name="newValue"></param>
            <param name="stateInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.IScreenProcessor.ProcessActionSave(Phoenix.Shared.Adapter.V1.Business.StringType,Phoenix.Shared.Adapter.V1.Business.StringType,Phoenix.Shared.Adapter.V1.Business.StringType,Phoenix.Shared.Adapter.V1.Business.StringType)">
            <summary>
            method to process "ActionSave" custom action
            </summary>
            <param name="oldState"></param>
            <param name="newState"></param>
            <param name="response"></param>
            <param name="prePostType"></param>
            <returns></returns>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.MessgeStatus">
            <summary>
            enumeration for the status of the message
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.MessgeStatus.Processing">
            <summary>
            
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.MessgeStatus.Pending">
            <summary>
            the message is not yet processed
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.MessgeStatus.Completed">
            <summary>
            the message is processed
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.MessgeStatus.Ignored">
            <summary>
            the messge processing was ignored
            </summary>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.HostStatus">
            <summary>
            Host status
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.HostStatus.Unknown">
            <summary>
            Unknown.. Most probably it is not called
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.HostStatus.Processed">
            <summary>
            Host processed the transaction and result is success
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.HostStatus.Rejected">
            <summary>
            Host processed the transaction but, thre transaction was rejected
            </summary>
        </member>
        <member name="F:Phoenix.Shared.Adapter.V1.HostStatus.Error">
            <summary>
            Host processed the transaction, resulted in error
            </summary>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.LogPublisher">
            <summary>
            LogPublisher Implements ILogPublisher and is reponsible for logging entries to the debug log.
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.LogPublisher.#ctor(System.String,System.Boolean)">
            <summary>
            Log Publisher
            </summary>
            <param name="logFileName"></param>
            <param name="isLogEnabled"></param>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.LogPublisher.#ctor(System.String,System.Boolean,System.Boolean)">
            <summary>
            Default Constructor that sets the logLevels to None.
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.LogPublisher.IsLogEnabled">
            <summary>
            True if the Logging is enabled. IF false no log will be enabled
            </summary>
        </member>
        <member name="P:Phoenix.Shared.Adapter.V1.LogPublisher.FileName">
            <summary>
            Get/Set File name for the logger.  Not supported for this publishers
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.LogPublisher.LogInfo(System.String)">
            <summary>
            Implements ILogPublisher LogInfo
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.LogPublisher.LogError(System.String)">
            <summary>
            Implements ILogPublisher LogError
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.LogPublisher.LogWarning(System.String)">
            <summary>
            Implements ILogPublisher LogWarning
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.LogPublisher.LogDebug(System.String)">
            <summary>
            Implements ILogPublisher LogWarning
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.LogPublisher.LogSql(System.String)">
            <summary>
            Implements ILogPublisher LogWarning
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.LogPublisher.WriteLog(System.String,System.String,System.Int32)">
            <summary>
            Write Log Information. The log will be created only when the 
            IsLogEnabled is true.
            If the FileName is emplty, the a Trace will be generated.
            </summary>
            <param name="logType"></param>
            <param name="message"></param>
            <param name="stackLevel"></param>
        </member>
        <member name="T:Phoenix.Shared.Adapter.V1.SerializationHelper">
            <summary>
            Serialization helper class. 
            </summary>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.SerializationHelper.ObjectToString(System.Object)">
            <summary>
            Serialize the objet to sting
            </summary>
            <param name="toConvert"></param>
            <returns></returns>
        </member>
        <member name="M:Phoenix.Shared.Adapter.V1.SerializationHelper.StringToObject(System.Type,System.String)">
            <summary>
            Serialize the string to object
            </summary>
            <param name="objType"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
    </members>
</doc>
